{"version":3,"file":"map.umd.min.289.js","mappings":"sKAAe,WAASA,GACtBA,EAAK,YAAa,mFAClBA,EAAK,YAAa,mHAClBA,EAAK,YAAa,oJAElBA,EAAKC,MAAQD,EAAK,aAClBA,EAAK,aAAeA,EAAK,aACzBA,EAAKE,OAASF,EAAK,aACnBA,EAAK,eAAiBA,EAAK,aAC3BA,EAAK,eAAiBA,EAAK,a,iCCTtB,IAAIG,EAAa,EACbC,EAAa,EACbC,EAAgB,EAChBC,EAAY,EACZC,EAAc,EACdC,EAAsB,QACtBC,EAAsB,YACtBC,EAAqB,qBACrBC,EAAa,oBACbC,EAAUC,KAAKC,GAAG,EAElBC,EAAQ,mBAERC,EAAM,mBAENC,EAAM,oBACNC,EAAQ,MAIRC,EAAM,oBACNC,EAAM,kBACNC,EAASR,KAAKC,GAAG,EACjBQ,EAAmB,EAAVT,KAAKC,GAKdS,EAAM,cC5BbC,EAAU,CAGdA,UAAoB,EACpBA,QAAkB,eAClBA,MAAgB,eAChBA,QAAkB,gBAClBA,QAAkB,eAClBA,KAAe,gBACfA,KAAe,eACfA,QAAkB,iBAClBA,OAAiB,gBACjBA,SAAmB,SACnBA,UAAoB,gBACpBA,OAAiB,WACjBA,KAAe,iBCff,GACEC,GAAI,CAACC,SAAU,OACf,QAAS,CAACA,SAAU,KAAO,OCFzBC,EAAc,iBACH,SAASC,EAAMC,EAAKC,GACjC,GAAID,EAAIC,GACN,OAAOD,EAAIC,GAEb,IAGIC,EAASC,EAHTC,EAAOC,OAAOD,KAAKJ,GACnBM,EAAOL,EAAIM,cAAcC,QAAQV,EAAa,IAC9CW,GAAK,EAET,QAASA,EAAIL,EAAKM,OAGhB,GAFAR,EAAUE,EAAKK,GACfN,EAAeD,EAAQK,cAAcC,QAAQV,EAAa,IACtDK,IAAiBG,EACnB,OAAON,EAAIE,GCRF,WAASS,GACtB,IAWIC,EAAWC,EAAUC,EAXrBC,EAAO,GACPC,EAAWL,EAAQM,MAAM,KAAKC,KAAI,SAASC,GAC7C,OAAOA,EAAEC,UACRC,QAAO,SAASC,GACjB,OAAOA,KACNC,QAAO,SAASC,EAAGF,GACpB,IAAIL,EAAQK,EAAEL,MAAM,KAGpB,OAFAA,EAAMQ,MAAK,GACXD,EAAEP,EAAM,GAAGV,eAAiBU,EAAM,GAC3BO,IACN,IAECE,EAAS,CACXC,KAAM,WACNC,MAAO,YACPC,GAAI,SAASV,GACXJ,EAAKc,GAAKC,WAAWX,IAEvBY,MAAO,SAASZ,GACdJ,EAAKiB,KAAOb,EAAI7B,GAElB2C,MAAO,SAASd,GACdJ,EAAKmB,KAAOf,EAAI7B,GAElB6C,MAAO,SAAShB,GACdJ,EAAKqB,KAAOjB,EAAI7B,GAElB+C,OAAQ,SAASlB,GACfJ,EAAKsB,OAASlB,EAAI7B,GAEpBgD,MAAO,SAASnB,GACdJ,EAAKwB,MAAQpB,EAAI7B,GAEnBkD,MAAO,SAASrB,GACdJ,EAAK0B,MAAQtB,EAAI7B,GAEnBoD,MAAO,SAASvB,GACdJ,EAAK4B,MAAQxB,EAAI7B,GAEnBsD,MAAO,SAASzB,GACdJ,EAAK6B,MAAQd,WAAWX,GAAK7B,GAE/BuD,MAAO,SAAS1B,GACdJ,EAAK+B,qBAAuBhB,WAAWX,IAEzC4B,KAAM,SAAS5B,GACbJ,EAAKiC,MAAQ7B,EAAI7B,GAEnB2D,IAAK,SAAS9B,GACZJ,EAAKmC,GAAKpB,WAAWX,IAEvBgC,IAAK,SAAShC,GACZJ,EAAKqC,GAAKtB,WAAWX,IAEvBkC,IAAK,SAASlC,GACZJ,EAAKuC,GAAKxB,WAAWX,IAEvBoC,EAAG,SAASpC,GACVJ,EAAKuC,GAAKxB,WAAWX,IAEvBG,EAAG,SAASH,GACVJ,EAAKO,EAAIQ,WAAWX,IAEtBqC,EAAG,SAASrC,GACVJ,EAAKyC,EAAI1B,WAAWX,IAEtBsC,IAAK,WACH1C,EAAK2C,KAAM,GAEbC,KAAM,SAASxC,GACbJ,EAAK4C,KAAOC,SAASzC,EAAG,KAE1B0C,MAAO,WACL9C,EAAK+C,UAAW,GAElBC,QAAS,SAAS5C,GAChBJ,EAAKiD,aAAe7C,EAAEF,MAAM,KAAKC,KAAI,SAASI,GAC5C,OAAOQ,WAAWR,OAGtBzB,SAAU,SAASsB,GACjBJ,EAAKlB,SAAWiC,WAAWX,IAE7B8C,MAAO,SAAS9C,GACdJ,EAAKkD,MAAQ9C,EACb,IAAI+C,EAAOnE,EAAMkE,EAAO9C,GACpB+C,IACFnD,EAAKlB,SAAWqE,EAAKrE,WAGzBsE,eAAgB,SAAShD,GACvBJ,EAAKoD,eAAiBhD,EAAI7B,GAE5B8E,GAAI,SAASjD,GACX,IAAIiD,EAAKrE,EAAMsE,EAAelD,GAC9BJ,EAAKoD,gBAAkBC,GAAUtC,WAAWX,IAAM7B,GAEpDgF,SAAU,SAASnD,GACP,UAANA,EACFJ,EAAKwD,UAAY,OAGjBxD,EAAKuD,SAAWnD,GAGpBqD,KAAM,SAASrD,GACb,IAAIsD,EAAY,SACC,IAAbtD,EAAET,SAAuD,IAAvC+D,EAAUC,QAAQvD,EAAEwD,OAAO,EAAG,MAAqD,IAAvCF,EAAUC,QAAQvD,EAAEwD,OAAO,EAAG,MAAqD,IAAvCF,EAAUC,QAAQvD,EAAEwD,OAAO,EAAG,MAC1I5D,EAAKyD,KAAOrD,IAGhByD,OAAQ,WACN7D,EAAK6D,QAAS,IAGlB,IAAKhE,KAAaI,EAChBH,EAAWG,EAASJ,GAChBA,KAAac,GACfZ,EAAeY,EAAOd,GACM,oBAAjBE,EACTA,EAAaD,GAGbE,EAAKD,GAAgBD,GAIvBE,EAAKH,GAAaC,EAMtB,MAH6B,kBAAnBE,EAAKwD,WAA6C,UAAnBxD,EAAKwD,YAC5CxD,EAAKwD,UAAYxD,EAAKwD,UAAUhE,eAE3BQ,E,YC3IT,IAEI8D,EAAU,EACVC,EAAU,EACVC,EAAS,EACTC,EAAS,EACTC,EAAa,EACbC,GAAS,EACTC,EAAa,KACbC,EAAQ,WACRC,EAAU,cACVC,EAAY,QACZC,EAAS,cAEb,SAASC,EAAOC,GACd,GAAoB,kBAATA,EACT,MAAM,IAAIC,MAAM,gBAElBC,KAAKF,KAAOA,EAAKrE,OACjBuE,KAAKC,MAAQ,EACbD,KAAKE,MAAQ,EACbF,KAAKG,KAAO,KACZH,KAAKI,MAAQ,GACbJ,KAAKK,cAAgB,KACrBL,KAAKM,MAAQpB,EA6If,SAASqB,EAAYC,GACnB,IAAIC,EAAS,IAAIZ,EAAOW,GACxB,OAAOC,EAAOC,SCrKhB,SAASC,EAAMtG,EAAKC,EAAKsG,GACnBC,MAAMC,QAAQxG,KAChBsG,EAAMG,QAAQzG,GACdA,EAAM,MAER,IAAI0G,EAAQ1G,EAAM,GAAKD,EAEnB4G,EAAML,EAAMhF,QAAO,SAASsF,EAAQC,GAEtC,OADAC,EAAMD,EAAMD,GACLA,IACNF,GACC1G,IACFD,EAAIC,GAAO2G,GAIR,SAASG,EAAM5F,EAAGnB,GACvB,GAAKwG,MAAMC,QAAQtF,GAAnB,CAIA,IAAIlB,EAAMkB,EAAE6F,QAIZ,GAHY,cAAR/G,IACFA,EAAMkB,EAAE6F,SAEO,IAAb7F,EAAET,OACJ,OAAI8F,MAAMC,QAAQtF,EAAE,KAClBnB,EAAIC,GAAO,QACX8G,EAAM5F,EAAE,GAAInB,EAAIC,UAGlBD,EAAIC,GAAOkB,EAAE,IAGf,GAAKA,EAAET,OAIP,GAAY,YAART,EAAJ,CAIA,GAAY,SAARA,EAKF,OAJMA,KAAOD,IACXA,EAAIC,GAAO,SAEbD,EAAIC,GAAKwB,KAAKN,GAOhB,IAAIV,EACJ,OALK+F,MAAMC,QAAQxG,KACjBD,EAAIC,GAAO,IAILA,GACN,IAAK,OACL,IAAK,SACL,IAAK,aAQH,OAPAD,EAAIC,GAAO,CACTgH,KAAM9F,EAAE,GAAGZ,cACX2G,QAAS/F,EAAE,SAEI,IAAbA,EAAET,QACJqG,EAAM5F,EAAE,GAAInB,EAAIC,KAGpB,IAAK,WACL,IAAK,YASH,OARAD,EAAIC,GAAO,CACTgH,KAAM9F,EAAE,GACRG,EAAGH,EAAE,GACLU,GAAIV,EAAE,SAES,IAAbA,EAAET,QACJqG,EAAM5F,EAAE,GAAInB,EAAIC,KAGpB,IAAK,eACL,IAAK,UACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,WACL,IAAK,UACL,IAAK,cACL,IAAK,gBACL,IAAK,SACL,IAAK,mBACL,IAAK,UACL,IAAK,UACL,IAAK,cACL,IAAK,WACL,IAAK,cACL,IAAK,iBACL,IAAK,SACL,IAAK,YACL,IAAK,cACL,IAAK,QAGH,OAFAkB,EAAE,GAAK,CAAC,OAAQA,EAAE,SAClBmF,EAAMtG,EAAKC,EAAKkB,GAElB,QACEV,GAAK,EACL,QAASA,EAAIU,EAAET,OACb,IAAK8F,MAAMC,QAAQtF,EAAEV,IACnB,OAAOsG,EAAM5F,EAAGnB,EAAIC,IAGxB,OAAOqG,EAAMtG,EAAKC,EAAKkB,SArEzBnB,EAAIC,GAAOkB,OAJXnB,EAAIC,IAAO,OAjBXD,EAAImB,IAAK,EDMbqE,EAAO2B,UAAUC,cAAgB,WAC/B,IAAIC,EAAO1B,KAAKF,KAAKE,KAAKE,SAC1B,GAAIF,KAAKM,QAAUjB,EACjB,MAAOG,EAAWmC,KAAKD,GAAO,CAC5B,GAAI1B,KAAKE,OAASF,KAAKF,KAAK/E,OAC1B,OAEF2G,EAAO1B,KAAKF,KAAKE,KAAKE,SAG1B,OAAQF,KAAKM,OACX,KAAKpB,EACH,OAAOc,KAAK4B,QAAQF,GACtB,KAAKvC,EACH,OAAOa,KAAKN,QAAQgC,GACtB,KAAKrC,EACH,OAAOW,KAAK6B,OAAOH,GACrB,KAAKpC,EACH,OAAOU,KAAK8B,WAAWJ,GACzB,KAAKtC,EACH,OAAOY,KAAK+B,OAAOL,GACrB,KAAKnC,EACH,SAGNM,EAAO2B,UAAUM,WAAa,SAASJ,GACrC,GAAa,MAATA,EAGF,OAFA1B,KAAKgC,MAAQ,SACbhC,KAAKM,MAAQjB,GAGf,GAAIM,EAAUgC,KAAKD,GAGjB,OAFA1B,KAAKgC,KAAOhC,KAAKgC,KAAKvG,YACtBuE,KAAKiC,UAAUP,GAGjB,MAAM,IAAI3B,MAAM,oBAAqB2B,EAAO,8BAAgC1B,KAAKE,QAEnFL,EAAO2B,UAAUS,UAAY,SAASP,GACpC,MAAa,MAATA,GACgB,OAAd1B,KAAKgC,MACPhC,KAAKK,cAAcvE,KAAKkE,KAAKgC,MAE/BhC,KAAKgC,KAAO,UACZhC,KAAKM,MAAQpB,IAGF,MAATwC,GACF1B,KAAKC,QACa,OAAdD,KAAKgC,OACPhC,KAAKK,cAAcvE,KAAKkE,KAAKgC,MAC7BhC,KAAKgC,KAAO,MAEdhC,KAAKM,MAAQpB,EACbc,KAAKK,cAAgBL,KAAKI,MAAM8B,WAC3BlC,KAAKK,gBACRL,KAAKM,MAAQf,UATjB,GAeFM,EAAO2B,UAAUO,OAAS,SAASL,GACjC,IAAI9B,EAAO+B,KAAKD,GAAhB,CAIA,GAAI/B,EAAUgC,KAAKD,GAGjB,OAFA1B,KAAKgC,KAAO7F,WAAW6D,KAAKgC,WAC5BhC,KAAKiC,UAAUP,GAGjB,MAAM,IAAI3B,MAAM,oBAAqB2B,EAAO,0BAA4B1B,KAAKE,OAR3EF,KAAKgC,MAAQN,GAUjB7B,EAAO2B,UAAUK,OAAS,SAASH,GACpB,MAATA,EAIJ1B,KAAKgC,MAAQN,EAHX1B,KAAKM,MAAQhB,GAMjBO,EAAO2B,UAAU9B,QAAU,SAASgC,GAClC,GAAIhC,EAAQiC,KAAKD,GACf1B,KAAKgC,MAAQN,MADf,CAIA,GAAa,MAATA,EAAc,CAChB,IAAIS,EAAa,GAWjB,OAVAA,EAAWrG,KAAKkE,KAAKgC,MACrBhC,KAAKC,QACa,OAAdD,KAAKG,KACPH,KAAKG,KAAOgC,EAEZnC,KAAKK,cAAcvE,KAAKqG,GAE1BnC,KAAKI,MAAMtE,KAAKkE,KAAKK,eACrBL,KAAKK,cAAgB8B,OACrBnC,KAAKM,MAAQpB,GAGf,IAAIS,EAAUgC,KAAKD,GAInB,MAAM,IAAI3B,MAAM,oBAAqB2B,EAAO,2BAA6B1B,KAAKE,OAH5EF,KAAKiC,UAAUP,KAKnB7B,EAAO2B,UAAUI,QAAU,SAASF,GAClC,GAAIjC,EAAMkC,KAAKD,GAGb,OAFA1B,KAAKgC,KAAON,OACZ1B,KAAKM,MAAQnB,GAGf,GAAa,MAATuC,EAGF,OAFA1B,KAAKgC,KAAO,QACZhC,KAAKM,MAAQjB,GAGf,GAAIO,EAAO+B,KAAKD,GAGd,OAFA1B,KAAKgC,KAAON,OACZ1B,KAAKM,MAAQlB,GAGf,IAAIO,EAAUgC,KAAKD,GAInB,MAAM,IAAI3B,MAAM,oBAAqB2B,EAAO,2BAA6B1B,KAAKE,OAH5EF,KAAKiC,UAAUP,IAKnB7B,EAAO2B,UAAUd,OAAS,WACxB,MAAOV,KAAKE,MAAQF,KAAKF,KAAK/E,OAC5BiF,KAAKyB,gBAEP,GAAIzB,KAAKM,QAAUf,EACjB,OAAOS,KAAKG,KAEd,MAAM,IAAIJ,MAAM,2BAA4BC,KAAKF,KAAO,eAAiBE,KAAKM,QElKhF,IAAI3G,EAAM,oBAMV,SAASyI,EAAO/H,EAAK0B,GACnB,IAAIsG,EAAUtG,EAAO,GACjBuG,EAASvG,EAAO,KACdsG,KAAWhI,IAASiI,KAAUjI,IAClCA,EAAIgI,GAAWhI,EAAIiI,GACG,IAAlBvG,EAAOhB,SACTV,EAAIgI,GAAWtG,EAAO,GAAG1B,EAAIgI,MAKnC,SAASE,EAAIC,GACX,OAAOA,EAAQ7I,EAGjB,SAAS8I,EAASC,GAahB,GAZiB,WAAbA,EAAIC,KACND,EAAIE,SAAW,UACO,aAAbF,EAAIC,MACbD,EAAIE,SAAW,WACfF,EAAIG,OAAQ,GAEkB,kBAAnBH,EAAII,WACbJ,EAAIE,SAAWlI,OAAOD,KAAKiI,EAAII,YAAY,GAE3CJ,EAAIE,SAAWF,EAAII,WAGnBJ,EAAIK,KAAM,CAEZ,IADA,IAAIC,EAAY,GACPlI,EAAI,EAAGmI,EAAKP,EAAIK,KAAKhI,OAAQD,EAAImI,IAAMnI,EAAG,CACjD,IAAI+D,EAAO,CAAC6D,EAAIK,KAAKjI,GAAG,GAAGF,cAAe8H,EAAIK,KAAKjI,GAAG,GAAGF,gBACvB,IAA9BiE,EAAK,GAAGE,QAAQ,WAAiC,MAAZF,EAAK,IAA0B,QAAZA,EAAK,KAA6B,UAAZA,EAAK,GACrFmE,GAAa,KAC0B,IAA9BnE,EAAK,GAAGE,QAAQ,WAAiC,MAAZF,EAAK,IAA0B,QAAZA,EAAK,KAA6B,UAAZA,EAAK,GAC5FmE,GAAa,KACyB,IAA7BnE,EAAK,GAAGE,QAAQ,UAAgC,MAAZF,EAAK,IAA0B,QAAZA,EAAK,KAA6B,SAAZA,EAAK,GAC3FmE,GAAa,KACyB,IAA7BnE,EAAK,GAAGE,QAAQ,UAAgC,MAAZF,EAAK,IAA0B,QAAZA,EAAK,IAA6B,SAAZA,EAAK,MAC3FmE,GAAa,KAGQ,IAArBA,EAAUjI,SACZiI,GAAa,KAEU,IAArBA,EAAUjI,SACZ2H,EAAI7D,KAAOmE,GAGXN,EAAIQ,OACNR,EAAIpE,MAAQoE,EAAIQ,KAAK5B,KAAK1G,cACR,UAAd8H,EAAIpE,QACNoE,EAAIpE,MAAQ,SAEVoE,EAAIQ,KAAK3B,UACM,WAAbmB,EAAIC,KACFD,EAAIS,OAAST,EAAIS,MAAMC,WACzBV,EAAIxI,SAAWwI,EAAIQ,KAAK3B,QAAQmB,EAAIS,MAAMC,SAASzH,GAGrD+G,EAAIxI,SAAWwI,EAAIQ,KAAK3B,UAI9B,IAAI8B,EAASX,EAAIY,OAoEjB,SAASC,EAAQf,GACf,IAAIgB,EAAQd,EAAIxI,UAAY,EAC5B,OAAOsI,EAAQgB,EArEA,WAAbd,EAAIC,OACNU,EAASX,GAEPW,IAIEA,EAAOF,MACTT,EAAI9D,UAAYyE,EAAOF,MAAM7B,KAAK1G,cAElC8H,EAAI9D,UAAYyE,EAAO/B,KAAK1G,cAEI,OAA9B8H,EAAI9D,UAAU6E,MAAM,EAAG,KACzBf,EAAI9D,UAAY8D,EAAI9D,UAAU6E,MAAM,IAEhB,oCAAlBf,EAAI9D,WAAqE,qBAAlB8D,EAAI9D,YAC7D8D,EAAI9D,UAAY,UAEI,aAAlB8D,EAAI9D,WAA8C,+BAAlB8D,EAAI9D,YACf,8BAAnB8D,EAAII,aACNJ,EAAIgB,QAAS,GAEfhB,EAAI9D,UAAY,SAEc,WAA5B8D,EAAI9D,UAAU6E,OAAO,KACvBf,EAAI9D,UAAY8D,EAAI9D,UAAU6E,MAAM,GAAK,IAEX,aAA5Bf,EAAI9D,UAAU6E,OAAO,KACvBf,EAAI9D,UAAY8D,EAAI9D,UAAU6E,MAAM,GAAK,KAEtCf,EAAI9D,UAAUG,QAAQ,WACzB2D,EAAI9D,UAAY,SAEdyE,EAAOF,OAASE,EAAOF,MAAMC,WAC/BV,EAAIiB,MAAQN,EAAOF,MAAMC,SAAS9B,KAAKzG,QAAQ,MAAO,IAAIA,QAAQ,gBAAiB,QACtC,kBAAzC6H,EAAIiB,MAAM/I,cAAc6I,MAAM,EAAG,MACnCf,EAAIiB,MAAQ,QAGdjB,EAAI/G,EAAI0H,EAAOF,MAAMC,SAASzH,EAC9B+G,EAAIxG,GAAKC,WAAWkH,EAAOF,MAAMC,SAASlH,GAAI,KAG5CmH,EAAOF,OAASE,EAAOF,MAAMS,UAC/BlB,EAAIrE,aAAegF,EAAOF,MAAMS,UAE7BlB,EAAI9D,UAAUG,QAAQ,eACzB2D,EAAI9D,UAAY,WAEb8D,EAAI9D,UAAUG,QAAQ,eACzB2D,EAAI9D,UAAY,YAEb8D,EAAI9D,UAAUG,QAAQ,UACrB2D,EAAI9D,UAAUG,QAAQ,6BAC1B2D,EAAI9D,UAAY,SAEI,YAAlB8D,EAAI9D,YACN8D,EAAI9D,UAAY,WAEb8D,EAAI9D,UAAUG,QAAQ,YACzB2D,EAAI9D,UAAY,UAGhB8D,EAAI7E,IAAMgG,SAASnB,EAAI7E,KACzB6E,EAAI7E,EAAI6E,EAAI/G,GAOd,IAAImI,EAAU,SAASnI,GACrB,OAAOyG,EAAOM,EAAK/G,IAEjBoI,EAAO,CACT,CAAC,sBAAuB,uBACxB,CAAC,sBAAuB,qCACxB,CAAC,sBAAuB,uBACxB,CAAC,sBAAuB,qCACxB,CAAC,gBAAiB,iBAClB,CAAC,gBAAiB,iBAClB,CAAC,gBAAiB,2BAClB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,4BACnB,CAAC,mBAAoB,oBACrB,CAAC,mBAAoB,+BACrB,CAAC,mBAAoB,6BACrB,CAAC,qBAAsB,sBACvB,CAAC,qBAAsB,oBACvB,CAAC,qBAAsB,8BACvB,CAAC,qBAAsB,4BACvB,CAAC,eAAgB,gBACjB,CAAC,KAAM,gBACP,CAAC,qBAAsB,sBACvB,CAAC,qBAAsB,sBACvB,CAAC,OAAQ,qBAAsBxB,GAC/B,CAAC,sBAAuB,uBACxB,CAAC,sBAAuB,uBACxB,CAAC,QAAS,sBAAuBA,GACjC,CAAC,KAAM,gBAAiBgB,GACxB,CAAC,KAAM,iBAAkBA,GACzB,CAAC,QAAS,mBAAoBhB,GAC9B,CAAC,OAAQ,qBAAsBA,GAC/B,CAAC,OAAQ,sBAAuBA,GAChC,CAAC,OAAQ,sBAAuBA,GAChC,CAAC,OAAQ,sBAAuBA,GAChC,CAAC,UAAW,WACZ,CAAC,QAAS,UAAWA,GACrB,CAAC,UAAW,SAEdwB,EAAKC,QAAQF,GACRpB,EAAI9F,QAAS8F,EAAIrF,OAA2B,4BAAjBqF,EAAIE,UAA2D,iCAAjBF,EAAIE,WAChFF,EAAI9F,MAAQ8F,EAAIrF,OAEbqF,EAAIhG,SAAUgG,EAAInG,MAA0B,6BAAjBmG,EAAIE,UAA4D,oCAAjBF,EAAIE,WACjFF,EAAIrG,KAAOkG,EAAIG,EAAInG,KAAO,EAAI,IAAM,IACpCmG,EAAIhG,OAASgG,EAAInG,MAGN,WAASmG,GACtB,IAAIuB,EAAOxD,EAAOiC,GACdC,EAAOsB,EAAK5C,QACZC,EAAO2C,EAAK5C,QAChB4C,EAAKlD,QAAQ,CAAC,OAAQO,IACtB2C,EAAKlD,QAAQ,CAAC,OAAQ4B,IACtB,IAAItI,EAAM,GAGV,OAFA+G,EAAM6C,EAAM5J,GACZoI,EAASpI,GACFA,ECpMT,SAAS7B,EAAK8I,GAEZ,IAAI4C,EAAOlE,KACX,GAAyB,IAArBmE,UAAUpJ,OAAc,CAC1B,IAAIqJ,EAAMD,UAAU,GACD,kBAARC,EACa,MAAlBA,EAAIC,OAAO,GACb7L,EAAK8I,GAAQgD,EAAUH,UAAU,IAGjC3L,EAAK8I,GAAQoB,EAAIyB,UAAU,IAG7B3L,EAAK8I,GAAQ8C,OAGZ,GAAyB,IAArBD,UAAUpJ,OAAc,CAC/B,GAAI8F,MAAMC,QAAQQ,GAChB,OAAOA,EAAK/F,KAAI,SAASC,GACnBqF,MAAMC,QAAQtF,GAChBhD,EAAK+L,MAAML,EAAM1I,GAGjBhD,EAAKgD,MAIN,GAAoB,kBAAT8F,GACd,GAAIA,KAAQ9I,EACV,OAAOA,EAAK8I,OAGP,SAAUA,EACjB9I,EAAK,QAAU8I,EAAKkD,MAAQlD,EAErB,SAAUA,EACjB9I,EAAK,QAAU8I,EAAKmD,MAAQnD,EAErB,YAAaA,EACpB9I,EAAK,WAAa8I,EAAKoD,SAAWpD,EAGlCqD,QAAQC,IAAItD,GAEd,QAKJuD,EAAQrM,GACR,QClDA,SAASsM,EAAQC,GACf,MAAuB,kBAATA,EAEhB,SAASC,EAAQD,GACf,OAAOA,KAAQvM,EAEjB,IAAIyM,EAAY,CAAC,eAAgB,UAAW,SAAS,SAAS,SAAS,WAAY,UAAW,cAAe,gBAAiB,SAAU,kBACxI,SAASC,GAAQH,GACf,OAAOE,EAAUE,MAAK,SAAUnD,GAC9B,OAAO+C,EAAKhG,QAAQiD,IAAS,KAGjC,IAAIoD,GAAQ,CAAC,OAAQ,SAAU,OAAQ,UACvC,SAASC,GAAclE,GACrB,IAAImE,EAAOlL,EAAM+G,EAAM,aACvB,GAAKmE,EAAL,CAGA,IAAIP,EAAO3K,EAAMkL,EAAM,QACvB,OAAOP,GAAQK,GAAMrG,QAAQgG,IAAS,GAExC,SAASQ,GAAapE,GACpB,IAAIqE,EAAMpL,EAAM+G,EAAM,aACtB,GAAKqE,EAGL,OAAOpL,EAAMoL,EAAK,SAEpB,SAASC,GAASV,GAChB,MAAmB,MAAZA,EAAK,GAEd,SAASW,GAAMX,GACb,IAAID,EAAQC,GAqBV,OAAOA,EAnBP,GAAIC,EAAQD,GACV,OAAOvM,EAAKuM,GAEd,GAAIG,GAAQH,GAAO,CACjB,IAAI9D,EAAMyB,EAAIqC,GAEd,GAAIM,GAAcpE,GAChB,OAAOzI,EAAAA,aAET,IAAImN,EAAeJ,GAAatE,GAChC,OAAI0E,EACKC,EAAQD,GAEV1E,EAET,OAAIwE,GAASV,GACJa,EAAQb,QADjB,EAQJ,UC7De,YAASc,EAAaC,GAEnC,IAAIlF,EAAOmF,EACX,GAFAF,EAAcA,GAAe,IAExBC,EACH,OAAOD,EAET,IAAKE,KAAYD,EACflF,EAAQkF,EAAOC,QACDC,IAAVpF,IACFiF,EAAYE,GAAYnF,GAG5B,OAAOiF,ECZM,YAASI,EAAQC,EAAQC,GACtC,IAAIC,EAAMH,EAASC,EACnB,OAAOC,EAAU9M,KAAKgN,KAAK,EAAID,EAAMA,GCFxB,YAASE,GACtB,OAAOA,EAAE,GAAK,EAAI,ECGL,YAASA,GACtB,OAAQjN,KAAKkN,IAAID,IAAMvM,EAAOuM,EAAKA,EAAKE,GAAKF,GAAKxM,ECHrC,YAASmM,EAAQQ,EAAKP,GACnC,IAAIE,EAAMH,EAASC,EACfQ,EAAM,GAAMT,EAEhB,OADAG,EAAM/M,KAAKsN,KAAM,EAAIP,IAAQ,EAAIA,GAAOM,GAChCrN,KAAKuN,IAAI,IAAOxN,EAAUqN,IAAQL,ECJ7B,YAASH,EAAQY,GAI9B,IAHA,IACIT,EAAKU,EADLC,EAAS,GAAMd,EAEfQ,EAAMrN,EAAU,EAAIC,KAAK2N,KAAKH,GACzB/L,EAAI,EAAGA,GAAK,GAAIA,IAIvB,GAHAsL,EAAMH,EAAS5M,KAAK4N,IAAIR,GACxBK,EAAO1N,EAAU,EAAIC,KAAK2N,KAAKH,EAAMxN,KAAKsN,KAAM,EAAIP,IAAQ,EAAIA,GAAOW,IAAYN,EACnFA,GAAOK,EACHzN,KAAKkN,IAAIO,IAAS,MACpB,OAAOL,EAIX,OAAQ,KCTH,SAASS,KACd,IAAId,EAAMpG,KAAKnC,EAAImC,KAAKrE,EACxBqE,KAAKmH,GAAK,EAAIf,EAAMA,EACf,OAAQpG,OACXA,KAAKzC,GAAK,GAEP,OAAQyC,OACXA,KAAKvC,GAAK,GAEZuC,KAAKoH,EAAI/N,KAAKgN,KAAKrG,KAAKmH,IACpBnH,KAAKtD,OACHsD,KAAK0D,OACP1D,KAAKrC,GAAKtE,KAAKgO,IAAIrH,KAAKtD,QAGxBsD,KAAKrC,GAAK2J,GAAMtH,KAAKoH,EAAG/N,KAAK4N,IAAIjH,KAAKtD,QAASrD,KAAKgO,IAAIrH,KAAKtD,SAI1DsD,KAAKrC,KACJqC,KAAKpC,EACPoC,KAAKrC,GAAKqC,KAAKpC,EAGfoC,KAAKrC,GAAK,GASX,SAAS4J,GAAQ1L,GACtB,IAOIyK,EAAGkB,EAPHC,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAEZ,GAAIE,EAAM9N,EAAM,IAAM8N,EAAM9N,GAAO,IAAM6N,EAAM7N,EAAM,KAAO6N,EAAM7N,GAAO,IACvE,OAAO,KAIT,GAAIP,KAAKkN,IAAIlN,KAAKkN,IAAImB,GAAOtO,IAAYM,EACvC,OAAO,KAGP,GAAIsG,KAAK0D,OACP4C,EAAItG,KAAKzC,GAAKyC,KAAKrE,EAAIqE,KAAKrC,GAAKgK,GAAWF,EAAMzH,KAAKpD,OACvD4K,EAAIxH,KAAKvC,GAAKuC,KAAKrE,EAAIqE,KAAKrC,GAAKtE,KAAKuL,IAAIvL,KAAKuN,IAAI/M,EAAS,GAAM6N,QAE/D,CACH,IAAIxB,EAAS7M,KAAK4N,IAAIS,GAClBb,EAAKe,GAAM5H,KAAKoH,EAAGM,EAAKxB,GAC5BI,EAAItG,KAAKzC,GAAKyC,KAAKrE,EAAIqE,KAAKrC,GAAKgK,GAAWF,EAAMzH,KAAKpD,OACvD4K,EAAIxH,KAAKvC,GAAKuC,KAAKrE,EAAIqE,KAAKrC,GAAKtE,KAAKuL,IAAIiC,GAI5C,OAFAhL,EAAEyK,EAAIA,EACNzK,EAAE2L,EAAIA,EACC3L,EAMJ,SAASgM,GAAQhM,GAEtB,IAEI4L,EAAKC,EAFLpB,EAAIzK,EAAEyK,EAAItG,KAAKzC,GACfiK,EAAI3L,EAAE2L,EAAIxH,KAAKvC,GAGnB,GAAIuC,KAAK0D,OACPgE,EAAMtO,EAAU,EAAIC,KAAK2N,KAAK3N,KAAKyO,KAAKN,GAAKxH,KAAKrE,EAAIqE,KAAKrC,UAExD,CACH,IAAIkJ,EAAKxN,KAAKyO,KAAKN,GAAKxH,KAAKrE,EAAIqE,KAAKrC,KAEtC,GADA+J,EAAMK,GAAM/H,KAAKoH,EAAGP,IACP,OAATa,EACF,OAAO,KAOX,OAJAD,EAAME,GAAW3H,KAAKpD,MAAQ0J,GAAKtG,KAAKrE,EAAIqE,KAAKrC,KAEjD9B,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,EAGF,IAAImM,GAAQ,CAAC,WAAY,wCAAyC,eAAgB,4BAA6B,QACtH,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,IClGF,SAASd,MAIhB,SAASe,GAASC,GAChB,OAAOA,EAIF,IAAIF,GAAQ,CAAC,UAAW,YAC/B,IACEd,KAAMA,GACNK,QAASU,GACTJ,QAASI,GACTD,MAAOA,ICZLG,GAAQ,CAACC,GAAMC,IACfL,GAAQ,GACRM,GAAY,GAEhB,SAASC,GAAIvM,EAAMlB,GACjB,IAAI0N,EAAMF,GAAUvN,OACpB,OAAKiB,EAAKgM,OAIVM,GAAUE,GAAOxM,EACjBA,EAAKgM,MAAMhE,SAAQ,SAASyE,GAC1BT,GAAMS,EAAE7N,eAAiB4N,KAEpBxI,OAPL2E,QAAQC,IAAI9J,IACL,GAWJ,SAAS4N,GAAIpH,GAClB,IAAKA,EACH,OAAO,EAET,IAAImH,EAAInH,EAAK1G,cACb,MAAwB,qBAAboN,GAAMS,IAAsBH,GAAUN,GAAMS,IAC9CH,GAAUN,GAAMS,SADzB,EAKK,SAASE,KACdR,GAAMnE,QAAQuE,IAEhB,QACEI,MAAOA,GACPJ,IAAKA,GACLG,IAAKA,ICrCH1O,GAAU,CAEdA,MAAgB,CACd2B,EAAG,QACHO,GAAI,QACJ0M,YAAa,cAGf5O,MAAgB,CACd2B,EAAG,QACHO,GAAI,QACJ0M,YAAa,6BAGf5O,MAAgB,CACd2B,EAAG,QACHO,GAAI,cACJ0M,YAAa,wBAGf5O,MAAgB,CACd2B,EAAG,QACHO,GAAI,QACJ0M,YAAa,YAGf5O,KAAe,CACb2B,EAAG,YACHkC,EAAG,WACH+K,YAAa,aAGf5O,KAAe,CACb2B,EAAG,QACHO,GAAI,OACJ0M,YAAa,uBAGf5O,MAAgB,CACd2B,EAAG,QACHO,GAAI,OACJ0M,YAAa,4BAGf5O,SAAmB,CACjB2B,EAAG,YACHkC,EAAG,YACH+K,YAAa,iBAGf5O,OAAiB,CACf2B,EAAG,WACHO,GAAI,IACJ0M,YAAa,8BAGf5O,QAAkB,CAChB2B,EAAG,QACHO,GAAI,OACJ0M,YAAa,mCAGf5O,MAAgB,CACd2B,EAAG,QACHO,GAAI,cACJ0M,YAAa,qBAGf5O,OAAiB,CACf2B,EAAG,YACHO,GAAI,YACJ0M,YAAa,eAGf5O,SAAmB,CACjB2B,EAAG,YACHO,GAAI,YACJ0M,YAAa,yBAGf5O,OAAiB,CACf2B,EAAG,UACHkC,EAAG,UACH+K,YAAa,eAGf5O,OAAiB,CACf2B,EAAG,YACHO,GAAI,SACJ0M,YAAa,oBAGf5O,OAAiB,CACf2B,EAAG,kBACHO,GAAI,kBACJ0M,YAAa,eAGf5O,IAAc,CACZ2B,EAAG,UACHO,GAAI,OACJ0M,YAAa,mCAGf5O,OAAiB,CACf2B,EAAG,QACHO,GAAI,MACJ0M,YAAa,2BAGf5O,QAAkB,CAChB2B,EAAG,WACHO,GAAI,SACJ0M,YAAa,gBAGf5O,QAAkB,CAChB2B,EAAG,YACHO,GAAI,SACJ0M,YAAa,gBAGf5O,QAAkB,CAChB2B,EAAG,YACHO,GAAI,SACJ0M,YAAa,gBAGf5O,QAAkB,CAChB2B,EAAG,YACHO,GAAI,SACJ0M,YAAa,gBAGf5O,QAAkB,CAChB2B,EAAG,YACHO,GAAI,SACJ0M,YAAa,gBAGf5O,QAAkB,CAChB2B,EAAG,YACHO,GAAI,SACJ0M,YAAa,6BAGf5O,QAAkB,CAChB2B,EAAG,QACHO,GAAI,MACJ0M,YAAa,gCAGf5O,SAAmB,CACjB2B,EAAG,QACHO,GAAI,MACJ0M,YAAa,gBAGf5O,QAAkB,CAChB2B,EAAG,QACHO,GAAI,MACJ0M,YAAa,gBAGf5O,QAAkB,CAChB2B,EAAG,QACHO,GAAI,MACJ0M,YAAa,gBAGf5O,MAAgB,CACd2B,EAAG,QACHO,GAAI,IACJ0M,YAAa,SAGf5O,KAAe,CACb2B,EAAG,QACHO,GAAI,IACJ0M,YAAa,gCAGf5O,MAAgB,CACd2B,EAAG,QACHO,GAAI,OACJ0M,YAAa,cAGf5O,MAAgB,CACd2B,EAAG,QACHO,GAAI,QACJ0M,YAAa,cAGf5O,MAAgB,CACd2B,EAAG,QACHO,GAAI,IACJ0M,YAAa,mBAGf5O,SAAmB,CACjB2B,EAAG,UACHkC,EAAG,UACH+K,YAAa,0BAGf5O,QAAkB,CAChB2B,EAAG,QACHO,GAAI,QACJ0M,YAAa,yBAGf5O,MAAgB,CACd2B,EAAG,QACHO,GAAI,MACJ0M,YAAa,oBAGf5O,OAAiB,CACf2B,EAAG,QACHkC,EAAG,aACH+K,YAAa,kBAGf5O,QAAkB,CAChB2B,EAAG,QACHkC,EAAG,aACH+K,YAAa,WAGf5O,MAAgB,CACd2B,EAAG,QACHO,GAAI,MACJ0M,YAAa,UAGf5O,MAAgB,CACd2B,EAAG,QACHO,GAAI,OACJ0M,YAAa,UAGf5O,KAAe,CACb2B,EAAG,QACHO,GAAI,OACJ0M,YAAa,WAGJnQ,GAAQuB,GAAQvB,MAAQ,CACjCkD,EAAG,QACHO,GAAI,cACJ0M,YAAa,UCvPR,SAASC,GAAalN,EAAGkC,EAAG3B,EAAI6B,GACrC,IAAI+K,EAAKnN,EAAIA,EACToN,EAAKlL,EAAIA,EACTsJ,GAAM2B,EAAKC,GAAMD,EACjB1B,EAAI,EACJrJ,GACFpC,GAAK,EAAIwL,GAAM5N,EAAQ4N,GAAM3N,EAAM2N,EAAK1N,IACxCqP,EAAKnN,EAAIA,EACTwL,EAAK,GAELC,EAAI/N,KAAKgN,KAAKc,GAEhB,IAAI6B,GAAOF,EAAKC,GAAMA,EACtB,MAAO,CACL5B,GAAIA,EACJC,EAAGA,EACH4B,IAAKA,GAGF,SAAStF,GAAO/H,EAAGkC,EAAG3B,EAAIyH,EAAOD,GACtC,IAAK/H,EAAG,CACN,IAAIsN,EAAU7O,EAAM8O,GAAWvF,GAC1BsF,IACHA,EAAUxQ,IAEZkD,EAAIsN,EAAQtN,EACZkC,EAAIoL,EAAQpL,EACZ3B,EAAK+M,EAAQ/M,GAUf,OAPIA,IAAO2B,IACTA,GAAK,EAAM,EAAM3B,GAAMP,IAEd,IAAPO,GAAY7C,KAAKkN,IAAI5K,EAAIkC,GAAKnE,KAChCgK,GAAS,EACT7F,EAAIlC,GAEC,CACLA,EAAGA,EACHkC,EAAGA,EACH3B,GAAIA,EACJwH,OAAQA,GDiNZ1J,GAAQ0J,OAAS,CACf/H,EAAG,QACHkC,EAAG,QACH+K,YAAa,6BEjQf,IAAI5O,GAAU,GCEd,SAASiC,GAAM2C,EAAWP,EAAc1C,EAAGkC,EAAGsJ,EAAI6B,EAAKrK,GACrD,IAAIsC,EAAM,GAgCV,OA7BEA,EAAIkI,gBADYnD,IAAdpH,GAAyC,SAAdA,EACZ7F,EAEAD,EAGfuF,IACF4C,EAAI5C,aAAeA,EAAa9C,IAAIY,YACR,IAAxB8E,EAAI5C,aAAa,IAAoC,IAAxB4C,EAAI5C,aAAa,IAAoC,IAAxB4C,EAAI5C,aAAa,KAC7E4C,EAAIkI,WAAaxQ,GAEfsI,EAAI5C,aAAatD,OAAS,IACA,IAAxBkG,EAAI5C,aAAa,IAAoC,IAAxB4C,EAAI5C,aAAa,IAAoC,IAAxB4C,EAAI5C,aAAa,IAAoC,IAAxB4C,EAAI5C,aAAa,KAC1G4C,EAAIkI,WAAavQ,EACjBqI,EAAI5C,aAAa,IAAMlF,EACvB8H,EAAI5C,aAAa,IAAMlF,EACvB8H,EAAI5C,aAAa,IAAMlF,EACvB8H,EAAI5C,aAAa,GAAM4C,EAAI5C,aAAa,GAAK,IAAa,KAK5DM,IACFsC,EAAIkI,WAAatQ,EACjBoI,EAAImI,MAAQzK,GAEdsC,EAAItF,EAAIA,EACRsF,EAAIpD,EAAIA,EACRoD,EAAIkG,GAAKA,EACTlG,EAAI+H,IAAMA,EACH/H,EDjCTjH,GAAQqP,MAAQ,CACdjL,QAAS,QACT6K,QAAS,QACTK,UAAW,SAGbtP,GAAQuP,OAAS,CACfnL,QAAS,yBACT6K,QAAS,SACTK,UAAW,SAGbtP,GAAQwP,OAAS,CACfpL,QAAS,uBACT6K,QAAS,QACTK,UAAW,wCAGbtP,GAAQyP,MAAQ,CACdrL,QAAS,QACT6K,QAAS,QACTK,UAAW,6BAGbtP,GAAQ0P,MAAQ,CACd/K,SAAU,2CACVsK,QAAS,SACTK,UAAW,6BAGbtP,GAAQ2P,QAAU,CAChBvL,QAAS,0CACT6K,QAAS,SACTK,UAAW,+BAGbtP,GAAQ4P,SAAW,CACjBxL,QAAS,mBACT6K,QAAS,UACTK,UAAW,yBAGbtP,GAAQ6P,cAAgB,CACtBzL,QAAS,kDACT6K,QAAS,SACTK,UAAW,iBAGbtP,GAAQ8P,OAAS,CACf1L,QAAS,qDACT6K,QAAS,OACTK,UAAW,kBAGbtP,GAAQ+P,MAAQ,CACd3L,QAAS,qDACT6K,QAAS,WACTK,UAAW,gBAGbtP,GAAQgQ,WAAa,CACnB5L,QAAS,yBACT6K,QAAS,OACTK,UAAW,cAGbtP,GAAQiQ,OAAS,CACf7L,QAAS,6CACT6K,QAAS,OACTK,UAAW,mCAGbtP,GAAQkQ,OAAS,CACf9L,QAAS,yDACT6K,QAAS,OACTK,UAAW,aAGbtP,GAAQmQ,OAAS,CACf/L,QAAS,aACT6K,QAAS,SACTK,UAAW,kBAGbtP,GAAQoQ,SAAW,CACjBhM,QAAS,eACT6K,QAAS,SACTK,UAAW,YAGbtP,GAAQqQ,cAAgB,CACtBjM,QAAS,cACT6K,QAAS,SACTK,UAAW,yBAGbtP,GAAQsQ,MAAQ,CACdlM,QAAS,wDACT6K,QAAS,OACTK,UAAW,8BC/Db,UChCIiB,I,gCAAiB,IAMN,SAASC,GAAQlQ,EAAKmQ,GACnC,IAAIC,EAAO,IAAIC,SAASF,GACpBG,EAAiBC,GAAmBH,GACpCI,EAASC,GAAWL,EAAME,GAC1BE,EAAOE,UAAY,GACrBrG,QAAQC,IAAI,uFAEd,IAAIqG,EAAWC,GAAaR,EAAMI,EAAQF,GACtCJ,EAAU,CAACM,OAAQA,EAAQG,SAAUA,GAEzC,OADAV,GAAejQ,GAAOkQ,EACfA,EAMF,SAASW,GAAYxM,GAE1B,QAAiBqH,IAAbrH,EAA0B,OAAO,KACrC,IAAIyK,EAAQzK,EAASrD,MAAM,KAC3B,OAAO8N,EAAM7N,IAAI6P,IAGnB,SAASA,GAAmBxK,GAC1B,GAAqB,IAAjBA,EAAM7F,OACR,OAAO,KAET,IAAIsQ,EAAwB,MAAbzK,EAAM,GAIrB,OAHIyK,IACFzK,EAAQA,EAAM6C,MAAM,IAER,SAAV7C,EACK,CAACU,KAAM,OAAQgK,WAAYD,EAAUE,KAAM,KAAMC,QAAQ,GAE3D,CACLlK,KAAMV,EACN0K,WAAYD,EACZE,KAAMhB,GAAe3J,IAAU,KAC/B4K,QAAQ,GAIZ,SAASC,GAAiBC,GACxB,OAAQA,EAAU,KAAQrS,KAAKC,GAAK,IAGtC,SAASuR,GAAmBH,GAC1B,IAAIiB,EAAUjB,EAAKkB,SAAS,GAAG,GAC/B,OAAgB,KAAZD,IAGJA,EAAUjB,EAAKkB,SAAS,GAAG,GACX,KAAZD,GACFhH,QAAQkH,KAAK,sEAER,GAGT,SAASd,GAAWL,EAAME,GACxB,MAAO,CACLe,QAASjB,EAAKkB,SAAS,EAAGhB,GAC1BkB,eAAgBpB,EAAKkB,SAAS,GAAIhB,GAClCI,UAAWN,EAAKkB,SAAS,GAAIhB,GAC7BmB,UAAWC,GAAatB,EAAM,GAAI,IAAQjP,OAC1CwQ,kBAAmBvB,EAAKwB,WAAW,IAAKtB,GACxCuB,kBAAmBzB,EAAKwB,WAAW,IAAKtB,GACxCwB,gBAAiB1B,EAAKwB,WAAW,IAAKtB,GACtCyB,gBAAiB3B,EAAKwB,WAAW,IAAKtB,IAI1C,SAASoB,GAAatB,EAAM/B,EAAO2D,GACjC,OAAOC,OAAOC,aAAajI,MAAM,KAAM,IAAIkI,WAAW/B,EAAKgC,OAAOjJ,MAAMkF,EAAO2D,KAGjF,SAASpB,GAAaR,EAAMI,EAAQF,GAGlC,IAFA,IAAI+B,EAAa,IACbvD,EAAQ,GACHtO,EAAI,EAAGA,EAAIgQ,EAAOE,UAAWlQ,IAAK,CACzC,IAAI8R,EAAYC,GAAenC,EAAMiC,EAAY/B,GAC7CkC,EAAQC,GAAcrC,EAAMiC,EAAYC,EAAWhC,GACnDoC,EAAiB3T,KAAK4T,MACxB,GAAKL,EAAUM,eAAiBN,EAAUO,gBAAkBP,EAAUQ,mBACpEC,EAAiBhU,KAAK4T,MACxB,GAAKL,EAAUU,cAAgBV,EAAUW,eAAiBX,EAAUY,kBAEtEpE,EAAMtN,KAAK,CACT2R,GAAI,CAAChC,GAAiBmB,EAAUO,gBAAiB1B,GAAiBmB,EAAUW,gBAC5EG,IAAK,CAACjC,GAAiBmB,EAAUQ,mBAAoB3B,GAAiBmB,EAAUY,mBAChFG,IAAK,CAACX,EAAgBK,GACtBO,MAAOhB,EAAUiB,cACjBC,IAAKC,GAASjB,KAGlB,OAAO1D,EAGT,SAAS2E,GAASjB,GAChB,OAAOA,EAAMvR,KAAI,SAAUyS,GAAI,MAAO,CAACvC,GAAiBuC,EAAEC,gBAAiBxC,GAAiBuC,EAAEE,mBAGhG,SAASrB,GAAenC,EAAMyD,EAAQvD,GACpC,MAAO,CACLtJ,KAAM0K,GAAatB,EAAMyD,EAAS,EAAGA,EAAS,IAAI1S,OAClD2S,OAAQpC,GAAatB,EAAMyD,EAAS,GAAIA,EAAS,GAAK,GAAG1S,OACzD8R,cAAe7C,EAAKwB,WAAWiC,EAAS,GAAIvD,GAC5C0C,cAAe5C,EAAKwB,WAAWiC,EAAS,GAAIvD,GAC5CuC,eAAgBzC,EAAKwB,WAAWiC,EAAS,IAAKvD,GAC9CsC,eAAgBxC,EAAKwB,WAAWiC,EAAS,IAAKvD,GAC9C4C,iBAAkB9C,EAAKwB,WAAWiC,EAAS,IAAKvD,GAChDwC,kBAAmB1C,EAAKwB,WAAWiC,EAAS,IAAKvD,GACjDiD,cAAenD,EAAKkB,SAASuC,EAAS,IAAKvD,IAI/C,SAASmC,GAAcrC,EAAMyD,EAAQE,EAAYzD,GAI/C,IAHA,IAAI0D,EAAcH,EAAS,IACvBI,EAAmB,GACnBC,EAAmB,GACd1T,EAAI,EAAGA,EAAIuT,EAAWR,cAAe/S,IAAK,CACjD,IAAI2T,EAAS,CACXP,cAAexD,EAAKgE,WAAWJ,EAAcxT,EAAIyT,EAAkB3D,GACnEqD,eAAgBvD,EAAKgE,WAAWJ,EAAcxT,EAAIyT,EAAmB,EAAG3D,GACxE+D,iBAAkBjE,EAAKgE,WAAWJ,EAAcxT,EAAIyT,EAAmB,EAAG3D,GAC1EgE,kBAAmBlE,EAAKgE,WAAWJ,EAAcxT,EAAIyT,EAAmB,GAAI3D,IAE9E4D,EAAiB1S,KAAK2S,GAExB,OAAOD,ECnIT,SAASK,GAAWC,EAAQC,GAC1B,KAAM/O,gBAAgB6O,IACpB,OAAO,IAAIA,GAAWC,GAExBC,EAAWA,GAAY,SAASC,GAC9B,GAAGA,EACD,MAAMA,GAGV,IAAIC,EAAOC,GAAUJ,GACrB,GAAmB,kBAATG,EAAV,CAIA,IAAIE,EAAUN,GAAWO,YAAY1G,IAAIuG,EAAKrM,UAC9C,GAAIuM,EAAJ,CAIA,GAAIF,EAAKrQ,WAAgC,SAAnBqQ,EAAKrQ,UAAsB,CAC/C,IAAIyQ,EAAWjV,EAAMkV,GAAOL,EAAKrQ,WAC7ByQ,IACFJ,EAAK5Q,aAAe4Q,EAAK5Q,eAAiBgR,EAASjR,QAAUiR,EAASjR,QAAQ9C,MAAM,KAAO,MAC3F2T,EAAKtL,MAAQ0L,EAASpG,QACtBgG,EAAK3F,UAAY+F,EAAS/F,UAAY+F,EAAS/F,UAAY2F,EAAKrQ,WAGpEqQ,EAAKtR,GAAKsR,EAAKtR,IAAM,EACrBsR,EAAKpQ,KAAOoQ,EAAKpQ,MAAQ,MACzBoQ,EAAKtL,MAAQsL,EAAKtL,OAAS,QAC3BsL,EAAK1S,KAAO0S,EAAK1S,MAAQ0S,EAAK5S,KAE9B,IAAIkT,EAAUC,GAAUP,EAAKtT,EAAGsT,EAAKpR,EAAGoR,EAAK/S,GAAI+S,EAAKtL,MAAOsL,EAAKvL,QAC9D+L,EAAMC,GAAgBH,EAAQ5T,EAAG4T,EAAQ1R,EAAG0R,EAAQrT,GAAI+S,EAAKlR,KAC7DY,EAAWwM,GAAY8D,EAAKtQ,UAC5BgR,EAAWV,EAAKhT,OAASA,GAAMgT,EAAKrQ,UAAWqQ,EAAK5Q,aAAckR,EAAQ5T,EAAG4T,EAAQ1R,EAAG4R,EAAItI,GAAIsI,EAAIzG,IACtGrK,GAEFiR,GAAO5P,KAAMiP,GACbW,GAAO5P,KAAMmP,GAGbnP,KAAKrE,EAAI4T,EAAQ5T,EACjBqE,KAAKnC,EAAI0R,EAAQ1R,EACjBmC,KAAK9D,GAAKqT,EAAQrT,GAClB8D,KAAK0D,OAAS6L,EAAQ7L,OAGtB1D,KAAKmH,GAAKsI,EAAItI,GACdnH,KAAKoH,EAAIqI,EAAIrI,EACbpH,KAAKgJ,IAAMyG,EAAIzG,IAGfhJ,KAAK/D,MAAQ0T,EAGb3P,KAAKkH,OAGL6H,EAAS,KAAM/O,WA3Cb+O,EAASD,QALTC,EAASD,GAmDbD,GAAWO,YAAcA,GACzBP,GAAWO,YAAYzG,QACvB,UCvEO,SAASkH,GAAc/J,EAAQgK,GACpC,OAAIhK,EAAOqD,aAAe2G,EAAK3G,eAEpBrD,EAAOnK,IAAMmU,EAAKnU,GAAKtC,KAAKkN,IAAIT,EAAOqB,GAAK2I,EAAK3I,IAAM,SAIvDrB,EAAOqD,aAAexQ,EACvBmN,EAAOzH,aAAa,KAAOyR,EAAKzR,aAAa,IAAMyH,EAAOzH,aAAa,KAAOyR,EAAKzR,aAAa,IAAMyH,EAAOzH,aAAa,KAAOyR,EAAKzR,aAAa,GAClJyH,EAAOqD,aAAevQ,GACvBkN,EAAOzH,aAAa,KAAOyR,EAAKzR,aAAa,IAAMyH,EAAOzH,aAAa,KAAOyR,EAAKzR,aAAa,IAAMyH,EAAOzH,aAAa,KAAOyR,EAAKzR,aAAa,IAAMyH,EAAOzH,aAAa,KAAOyR,EAAKzR,aAAa,IAAMyH,EAAOzH,aAAa,KAAOyR,EAAKzR,aAAa,IAAMyH,EAAOzH,aAAa,KAAOyR,EAAKzR,aAAa,IAAMyH,EAAOzH,aAAa,KAAOyR,EAAKzR,aAAa,KAmBpW,SAAS0R,GAAqBlU,EAAGsL,EAAIxL,GAC1C,IAIIqU,EACAC,EACAC,EACAC,EAPAC,EAAYvU,EAAEyK,EACd+J,EAAWxU,EAAE2L,EACb8I,EAASzU,EAAE0U,EAAI1U,EAAE0U,EAAI,EAYzB,GAAIF,GAAYjX,GAAWiX,GAAY,MAAQjX,EAC7CiX,GAAYjX,OACP,GAAIiX,EAAWjX,GAAWiX,EAAW,MAAQjX,EAClDiX,EAAWjX,MACN,IAAIiX,GAAYjX,EAGrB,MAAO,CAAEkN,GAAIkK,IAAUhJ,GAAIgJ,IAAUD,EAAG1U,EAAE0U,GACrC,GAAIF,EAAWjX,EAEpB,MAAO,CAAEkN,EAAGkK,IAAUhJ,EAAGgJ,IAAUD,EAAG1U,EAAE0U,GAU1C,OAPIH,EAAY/W,KAAKC,KACnB8W,GAAc,EAAI/W,KAAKC,IAEzB2W,EAAU5W,KAAK4N,IAAIoJ,GACnBF,EAAU9W,KAAKgO,IAAIgJ,GACnBH,EAAWD,EAAUA,EACrBD,EAAKrU,EAAKtC,KAAKgN,KAAK,EAAQc,EAAK+I,GAC1B,CACL5J,GAAI0J,EAAKM,GAAUH,EAAU9W,KAAKgO,IAAI+I,GACtC5I,GAAIwI,EAAKM,GAAUH,EAAU9W,KAAK4N,IAAImJ,GACtCG,GAAKP,GAAM,EAAI7I,GAAOmJ,GAAUL,GAI7B,SAASQ,GAAqB5U,EAAGsL,EAAIxL,EAAGkC,GAG7C,IAII6S,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAKAlB,EACAC,EACAC,EAvBAiB,EAAQ,MACRC,EAAUD,EAAQA,EAClBE,EAAU,GAgBVC,EAAI7V,EAAEyK,EACNqL,EAAI9V,EAAE2L,EACNoK,EAAI/V,EAAE0U,EAAI1U,EAAE0U,EAAI,EASpB,GAJAG,EAAIrX,KAAKgN,KAAKqL,EAAIA,EAAIC,EAAIA,GAC1BhB,EAAKtX,KAAKgN,KAAKqL,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAG/BlB,EAAI/U,EAAI4V,GAOV,GAJAnB,EAAY,EAIRO,EAAKhV,EAAI4V,EAGX,OAFAlB,EAAWjX,EACXkX,GAAUzS,EACH,CACLyI,EAAGzK,EAAEyK,EACLkB,EAAG3L,EAAE2L,EACL+I,EAAG1U,EAAE0U,QAMTH,EAAY/W,KAAKwY,MAAMF,EAAGD,GAY5Bd,EAAKgB,EAAIjB,EACTE,EAAKH,EAAIC,EACTG,EAAK,EAAMzX,KAAKgN,KAAK,EAAMc,GAAM,EAAMA,GAAM0J,EAAKA,GAClDI,EAAQJ,GAAM,EAAM1J,GAAM2J,EAC1BI,EAAQN,EAAKE,EACbQ,EAAO,EAIP,GACEA,IACAN,EAAKrV,EAAItC,KAAKgN,KAAK,EAAMc,EAAK+J,EAAQA,GAGtCZ,EAASI,EAAIO,EAAQW,EAAIV,EAAQF,GAAM,EAAM7J,EAAK+J,EAAQA,GAE1DH,EAAK5J,EAAK6J,GAAMA,EAAKV,GACrBQ,EAAK,EAAMzX,KAAKgN,KAAK,EAAM0K,GAAM,EAAMA,GAAMF,EAAKA,GAClDM,EAAON,GAAM,EAAME,GAAMD,EACzBM,EAAOR,EAAKE,EACZO,EAAQD,EAAOH,EAAQE,EAAOD,EAC9BD,EAAQE,EACRD,EAAQE,QAEHC,EAAQA,EAAQG,GAAUF,EAAOG,GAIxC,OADApB,EAAWhX,KAAK2N,KAAKoK,EAAO/X,KAAKkN,IAAI4K,IAC9B,CACL7K,EAAG8J,EACH5I,EAAG6I,EACHE,EAAGD,GAcA,SAASwB,GAAkBjW,EAAGsN,EAAY9K,GAE/C,GAAI8K,IAAexQ,EAGjB,MAAO,CACL2N,EAAGzK,EAAEyK,EAAIjI,EAAa,GACtBmJ,EAAG3L,EAAE2L,EAAInJ,EAAa,GACtBkS,EAAG1U,EAAE0U,EAAIlS,EAAa,IAEnB,GAAI8K,IAAevQ,EAAY,CACpC,IAAImZ,EAAQ1T,EAAa,GACrB2T,EAAQ3T,EAAa,GACrB4T,EAAQ5T,EAAa,GACrB6T,EAAQ7T,EAAa,GACrB8T,EAAQ9T,EAAa,GACrB+T,EAAQ/T,EAAa,GACrBgU,EAAOhU,EAAa,GAGxB,MAAO,CACLiI,EAAG+L,GAAQxW,EAAEyK,EAAI8L,EAAQvW,EAAE2L,EAAI2K,EAAQtW,EAAE0U,GAAKwB,EAC9CvK,EAAG6K,GAAQD,EAAQvW,EAAEyK,EAAIzK,EAAE2L,EAAI0K,EAAQrW,EAAE0U,GAAKyB,EAC9CzB,EAAG8B,IAASF,EAAQtW,EAAEyK,EAAI4L,EAAQrW,EAAE2L,EAAI3L,EAAE0U,GAAK0B,IAS9C,SAASK,GAAoBzW,EAAGsN,EAAY9K,GAEjD,GAAI8K,IAAexQ,EAGjB,MAAO,CACL2N,EAAGzK,EAAEyK,EAAIjI,EAAa,GACtBmJ,EAAG3L,EAAE2L,EAAInJ,EAAa,GACtBkS,EAAG1U,EAAE0U,EAAIlS,EAAa,IAGnB,GAAI8K,IAAevQ,EAAY,CACpC,IAAImZ,EAAQ1T,EAAa,GACrB2T,EAAQ3T,EAAa,GACrB4T,EAAQ5T,EAAa,GACrB6T,EAAQ7T,EAAa,GACrB8T,EAAQ9T,EAAa,GACrB+T,EAAQ/T,EAAa,GACrBgU,EAAOhU,EAAa,GACpBkU,GAAS1W,EAAEyK,EAAIyL,GAASM,EACxBG,GAAS3W,EAAE2L,EAAIwK,GAASK,EACxBI,GAAS5W,EAAE0U,EAAI0B,GAASI,EAI5B,MAAO,CACL/L,EAAGiM,EAAQH,EAAQI,EAAQL,EAAQM,EACnCjL,GAAI4K,EAAQG,EAAQC,EAAQN,EAAQO,EACpClC,EAAG4B,EAAQI,EAAQL,EAAQM,EAAQC,ICrOzC,SAASC,GAAY/P,GACnB,OAAQA,IAAShK,GAAcgK,IAAS/J,EAG3B,YAASkN,EAAQgK,EAAM6C,GAEpC,GAAI9C,GAAc/J,EAAQgK,GACxB,OAAO6C,EAMT,GAAI7M,EAAOqD,aAAepQ,GAAe+W,EAAK3G,aAAepQ,EAC3D,OAAO4Z,EAIT,IAAIC,EAAW9M,EAAOnK,EAClBkX,EAAY/M,EAAOqB,GACvB,GAAIrB,EAAOqD,aAAetQ,EAAe,CACvC,IAAIia,EAAgBC,GAAejN,GAAQ,EAAO6M,GAClD,GAAsB,IAAlBG,EACF,OAEFF,EAAW5Z,EACX6Z,EAAY3Z,EAGd,IAAI8Z,EAASlD,EAAKnU,EACdsX,EAASnD,EAAKjS,EACdqV,EAAUpD,EAAK3I,GAQnB,GAPI2I,EAAK3G,aAAetQ,IACtBma,EAASha,EACTia,EAASha,EACTia,EAAUha,GAIR2Z,IAAcK,GAAWN,IAAaI,IAAWN,GAAY5M,EAAOqD,cAAiBuJ,GAAY5C,EAAK3G,YACxG,OAAOwJ,EAcT,GAVAA,EAAQ5C,GAAqB4C,EAAOE,EAAWD,GAE3CF,GAAY5M,EAAOqD,cACrBwJ,EAAQb,GAAkBa,EAAO7M,EAAOqD,WAAYrD,EAAOzH,eAEzDqU,GAAY5C,EAAK3G,cACnBwJ,EAAQL,GAAoBK,EAAO7C,EAAK3G,WAAY2G,EAAKzR,eAE3DsU,EAAQlC,GAAqBkC,EAAOO,EAASF,EAAQC,GAEjDnD,EAAK3G,aAAetQ,EAAe,CACrC,IAAIsa,EAAsBJ,GAAejD,GAAM,EAAM6C,GACrD,GAA4B,IAAxBQ,EACF,OAIJ,OAAOR,EAGF,SAASI,GAAejN,EAAQ+B,EAAS8K,GAC9C,GAAqB,OAAjB7M,EAAOsD,OAA0C,IAAxBtD,EAAOsD,MAAMrO,OAExC,OADA4J,QAAQC,IAAI,+BACJ,EAMV,IAJA,IAAIpC,EAAQ,CAAC8D,GAAIqM,EAAMrM,EAAGkB,EAAGmL,EAAMnL,GAC/B9G,EAAS,CAAC4F,EAAG8M,OAAOC,IAAK7L,EAAG4L,OAAOC,KAEnCC,EAAiB,GACZxY,EAAI,EAAGA,EAAIgL,EAAOsD,MAAMrO,OAAQD,IAAK,CAC5C,IAAIyQ,EAAOzF,EAAOsD,MAAMtO,GAExB,GADAwY,EAAexX,KAAKyP,EAAKjK,MACrBiK,EAAKC,OAAQ,CACf9K,EAAS8B,EACT,MAGF,GADqB+I,EAAKD,UACR,OAAdC,EAAKA,KAAT,CAOA,IAAIgI,EAAUhI,EAAKA,KAAKN,SAAS,GAE7BuI,GAAWna,KAAKkN,IAAIgN,EAAQ7F,IAAI,IAAMrU,KAAKkN,IAAIgN,EAAQ7F,IAAI,KAAO,IAClE+F,EAAOF,EAAQ9F,GAAG,GAAK+F,EACvBE,EAAOH,EAAQ9F,GAAG,GAAK+F,EACvBG,EAAOJ,EAAQ9F,GAAG,IAAM8F,EAAQ5F,IAAI,GAAK,GAAK4F,EAAQ7F,IAAI,GAAK8F,EAC/DI,EAAOL,EAAQ9F,GAAG,IAAM8F,EAAQ5F,IAAI,GAAK,GAAK4F,EAAQ7F,IAAI,GAAK8F,EACnE,KAAIE,EAAOlR,EAAMgF,GAAKiM,EAAOjR,EAAM8D,GAAKsN,EAAOpR,EAAMgF,GAAKmM,EAAOnR,EAAM8D,KAGvE5F,EAASmT,GAAkBrR,EAAOqF,EAAS0L,IACtCO,MAAMpT,EAAO4F,IAChB,WAlBA,GAAIiF,EAAKD,UAEP,OADA3G,QAAQC,IAAI,kCAAoC2G,EAAKjK,KAAO,MACpD,EAmBd,OAAIwS,MAAMpT,EAAO4F,IACf3B,QAAQC,IAAI,oDACTpC,EAAM8D,EAAI1M,EAAM,IAAM4I,EAAMgF,EAAI5N,EAAM,YAAc0Z,EAAiB,MAChE,IAEVX,EAAMrM,GAAK5F,EAAO4F,EAClBqM,EAAMnL,EAAI9G,EAAO8G,EACV,GAGT,SAASqM,GAAkBE,EAAKlM,EAASmM,GACvC,IAAIC,EAAM,CAAC3N,EAAG8M,OAAOC,IAAK7L,EAAG4L,OAAOC,KACpC,GAAIS,MAAMC,EAAIzN,GAAM,OAAO2N,EAC3B,IAAIC,EAAK,CAAC5N,EAAGyN,EAAIzN,EAAGkB,EAAGuM,EAAIvM,GAC3B0M,EAAG5N,GAAK0N,EAAGvG,GAAG,GACdyG,EAAG1M,GAAKwM,EAAGvG,GAAG,GACdyG,EAAG5N,EAAIqB,GAAWuM,EAAG5N,EAAIjN,KAAKC,IAAMD,KAAKC,GACzC,IAAI6a,EAAIC,GAAeF,EAAIF,GAC3B,GAAInM,EAAS,CACX,GAAIiM,MAAMK,EAAE7N,GACV,OAAO2N,EAETE,EAAE7N,EAAI4N,EAAG5N,EAAI6N,EAAE7N,EACf6N,EAAE3M,EAAI0M,EAAG1M,EAAI2M,EAAE3M,EACf,IACI6M,EAAK3G,EADL5S,EAAI,EAAGwZ,EAAM,MAEjB,EAAG,CAED,GADA5G,EAAM0G,GAAeD,EAAGH,GACpBF,MAAMpG,EAAIpH,GAAI,CAChB3B,QAAQC,IAAI,6FACZ,MAEFyP,EAAM,CAAC/N,EAAG4N,EAAG5N,GAAKoH,EAAIpH,EAAI6N,EAAE7N,GAAIkB,EAAG0M,EAAG1M,GAAKkG,EAAIlG,EAAI2M,EAAE3M,IACrD2M,EAAE7N,GAAK+N,EAAI/N,EACX6N,EAAE3M,GAAK6M,EAAI7M,QACJ1M,KAAOzB,KAAKkN,IAAI8N,EAAI/N,GAAKgO,GAAOjb,KAAKkN,IAAI8N,EAAI7M,GAAK8M,GAC3D,GAAIxZ,EAAI,EAEN,OADA6J,QAAQC,IAAI,mDACLqP,EAETA,EAAI3N,EAAIqB,GAAWwM,EAAE7N,EAAI0N,EAAGvG,GAAG,IAC/BwG,EAAIzM,EAAI2M,EAAE3M,EAAIwM,EAAGvG,GAAG,QAEfqG,MAAMK,EAAE7N,KACX2N,EAAI3N,EAAIyN,EAAIzN,EAAI6N,EAAE7N,EAClB2N,EAAIzM,EAAIuM,EAAIvM,EAAI2M,EAAE3M,GAGtB,OAAOyM,EAGT,SAASG,GAAeL,EAAKC,GAC3B,IAIIO,EAJAJ,EAAI,CAAC7N,EAAGyN,EAAIzN,EAAI0N,EAAGtG,IAAI,GAAIlG,EAAGuM,EAAIvM,EAAIwM,EAAGtG,IAAI,IAC7C8G,EAAO,CAAClO,EAAGjN,KAAKob,MAAMN,EAAE7N,GAAIkB,EAAGnO,KAAKob,MAAMN,EAAE3M,IAC5CkN,EAAO,CAACpO,EAAG6N,EAAE7N,EAAI,EAAMkO,EAAKlO,EAAGkB,EAAG2M,EAAE3M,EAAI,EAAMgN,EAAKhN,GACnDyM,EAAK,CAAC3N,EAAG8M,OAAOC,IAAK7L,EAAG4L,OAAOC,KAEnC,GAAImB,EAAKlO,EAAI,GAAKkO,EAAKlO,GAAK0N,EAAGrG,IAAI,GACjC,OAAOsG,EAET,GAAIO,EAAKhN,EAAI,GAAKgN,EAAKhN,GAAKwM,EAAGrG,IAAI,GACjC,OAAOsG,EAETM,EAAOC,EAAKhN,EAAIwM,EAAGrG,IAAI,GAAM6G,EAAKlO,EAClC,IAAIqO,EAAM,CAACrO,EAAG0N,EAAGlG,IAAIyG,GAAK,GAAI/M,EAAGwM,EAAGlG,IAAIyG,GAAK,IAC7CA,IACA,IAAIK,EAAK,CAACtO,EAAG0N,EAAGlG,IAAIyG,GAAK,GAAI/M,EAAGwM,EAAGlG,IAAIyG,GAAK,IAC5CA,GAAOP,EAAGrG,IAAI,GACd,IAAIkH,EAAM,CAACvO,EAAG0N,EAAGlG,IAAIyG,GAAK,GAAI/M,EAAGwM,EAAGlG,IAAIyG,GAAK,IAC7CA,IACA,IAAIO,EAAM,CAACxO,EAAG0N,EAAGlG,IAAIyG,GAAK,GAAI/M,EAAGwM,EAAGlG,IAAIyG,GAAK,IACzCQ,EAAML,EAAKpO,EAAIoO,EAAKlN,EAAGwN,EAAMN,EAAKpO,GAAK,EAAMoO,EAAKlN,GACpDyN,GAAO,EAAMP,EAAKpO,IAAM,EAAMoO,EAAKlN,GAAI0N,GAAO,EAAMR,EAAKpO,GAAKoO,EAAKlN,EAGrE,OAFAyM,EAAI3N,EAAK2O,EAAMN,EAAIrO,EAAI0O,EAAMJ,EAAItO,EAAI4O,EAAMJ,EAAIxO,EAAIyO,EAAMF,EAAIvO,EAC7D2N,EAAIzM,EAAKyN,EAAMN,EAAInN,EAAIwN,EAAMJ,EAAIpN,EAAI0N,EAAMJ,EAAItN,EAAIuN,EAAMF,EAAIrN,EACtDyM,EC9LM,YAASkB,EAAKC,EAAQzC,GACnC,IAGInX,EAAG2Y,EAAGrZ,EAHNua,EAAM1C,EAAMrM,EACdgP,EAAM3C,EAAMnL,EACZ+N,EAAM5C,EAAMpC,GAAK,EAEftP,EAAM,GACV,IAAKnG,EAAI,EAAGA,EAAI,EAAGA,IACjB,IAAIsa,GAAgB,IAANta,QAAuBkL,IAAZ2M,EAAMpC,EAwB/B,OArBU,IAANzV,GACFU,EAAI6Z,EAEFlB,GADiC,IAA/B,KAAKpV,QAAQoW,EAAItW,KAAK/D,IACpB,IAEA,KAIO,IAANA,GACPU,EAAI8Z,EAEFnB,GADiC,IAA/B,KAAKpV,QAAQoW,EAAItW,KAAK/D,IACpB,IAEA,MAINU,EAAI+Z,EACJpB,EAAI,KAEEgB,EAAItW,KAAK/D,IACjB,IAAK,IACHmG,EAAIkT,GAAK3Y,EACT,MACF,IAAK,IACHyF,EAAIkT,IAAM3Y,EACV,MACF,IAAK,IACHyF,EAAIkT,GAAK3Y,EACT,MACF,IAAK,IACHyF,EAAIkT,IAAM3Y,EACV,MACF,IAAK,SACcwK,IAAb2M,EAAMwB,KACRlT,EAAIsP,EAAI/U,GAEV,MACF,IAAK,SACcwK,IAAb2M,EAAMwB,KACRlT,EAAIsP,GAAK/U,GAEX,MACF,QAEE,OAAO,KAGX,OAAOyF,EC3DM,SAAS,GAACuU,GACvB,IAAIvU,EAAM,CACRqF,EAAGkP,EAAM,GACThO,EAAGgO,EAAM,IAQX,OANIA,EAAMza,OAAO,IACfkG,EAAIsP,EAAIiF,EAAM,IAEZA,EAAMza,OAAO,IACfkG,EAAIwU,EAAID,EAAM,IAETvU,ECXM,SAAS,GAAC0R,GACvB+C,GAAW/C,EAAMrM,GACjBoP,GAAW/C,EAAMnL,GAEnB,SAASkO,GAAWC,GAClB,GAA+B,oBAApBvC,OAAOvP,SAAyB,CACzC,GAAIuP,OAAOvP,SAAS8R,GAClB,OAEF,MAAM,IAAIC,UAAU,sCAEtB,GAAmB,kBAARD,GAAoBA,IAAQA,IAAQ9R,SAAS8R,GACtD,MAAM,IAAIC,UAAU,sCCLxB,SAASC,GAAY/P,EAAQgK,GAC3B,OAAShK,EAAO7J,MAAMkN,aAAexQ,GAAcmN,EAAO7J,MAAMkN,aAAevQ,IAAkC,UAAnBkX,EAAKlR,YAA4BkR,EAAK7T,MAAMkN,aAAexQ,GAAcmX,EAAK7T,MAAMkN,aAAevQ,IAAoC,UAArBkN,EAAOlH,UAG1M,SAASkX,GAAUhQ,EAAQgK,EAAM6C,EAAOoD,GACrD,IAAI1M,EAgBJ,GAfIxI,MAAMC,QAAQ6R,KAChBA,EAAQqD,GAAQrD,IAElBsD,GAAYtD,GAER7M,EAAO7J,OAAS6T,EAAK7T,OAAS4Z,GAAY/P,EAAQgK,KACpDzG,EAAQ,IAAIrN,GAAK,SACjB2W,EAAQmD,GAAUhQ,EAAQuD,EAAOsJ,EAAOoD,GACxCjQ,EAASuD,GAGP0M,GAA+B,QAAhBjQ,EAAOjH,OACxB8T,EAAQuD,GAAYpQ,GAAQ,EAAO6M,IAGb,YAApB7M,EAAOlD,SACT+P,EAAQ,CACNrM,EAAGqM,EAAMrM,EAAI3M,EACb6N,EAAGmL,EAAMnL,EAAI7N,EACb4W,EAAGoC,EAAMpC,GAAK,QAWhB,GARIzK,EAAO5L,WACTyY,EAAQ,CACNrM,EAAGqM,EAAMrM,EAAIR,EAAO5L,SACpBsN,EAAGmL,EAAMnL,EAAI1B,EAAO5L,SACpBqW,EAAGoC,EAAMpC,GAAK,IAGlBoC,EAAQ7M,EAAO+B,QAAQ8K,IAClBA,EACH,OAUJ,GANI7M,EAAOtH,iBACTmU,EAAMrM,GAAKR,EAAOtH,gBAIpBmU,EAAQwD,GAAgBrQ,EAAO7J,MAAO6T,EAAK7T,MAAO0W,GAC7CA,EAgCL,OA3BI7C,EAAKtR,iBACPmU,EAAQ,CACNrM,EAAGqM,EAAMrM,EAAIwJ,EAAKtR,eAClBgJ,EAAGmL,EAAMnL,EACT+I,EAAGoC,EAAMpC,GAAK,IAII,YAAlBT,EAAKlN,SAEP+P,EAAQ,CACNrM,EAAGqM,EAAMrM,EAAI1M,EACb4N,EAAGmL,EAAMnL,EAAI5N,EACb2W,EAAGoC,EAAMpC,GAAK,IAGhBoC,EAAQ7C,EAAKvI,QAAQoL,GACjB7C,EAAK5V,WACPyY,EAAQ,CACNrM,EAAGqM,EAAMrM,EAAIwJ,EAAK5V,SAClBsN,EAAGmL,EAAMnL,EAAIsI,EAAK5V,SAClBqW,EAAGoC,EAAMpC,GAAK,KAMhBwF,GAA6B,QAAdjG,EAAKjR,KACfqX,GAAYpG,GAAM,EAAM6C,GAG1BA,ECxFT,IAAItJ,GAAQrN,GAAK,SAEjB,SAASoa,GAAYC,EAAMC,EAAIC,EAAQR,GACrC,IAAIS,EAAkBvV,EAAKxG,EAC3B,OAAIoG,MAAMC,QAAQyV,IAChBC,EAAmBV,GAAUO,EAAMC,EAAIC,EAAQR,IAAgB,CAACzP,EAAG+M,IAAK7L,EAAG6L,KACvEkD,EAAOxb,OAAS,EACQ,qBAAdsb,EAAK/U,MAAsC,YAAd+U,EAAK/U,MAA2C,qBAAZgV,EAAGhV,MAAoC,YAAZgV,EAAGhV,KACvE,kBAAvBkV,EAAiBjG,EACnB,CAACiG,EAAiBlQ,EAAGkQ,EAAiBhP,EAAGgP,EAAiBjG,GAAGkG,OAAOF,EAAOG,OAAO,IAElF,CAACF,EAAiBlQ,EAAGkQ,EAAiBhP,EAAG+O,EAAO,IAAIE,OAAOF,EAAOG,OAAO,IAG3E,CAACF,EAAiBlQ,EAAGkQ,EAAiBhP,GAAGiP,OAAOF,EAAOG,OAAO,IAGhE,CAACF,EAAiBlQ,EAAGkQ,EAAiBhP,KAG/CvG,EAAM6U,GAAUO,EAAMC,EAAIC,EAAQR,GAClCtb,EAAOC,OAAOD,KAAK8b,GACC,IAAhB9b,EAAKM,QAGTN,EAAKuJ,SAAQ,SAAU1J,GACrB,GAA0B,qBAAd+b,EAAK/U,MAAsC,YAAd+U,EAAK/U,MAA2C,qBAAZgV,EAAGhV,MAAoC,YAAZgV,EAAGhV,MACzG,GAAY,MAARhH,GAAuB,MAARA,GAAuB,MAARA,EAChC,YAGF,GAAY,MAARA,GAAuB,MAARA,EACjB,OAGJ2G,EAAI3G,GAAOic,EAAOjc,MAZX2G,GAkBb,SAAS0V,GAAUxV,GACjB,OAAIA,aAAgBnF,GACXmF,EAELA,EAAKyV,MACAzV,EAAKyV,MAEP5a,GAAKmF,GAGd,SAAS0V,GAAMC,EAAUC,EAAQC,GAC/BF,EAAWH,GAAUG,GACrB,IACIzc,EADA4c,GAAS,EAab,MAXsB,qBAAXF,GACTA,EAASD,EACTA,EAAWzN,GACX4N,GAAS,IACoB,qBAAbF,EAAOzQ,GAAqBzF,MAAMC,QAAQiW,MAC1DC,EAAQD,EACRA,EAASD,EACTA,EAAWzN,GACX4N,GAAS,GAEXF,EAASJ,GAAUI,GACfC,EACKZ,GAAYU,EAAUC,EAAQC,IAErC3c,EAAM,CACJkN,QAAS,SAAUgP,EAAQR,GACzB,OAAOK,GAAYU,EAAUC,EAAQR,EAAQR,IAE/ClO,QAAS,SAAU0O,EAAQR,GACzB,OAAOK,GAAYW,EAAQD,EAAUP,EAAQR,KAG7CkB,IACF5c,EAAIuc,MAAQG,GAEP1c,GAGX,UC5EI6c,GAAgB,EAQhBC,GAA4B,SAQ5BC,GAAyB,SAEzBC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJ5F,GAAI,GACR,IACErK,QAASA,GACTM,QAASA,GACTmO,QAASA,IAWJ,SAASzO,GAAQkG,EAAIgK,GAE1B,OADAA,EAAWA,GAAY,EAChBC,GAAOC,GAAQ,CACpBjQ,IAAK+F,EAAG,GACRhG,IAAKgG,EAAG,KACNgK,GAWC,SAAS5P,GAAQ+P,GACtB,IAAIC,EAAOC,GAAQC,GAAOH,EAAKI,gBAC/B,OAAIH,EAAKnQ,KAAOmQ,EAAKpQ,IACZ,CAACoQ,EAAKpQ,IAAKoQ,EAAKnQ,IAAKmQ,EAAKpQ,IAAKoQ,EAAKnQ,KAEtC,CAACmQ,EAAKI,KAAMJ,EAAKK,OAAQL,EAAKM,MAAON,EAAKO,KAG5C,SAASpC,GAAQ4B,GACtB,IAAIC,EAAOC,GAAQC,GAAOH,EAAKI,gBAC/B,OAAIH,EAAKnQ,KAAOmQ,EAAKpQ,IACZ,CAACoQ,EAAKpQ,IAAKoQ,EAAKnQ,KAElB,EAAEmQ,EAAKI,KAAOJ,EAAKM,OAAS,GAAIN,EAAKO,IAAMP,EAAKK,QAAU,GASnE,SAASG,GAASC,GAChB,OAAQA,GAAOjf,KAAKC,GAAK,KAU3B,SAASif,GAASC,GAChB,OAAiBA,EAAMnf,KAAKC,GAApB,IAcV,SAASqe,GAAQlK,GACf,IAKIgL,EACAC,EACAC,EAAGC,EAAGC,EAAGxB,EAAGyB,EAGZC,EACAC,EAXAC,EAAMxL,EAAG/F,IACTwR,EAAOzL,EAAGhG,IACV9L,EAAI,QACJwd,EAAa,UACbxb,EAAK,MAILyb,EAASf,GAASY,GAClBI,EAAUhB,GAASa,GAIvBF,EAAa3f,KAAKob,OAAOyE,EAAO,KAAO,GAAK,EAG/B,MAATA,IACFF,EAAa,IAIXC,GAAO,IAAQA,EAAM,IAAQC,GAAQ,GAAOA,EAAO,KACrDF,EAAa,IAIXC,GAAO,IAAQA,EAAM,KACnBC,GAAQ,GAAOA,EAAO,EACxBF,EAAa,GAENE,GAAQ,GAAOA,EAAO,GAC7BF,EAAa,GAENE,GAAQ,IAAQA,EAAO,GAC9BF,EAAa,GAENE,GAAQ,IAAQA,EAAO,KAC9BF,EAAa,KAIjBP,EAAgC,GAAlBO,EAAa,GAAS,IAAM,EAG1CD,EAAgBV,GAASI,GAEzBC,EAAmBS,GAAe,EAAIA,GAEtCR,EAAIhd,EAAItC,KAAKgN,KAAK,EAAI8S,EAAa9f,KAAK4N,IAAImS,GAAU/f,KAAK4N,IAAImS,IAC/DR,EAAIvf,KAAKuN,IAAIwS,GAAU/f,KAAKuN,IAAIwS,GAChCP,EAAIH,EAAkBrf,KAAKgO,IAAI+R,GAAU/f,KAAKgO,IAAI+R,GAClD/B,EAAIhe,KAAKgO,IAAI+R,IAAWC,EAAUN,GAElCD,EAAInd,IAAM,EAAIwd,EAAa,EAAI,EAAIA,EAAaA,EAAa,GAAK,EAAIA,EAAaA,EAAaA,EAAa,KAAOC,GAAU,EAAID,EAAa,EAAI,EAAIA,EAAaA,EAAa,GAAK,GAAKA,EAAaA,EAAaA,EAAa,MAAQ9f,KAAK4N,IAAI,EAAImS,IAAW,GAAKD,EAAaA,EAAa,IAAM,GAAKA,EAAaA,EAAaA,EAAa,MAAQ9f,KAAK4N,IAAI,EAAImS,GAAW,GAAKD,EAAaA,EAAaA,EAAa,KAAQ9f,KAAK4N,IAAI,EAAImS,IAEpb,IAAIE,EAAc3b,EAAKgb,GAAKtB,GAAK,EAAIuB,EAAIC,GAAKxB,EAAIA,EAAIA,EAAI,GAAO,EAAI,GAAKuB,EAAIA,EAAIA,EAAI,GAAKC,EAAI,GAAKH,GAAmBrB,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAS,IAEhJkC,EAAe5b,GAAMmb,EAAIH,EAAItf,KAAKuN,IAAIwS,IAAW/B,EAAIA,EAAI,GAAK,EAAIuB,EAAI,EAAIC,EAAI,EAAIA,EAAIA,GAAKxB,EAAIA,EAAIA,EAAIA,EAAI,IAAQ,GAAK,GAAKuB,EAAIA,EAAIA,EAAI,IAAMC,EAAI,IAAMH,GAAmBrB,EAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,MAMxM,OALI4B,EAAM,IACRM,GAAe,KAIV,CACLC,SAAUngB,KAAK4T,MAAMsM,GACrBE,QAASpgB,KAAK4T,MAAMqM,GACpBI,WAAYV,EACZW,WAAYC,GAAoBX,IAmBpC,SAASnB,GAAQ+B,GAEf,IAAIN,EAAcM,EAAIL,SAClBF,EAAaO,EAAIJ,QACjBE,EAAaE,EAAIF,WACjBD,EAAaG,EAAIH,WAErB,GAAIA,EAAa,GAAKA,EAAa,GACjC,OAAO,KAGT,IAGIhB,EAEAoB,EAAIC,EAAIC,EAAIC,EAAIC,EAAGpB,EACnBL,EACA0B,EAAIC,EAPJzc,EAAK,MACLhC,EAAI,QACJwd,EAAa,UAEbkB,GAAM,EAAIhhB,KAAKgN,KAAK,EAAI8S,KAAgB,EAAI9f,KAAKgN,KAAK,EAAI8S,IAM1D7S,EAAIgT,EAAa,IACjB9R,EAAI+R,EAMJI,EAAa,MACfnS,GAAK,KAKPiR,EAAgC,GAAlBiB,EAAa,GAAS,IAAM,EAI1ChB,EAAmBS,GAAe,EAAIA,GAEtCL,EAAItR,EAAI7J,EACRwc,EAAKrB,GAAKnd,GAAK,EAAIwd,EAAa,EAAI,EAAIA,EAAaA,EAAa,GAAK,EAAIA,EAAaA,EAAaA,EAAa,MAElHiB,EAAUD,GAAM,EAAIE,EAAK,EAAI,GAAKA,EAAKA,EAAKA,EAAK,IAAMhhB,KAAK4N,IAAI,EAAIkT,IAAO,GAAKE,EAAKA,EAAK,GAAK,GAAKA,EAAKA,EAAKA,EAAKA,EAAK,IAAMhhB,KAAK4N,IAAI,EAAIkT,GAAO,IAAME,EAAKA,EAAKA,EAAK,GAAMhhB,KAAK4N,IAAI,EAAIkT,GAG1LL,EAAKne,EAAItC,KAAKgN,KAAK,EAAI8S,EAAa9f,KAAK4N,IAAImT,GAAW/gB,KAAK4N,IAAImT,IACjEL,EAAK1gB,KAAKuN,IAAIwT,GAAW/gB,KAAKuN,IAAIwT,GAClCJ,EAAKtB,EAAkBrf,KAAKgO,IAAI+S,GAAW/gB,KAAKgO,IAAI+S,GACpDH,EAAKte,GAAK,EAAIwd,GAAc9f,KAAKsN,IAAI,EAAIwS,EAAa9f,KAAK4N,IAAImT,GAAW/gB,KAAK4N,IAAImT,GAAU,KAC7FF,EAAI5T,GAAKwT,EAAKnc,GAEd,IAAI+J,EAAM0S,EAAWN,EAAKzgB,KAAKuN,IAAIwT,GAAWH,GAAOC,EAAIA,EAAI,GAAK,EAAI,EAAIH,EAAK,GAAKC,EAAK,EAAIA,EAAKA,EAAK,EAAItB,GAAmBwB,EAAIA,EAAIA,EAAIA,EAAI,IAAM,GAAK,GAAKH,EAAK,IAAMC,EAAK,GAAKD,EAAKA,EAAK,IAAMrB,EAAkB,EAAIsB,EAAKA,GAAME,EAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAC5PxS,EAAM6Q,GAAS7Q,GAEf,IAGI4S,EAHA7S,GAAOyS,GAAK,EAAI,EAAIH,EAAKC,GAAME,EAAIA,EAAIA,EAAI,GAAK,EAAI,EAAIF,EAAK,GAAKD,EAAK,EAAIC,EAAKA,EAAK,EAAItB,EAAkB,GAAKqB,EAAKA,GAAMG,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAO7gB,KAAKgO,IAAI+S,GAInK,GAHA3S,EAAMgR,EAAaF,GAAS9Q,GAGxBoS,EAAIpC,SAAU,CAChB,IAAI8C,EAAWzC,GAAQ,CACrB0B,SAAUK,EAAIL,SAAWK,EAAIpC,SAC7BgC,QAASI,EAAIJ,QAAUI,EAAIpC,SAC3BkC,WAAYE,EAAIF,WAChBD,WAAYG,EAAIH,aAElBY,EAAS,CACPlC,IAAKmC,EAAS7S,IACdyQ,MAAOoC,EAAS9S,IAChByQ,OAAQxQ,EACRuQ,KAAMxQ,QAIR6S,EAAS,CACP5S,IAAKA,EACLD,IAAKA,GAGT,OAAO6S,EAWT,SAASV,GAAoBlS,GAG3B,IAAI8S,EAAmB,IA8DvB,OA5DK,IAAM9S,GAASA,GAAO,GACzB8S,EAAmB,IAEX,GAAK9S,GAASA,GAAO,GAC7B8S,EAAmB,IAEX,GAAK9S,GAASA,GAAO,GAC7B8S,EAAmB,IAEX,GAAK9S,GAASA,GAAO,GAC7B8S,EAAmB,IAEX,GAAK9S,GAASA,GAAO,GAC7B8S,EAAmB,IAEX,GAAK9S,GAASA,GAAO,GAC7B8S,EAAmB,IAEX,GAAK9S,GAASA,GAAO,GAC7B8S,EAAmB,IAEX,GAAK9S,GAASA,GAAO,GAC7B8S,EAAmB,IAEX,GAAK9S,GAASA,GAAO,EAC7B8S,EAAmB,IAEX,EAAI9S,GAASA,GAAO,EAC5B8S,EAAmB,IAEX,EAAI9S,GAASA,IAAQ,EAC7B8S,EAAmB,KAEV,EAAI9S,GAASA,IAAQ,GAC9B8S,EAAmB,KAEV,GAAK9S,GAASA,IAAQ,GAC/B8S,EAAmB,KAEV,GAAK9S,GAASA,IAAQ,GAC/B8S,EAAmB,KAEV,GAAK9S,GAASA,IAAQ,GAC/B8S,EAAmB,KAEV,GAAK9S,GAASA,IAAQ,GAC/B8S,EAAmB,KAEV,GAAK9S,GAASA,IAAQ,GAC/B8S,EAAmB,KAEV,GAAK9S,GAASA,IAAQ,GAC/B8S,EAAmB,KAEV,GAAK9S,GAASA,IAAQ,GAC/B8S,EAAmB,KAEV,GAAK9S,GAASA,IAAQ,KAC/B8S,EAAmB,KAEdA,EAYT,SAAS9C,GAAOmC,EAAKpC,GAEnB,IAAIgD,EAAW,QAAUZ,EAAIJ,QAC3BiB,EAAY,QAAUb,EAAIL,SAE5B,OAAOK,EAAIH,WAAaG,EAAIF,WAAagB,GAAUd,EAAIJ,QAASI,EAAIL,SAAUK,EAAIH,YAAce,EAASzb,OAAOyb,EAAS1f,OAAS,EAAG0c,GAAYiD,EAAU1b,OAAO0b,EAAU3f,OAAS,EAAG0c,GAa1L,SAASkD,GAAUlB,EAASD,EAAUE,GACpC,IAAIkB,EAAUC,GAAkBnB,GAC5BoB,EAAYzhB,KAAKob,MAAMgF,EAAU,KACjCsB,EAAS1hB,KAAKob,MAAM+E,EAAW,KAAU,GAC7C,OAAOwB,GAAgBF,EAAWC,EAAQH,GAU5C,SAASC,GAAkB/f,GACzB,IAAI8f,EAAU9f,EAAIoc,GAKlB,OAJgB,IAAZ0D,IACFA,EAAU1D,IAGL0D,EAmBT,SAASI,GAAgBC,EAAQC,EAAKC,GAEpC,IAAIC,EAAQD,EAAO,EACfE,EAAYlE,GAA0BmE,WAAWF,GACjDG,EAAYnE,GAAuBkE,WAAWF,GAG9CI,EAASH,EAAYJ,EAAS,EAC9BQ,EAASF,EAAYL,EACrBQ,GAAW,EAEXF,EAAS5J,KACX4J,EAASA,EAAS5J,GAAIyF,GAAI,EAC1BqE,GAAW,IAGTF,IAAWlE,IAAM+D,EAAY/D,IAAKkE,EAASlE,KAAQkE,EAASlE,IAAK+D,EAAY/D,KAAMoE,IACrFF,KAGEA,IAAWjE,IAAM8D,EAAY9D,IAAKiE,EAASjE,KAAQiE,EAASjE,IAAK8D,EAAY9D,KAAMmE,KACrFF,IAEIA,IAAWlE,IACbkE,KAIAA,EAAS5J,KACX4J,EAASA,EAAS5J,GAAIyF,GAAI,GAGxBoE,EAASjE,IACXiE,EAASA,EAASjE,GAAIH,GAAI,EAC1BqE,GAAW,GAGXA,GAAW,GAGPD,IAAWnE,IAAQiE,EAAYjE,IAAOmE,EAASnE,KAAWmE,EAASnE,IAAOiE,EAAYjE,KAAOoE,IACjGD,KAGIA,IAAWlE,IAAQgE,EAAYhE,IAAOkE,EAASlE,KAAWkE,EAASlE,IAAOgE,EAAYhE,KAAOmE,KACjGD,IAEIA,IAAWnE,IACbmE,KAIAA,EAASjE,KACXiE,EAASA,EAASjE,GAAIH,GAAI,GAG5B,IAAIsE,EAAYpP,OAAOC,aAAagP,GAAUjP,OAAOC,aAAaiP,GAClE,OAAOE,EAWT,SAAS5D,GAAO6D,GAEd,GAAIA,GAAoC,IAAtBA,EAAW7gB,OAC3B,KAAO,mCAGT,IAII8gB,EAJA9gB,EAAS6gB,EAAW7gB,OAEpB+gB,EAAO,KACPC,EAAK,GAELjhB,EAAI,EAGR,OAAS,QAAS6G,KAAKka,EAAWD,EAAWvX,OAAOvJ,IAAK,CACvD,GAAIA,GAAK,EACP,KAAO,kCAAoC8gB,EAE7CG,GAAMF,EACN/gB,IAGF,IAAI4e,EAAazb,SAAS8d,EAAI,IAE9B,GAAU,IAANjhB,GAAWA,EAAI,EAAIC,EAGrB,KAAO,kCAAoC6gB,EAG7C,IAAIjC,EAAaiC,EAAWvX,OAAOvJ,KAGnC,GAAI6e,GAAc,KAAsB,MAAfA,GAAqC,MAAfA,GAAsBA,GAAc,KAAsB,MAAfA,GAAqC,MAAfA,EAC9G,KAAO,yBAA2BA,EAAa,iBAAmBiC,EAGpEE,EAAOF,EAAWI,UAAUlhB,EAAGA,GAAK,GAEpC,IAAImhB,EAAMpB,GAAkBnB,GAExBwC,EAAWC,GAAmBL,EAAKzX,OAAO,GAAI4X,GAC9CG,EAAYC,GAAoBP,EAAKzX,OAAO,GAAI4X,GAMpD,MAAOG,EAAYE,GAAe3C,GAChCyC,GAAa,IAIf,IAAIG,EAAYxhB,EAASD,EAEzB,GAAIyhB,EAAY,IAAM,EACpB,KAAO,oKAAsKX,EAG/K,IAIIY,EAAeC,EAAkBC,EAAmBjD,EAASD,EAJ7DmD,EAAMJ,EAAY,EAElBK,EAAa,EACbC,EAAc,EAalB,OAXIF,EAAM,IACRH,EAAgB,IAAWnjB,KAAKsN,IAAI,GAAIgW,GACxCF,EAAmBb,EAAWI,UAAUlhB,EAAGA,EAAI6hB,GAC/CC,EAAazgB,WAAWsgB,GAAoBD,EAC5CE,EAAoBd,EAAWI,UAAUlhB,EAAI6hB,GAC7CE,EAAc1gB,WAAWugB,GAAqBF,GAGhD/C,EAAUmD,EAAaV,EACvB1C,EAAWqD,EAAcT,EAElB,CACL3C,QAASA,EACTD,SAAUA,EACVG,WAAYA,EACZD,WAAYA,EACZjC,SAAU+E,GAcd,SAASL,GAAmB/U,EAAG6U,GAG7B,IAAIa,EAAS3F,GAA0BmE,WAAWW,EAAM,GACpDc,EAAe,IACfC,GAAe,EAEnB,MAAOF,IAAW1V,EAAEkU,WAAW,GAAI,CAQjC,GAPAwB,IACIA,IAAWxF,IACbwF,IAEEA,IAAWvF,IACbuF,IAEEA,EAASlL,GAAG,CACd,GAAIoL,EACF,KAAO,kBAAoB5V,EAE7B0V,EAASzF,GACT2F,GAAe,EAEjBD,GAAgB,IAGlB,OAAOA,EAmBT,SAASV,GAAoB5T,EAAGwT,GAE9B,GAAIxT,EAAI,IACN,KAAO,oCAAsCA,EAK/C,IAAIwU,EAAS7F,GAAuBkE,WAAWW,EAAM,GACjDiB,EAAgB,EAChBF,GAAe,EAEnB,MAAOC,IAAWxU,EAAE6S,WAAW,GAAI,CAUjC,GATA2B,IACIA,IAAW3F,IACb2F,IAEEA,IAAW1F,IACb0F,IAIEA,EAASzF,GAAG,CACd,GAAIwF,EACF,KAAO,kBAAoBvU,EAE7BwU,EAAS5F,GACT2F,GAAe,EAEjBE,GAAiB,IAGnB,OAAOA,EAaT,SAASZ,GAAe3C,GACtB,IAAIH,EACJ,OAAQG,GACR,IAAK,IACHH,EAAW,KACX,MACF,IAAK,IACHA,EAAW,IACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,EACX,MACF,IAAK,IACHA,EAAW,IACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,IACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,QACEA,GAAY,EAEd,GAAIA,GAAY,EACd,OAAOA,EAGP,KAAO,wBAA0BG,ECpuBrC,SAASwD,GAAM7W,EAAGkB,EAAG+I,GACnB,KAAMvQ,gBAAgBmd,IACpB,OAAO,IAAIA,GAAM7W,EAAGkB,EAAG+I,GAEzB,GAAI1P,MAAMC,QAAQwF,GAChBtG,KAAKsG,EAAIA,EAAE,GACXtG,KAAKwH,EAAIlB,EAAE,GACXtG,KAAKuQ,EAAIjK,EAAE,IAAM,OACZ,GAAgB,kBAANA,EACftG,KAAKsG,EAAIA,EAAEA,EACXtG,KAAKwH,EAAIlB,EAAEkB,EACXxH,KAAKuQ,EAAIjK,EAAEiK,GAAK,OACX,GAAiB,kBAANjK,GAA+B,qBAANkB,EAAmB,CAC5D,IAAI+O,EAASjQ,EAAEhL,MAAM,KACrB0E,KAAKsG,EAAInK,WAAWoa,EAAO,GAAI,IAC/BvW,KAAKwH,EAAIrL,WAAWoa,EAAO,GAAI,IAC/BvW,KAAKuQ,EAAIpU,WAAWoa,EAAO,GAAI,KAAO,OAEtCvW,KAAKsG,EAAIA,EACTtG,KAAKwH,EAAIA,EACTxH,KAAKuQ,EAAIA,GAAK,EAEhB5L,QAAQkH,KAAK,+DAGfsR,GAAMC,SAAW,SAASC,GACxB,OAAO,IAAIF,GAAMnH,GAAQqH,KAE3BF,GAAM3b,UAAU8b,OAAS,SAAS7F,GAChC,OAAOlQ,GAAQ,CAACvH,KAAKsG,EAAGtG,KAAKwH,GAAIiQ,IAEnC,UCjCI8F,GAAM,EACNC,GAAM,IACNC,GAAM,QACNC,GAAM,UACNC,GAAM,gBACNC,GAAM,IACNC,GAAM,OACNC,GAAM,oBACNC,GAAM,oBACNC,GAAM,kBACNC,GAAM,oBACNC,GAAM,YAEK,YAAS/W,GACtB,IAAIgX,EAAK,GACTA,EAAG,GAAKZ,GAAMpW,GAAMqW,GAAMrW,GAAMsW,GAAMtW,GAAMuW,GAAMvW,EAAKwW,MACvDQ,EAAG,GAAKhX,GAAMyW,GAAMzW,GAAMsW,GAAMtW,GAAMuW,GAAMvW,EAAKwW,MACjD,IAAIxJ,EAAIhN,EAAKA,EAKb,OAJAgX,EAAG,GAAKhK,GAAK0J,GAAM1W,GAAM2W,GAAM3W,EAAK4W,KACpC5J,GAAKhN,EACLgX,EAAG,GAAKhK,GAAK6J,GAAM7W,EAAK8W,IACxBE,EAAG,GAAKhK,EAAIhN,EAAK+W,GACVC,ECtBM,YAAS1X,EAAK2X,EAAMC,EAAMF,GAGvC,OAFAE,GAAQD,EACRA,GAAQA,EACAD,EAAG,GAAK1X,EAAM4X,GAAQF,EAAG,GAAKC,GAAQD,EAAG,GAAKC,GAAQD,EAAG,GAAKC,EAAOD,EAAG,MCAlF,IAAIG,GAAW,GAEA,YAASC,EAAKpX,EAAIgX,GAG/B,IAFA,IAAIvgB,EAAI,GAAK,EAAIuJ,GACbV,EAAM8X,EACDzjB,EAAIwjB,GAAUxjB,IAAKA,EAAG,CAC7B,IAAI0jB,EAAInlB,KAAK4N,IAAIR,GACb0N,EAAI,EAAIhN,EAAKqX,EAAIA,EAKrB,GAFArK,GAAKsK,GAAQhY,EAAK+X,EAAGnlB,KAAKgO,IAAIZ,GAAM0X,GAAMI,IAAQpK,EAAI9a,KAAKgN,KAAK8N,IAAMvW,EACtE6I,GAAO0N,EACH9a,KAAKkN,IAAI4N,GAAKza,EAChB,OAAO+M,EAIX,OAAOA,ECTF,SAASS,KACdlH,KAAKzC,QAAiByI,IAAZhG,KAAKzC,GAAmByC,KAAKzC,GAAK,EAC5CyC,KAAKvC,QAAiBuI,IAAZhG,KAAKvC,GAAmBuC,KAAKvC,GAAK,EAC5CuC,KAAKpD,WAAuBoJ,IAAfhG,KAAKpD,MAAsBoD,KAAKpD,MAAQ,EACrDoD,KAAK3D,UAAqB2J,IAAdhG,KAAK3D,KAAqB2D,KAAK3D,KAAO,EAE9C2D,KAAKmH,KACPnH,KAAKme,GAAKO,GAAQ1e,KAAKmH,IACvBnH,KAAK2e,IAAMF,GAAQze,KAAK3D,KAAMhD,KAAK4N,IAAIjH,KAAK3D,MAAOhD,KAAKgO,IAAIrH,KAAK3D,MAAO2D,KAAKme,KAQ1E,SAAS5W,GAAQ1L,GACtB,IAIIuK,EACAE,EAAGkB,EALHC,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAERoX,EAAYjX,GAAWF,EAAMzH,KAAKpD,OAGlCiiB,EAAUxlB,KAAK4N,IAAIS,GACnBoX,EAAUzlB,KAAKgO,IAAIK,GAEvB,GAAK1H,KAAKmH,GA8BL,CACH,IAAI4X,EAAKD,EAAUF,EACfI,EAAM3lB,KAAKsN,IAAIoY,EAAI,GACnBE,EAAIjf,KAAKgJ,IAAM3P,KAAKsN,IAAImY,EAAS,GACjCI,EAAK7lB,KAAKsN,IAAIsY,EAAG,GACjBE,EAAK9lB,KAAKkN,IAAIuY,GAAWplB,EAAQL,KAAKuN,IAAIc,GAAO,EACjDyM,EAAI9a,KAAKsN,IAAIwY,EAAI,GACjBtY,EAAKxN,KAAKsN,IAAIwN,EAAG,GACrB/N,EAAM,EAAIpG,KAAKmH,GAAK9N,KAAKsN,IAAIkY,EAAS,GACtCE,GAAU1lB,KAAKgN,KAAKD,GACpB,IAAIgZ,EAAKX,GAAQ/W,EAAKmX,EAASC,EAAS9e,KAAKme,IAE7C7X,EAAItG,KAAKrE,GAAKqE,KAAKrC,GAAKohB,GAAM,EAC5BC,EAAM,GAAK,EAAI7K,EAAI8K,EACnBD,EAAM,IAAM,EAAI,GAAK7K,EAAItN,EAAK,GAAKoY,EAAI,GAAK9K,EAAI8K,EAChDD,EAAM,IAAM,GAAK,IAAMnY,EAAKA,EAAKsN,EAAI,IAAMA,OAC3CnU,KAAKzC,GAEPiK,EAAIxH,KAAKrE,GAAKqE,KAAKrC,IAAMyhB,EAAKpf,KAAK2e,IACjCE,EAAUD,EAAYG,EAAK,GAAK,EAChCC,EAAM,IAAM,EAAI7K,EAAI,EAAI8K,EAAI,EAAIC,EAChCF,EAAM,IAAM,GAAKnY,EAAK,GAAKsN,EAAI,IAAM8K,EAAI,IAAM9K,EAAI8K,EACnDD,EAAM,IAAM,KAAO,IAAMnY,EAAKA,EAAKsN,EAAI,KAAOA,QAC9CnU,KAAKvC,OArDK,CACZ,IAAII,EAAIihB,EAAUzlB,KAAK4N,IAAI2X,GAE3B,GAAKvlB,KAAKkN,IAAIlN,KAAKkN,IAAI1I,GAAK,GAAMnE,EAChC,OAAQ,GAOR,GAJA4M,EAAI,GAAMtG,KAAKrE,EAAIqE,KAAKrC,GAAKtE,KAAKuL,KAAK,EAAI/G,IAAM,EAAIA,IAAMmC,KAAKzC,GAChEiK,EAAIsX,EAAUzlB,KAAKgO,IAAIuX,GAAavlB,KAAKgN,KAAK,EAAIhN,KAAKsN,IAAI9I,EAAG,IAC9DA,EAAIxE,KAAKkN,IAAIiB,GAET3J,GAAK,EAAG,CACV,GAAKA,EAAI,EAAKnE,EACZ,OAAQ,GAGR8N,EAAI,OAINA,EAAInO,KAAKgmB,KAAK7X,GAGZE,EAAM,IACRF,GAAKA,GAGPA,EAAIxH,KAAKrE,EAAIqE,KAAKrC,IAAM6J,EAAIxH,KAAK3D,MAAQ2D,KAAKvC,GAgClD,OAHA5B,EAAEyK,EAAIA,EACNzK,EAAE2L,EAAIA,EAEC3L,EAMF,SAASgM,GAAQhM,GACtB,IAAIuK,EAAKK,EACLiB,EAAKD,EACLnB,GAAKzK,EAAEyK,EAAItG,KAAKzC,KAAO,EAAIyC,KAAKrE,GAChC6L,GAAK3L,EAAE2L,EAAIxH,KAAKvC,KAAO,EAAIuC,KAAKrE,GAEpC,GAAKqE,KAAKmH,GAuBR,GAHAf,EAAMpG,KAAK2e,IAAMnX,EAAIxH,KAAKrC,GAC1B8I,EAAM6Y,GAAYlZ,EAAKpG,KAAKmH,GAAInH,KAAKme,IAEjC9kB,KAAKkN,IAAIE,GAAOrN,EAAS,CAC3B,IAAIylB,EAAUxlB,KAAK4N,IAAIR,GACnBqY,EAAUzlB,KAAKgO,IAAIZ,GACnB8Y,EAAUlmB,KAAKkN,IAAIuY,GAAWplB,EAAQL,KAAKuN,IAAIH,GAAO,EACtDwY,EAAIjf,KAAKgJ,IAAM3P,KAAKsN,IAAImY,EAAS,GACjCI,EAAK7lB,KAAKsN,IAAIsY,EAAG,GACjB9K,EAAI9a,KAAKsN,IAAI4Y,EAAS,GACtB1Y,EAAKxN,KAAKsN,IAAIwN,EAAG,GACrB/N,EAAM,EAAIpG,KAAKmH,GAAK9N,KAAKsN,IAAIkY,EAAS,GACtC,IAAIW,EAAIlZ,EAAIjN,KAAKgN,KAAKD,GAAOpG,KAAKrC,GAC9B8hB,EAAKpmB,KAAKsN,IAAI6Y,EAAG,GACrBpZ,GAAYmZ,EAEZ7X,EAAMjB,EAAOL,EAAMqZ,GAAM,EAAIzf,KAAKmH,IAAO,IAAO,EAC9CsY,EAAK,IAAM,EAAI,EAAItL,EAAI,EAAI8K,EAAI9K,EAAI8K,EAAI,EAAIC,EAC3CO,EAAK,IAAM,GAAK,GAAKtL,EAAI,IAAM8K,EAAI9K,EAAI,GAAKtN,EAAK,GAAKoY,EACtDQ,EAAK,IAAM,KAAO,KAAOtL,EAAI,KAAOtN,EAAK,KAAOA,EAAKsN,MAEvD1M,EAAME,GAAW3H,KAAKpD,MAAS4iB,GAAK,EAClCC,EAAK,GAAK,EAAI,EAAItL,EAAI8K,EACtBQ,EAAK,IAAM,EAAI,GAAKtL,EAAI,GAAKtN,EAAK,EAAIoY,EAAI9K,EAAI,EAAI8K,EAClDQ,EAAK,IAAM,GAAK,IAAMtL,EAAI,KAAOtN,EAAK,IAAMA,EAAKsN,MAAQ2K,QAG3DpX,EAAMtO,EAAUoN,GAAKgB,GACrBC,EAAM,MAhDI,CACZ,IAAIiY,EAAIrmB,KAAKyO,IAAIxB,EAAItG,KAAKrC,IACtBgiB,EAAI,IAAOD,EAAI,EAAIA,GACnBE,EAAO5f,KAAK3D,KAAOmL,EAAIxH,KAAKrC,GAC5BkiB,EAAIxmB,KAAKgO,IAAIuY,GACjBxZ,EAAM/M,KAAKgN,MAAM,EAAIhN,KAAKsN,IAAIkZ,EAAG,KAAO,EAAIxmB,KAAKsN,IAAIgZ,EAAG,KACxDjY,EAAMrO,KAAKymB,KAAK1Z,GAEZoB,EAAI,IACNE,GAAOA,GAIPD,EADS,IAANkY,GAAmB,IAANE,EACV,EAGAlY,GAAWtO,KAAKwY,MAAM8N,EAAGE,GAAK7f,KAAKpD,OAuC7C,OAHAf,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EAEC7L,EAGF,IAAImM,GAAQ,CAAC,2BAA4B,4BAChD,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,IC3KM,YAAS1B,GACtB,IAAI0H,EAAI3U,KAAKyO,IAAIxB,GAEjB,OADA0H,GAAKA,EAAI,EAAIA,GAAK,EACXA,ECHM,YAAS1H,EAAGkB,GACzBlB,EAAIjN,KAAKkN,IAAID,GACbkB,EAAInO,KAAKkN,IAAIiB,GACb,IAAI7L,EAAItC,KAAK0mB,IAAIzZ,EAAGkB,GAChB3J,EAAIxE,KAAK2mB,IAAI1Z,EAAGkB,IAAM7L,GAAQ,GAElC,OAAOA,EAAItC,KAAKgN,KAAK,EAAIhN,KAAKsN,IAAI9I,EAAG,ICNxB,YAASyI,GACtB,IAAIkB,EAAI,EAAIlB,EACRiK,EAAI/I,EAAI,EAEZ,OAAa,IAAN+I,EAAUjK,EAAIA,EAAIjN,KAAKuL,IAAI4C,GAAK+I,ECD1B,YAASjK,GACtB,IAAIkB,EAAInO,KAAKkN,IAAID,GAGjB,OAFAkB,EAAIyY,GAAOzY,GAAK,EAAIA,GAAK0Y,GAAM,EAAG1Y,GAAK,KAEhClB,EAAI,GAAKkB,EAAIA,ECPP,YAAS2Y,EAAIC,GAC1B,IAIIP,EAJAQ,EAAS,EAAIhnB,KAAKgO,IAAI,EAAI+Y,GAC1BtlB,EAAIqlB,EAAGplB,OAAS,EAChBulB,EAAKH,EAAGrlB,GACRylB,EAAK,EAGT,QAASzlB,GAAK,EACZ+kB,EAAUQ,EAASC,EAAdC,EAAmBJ,EAAGrlB,GAC3BylB,EAAKD,EACLA,EAAKT,EAGP,OAAQO,EAAIP,EAAIxmB,KAAK4N,IAAI,EAAImZ,GCbhB,YAASD,EAAIK,GAC1B,IAIIC,EAJAzS,EAAI,EAAI3U,KAAKgO,IAAImZ,GACjB1lB,EAAIqlB,EAAGplB,OAAS,EAChB2lB,EAAMP,EAAGrlB,GACT6lB,EAAM,EAGV,QAAS7lB,GAAK,EACZ2lB,EAAYzS,EAAI0S,EAAVC,EAAgBR,EAAGrlB,GACzB6lB,EAAMD,EACNA,EAAMD,EAGR,OAAOpnB,KAAK4N,IAAIuZ,GAASC,ECbZ,YAASna,GACtB,IAAI0H,EAAI3U,KAAKyO,IAAIxB,GAEjB,OADA0H,GAAKA,EAAI,EAAIA,GAAK,EACXA,ECAM,YAASmS,EAAIK,EAAOI,GACjC,IAWID,EACAE,EAZAC,EAAYznB,KAAK4N,IAAIuZ,GACrBO,EAAY1nB,KAAKgO,IAAImZ,GACrBQ,EAAaC,GAAKL,GAClBM,EAAaC,GAAKP,GAClB5S,EAAI,EAAI+S,EAAYG,EACpBpmB,GAAK,EAAIgmB,EAAYE,EACrBI,EAAIjB,EAAGplB,OAAS,EAChB0lB,EAAKN,EAAGiB,GACRC,EAAM,EACNX,EAAM,EACNY,EAAK,EAIT,QAASF,GAAK,EACZT,EAAMD,EACNG,EAAMQ,EACNX,EAAMD,EACNY,EAAMC,EACNb,EAAYzS,EAAI0S,EAAVC,EAAgB7lB,EAAIumB,EAAMlB,EAAGiB,GACnCE,EAAYxmB,EAAI4lB,EAAVG,EAAgB7S,EAAIqT,EAM5B,OAHArT,EAAI8S,EAAYI,EAChBpmB,EAAIimB,EAAYC,EAET,CAAChT,EAAIyS,EAAK3lB,EAAIwmB,EAAItT,EAAIsT,EAAKxmB,EAAI2lB,GClBjC,SAASvZ,KACd,IAAKlH,KAAKf,SAAW6U,MAAM9T,KAAKmH,KAAOnH,KAAKmH,IAAM,GAChD,MAAM,IAAIpH,MAAM,sIAEdC,KAAKf,SAEPsiB,GAAMra,KAAK3C,MAAMvE,MACjBA,KAAKuH,QAAUga,GAAMha,QACrBvH,KAAK6H,QAAU0Z,GAAM1Z,SAGvB7H,KAAKzC,QAAiByI,IAAZhG,KAAKzC,GAAmByC,KAAKzC,GAAK,EAC5CyC,KAAKvC,QAAiBuI,IAAZhG,KAAKvC,GAAmBuC,KAAKvC,GAAK,EAC5CuC,KAAKpD,WAAuBoJ,IAAfhG,KAAKpD,MAAsBoD,KAAKpD,MAAQ,EACrDoD,KAAK3D,UAAqB2J,IAAdhG,KAAK3D,KAAqB2D,KAAK3D,KAAO,EAElD2D,KAAKwhB,IAAM,GACXxhB,KAAKyhB,IAAM,GACXzhB,KAAK0hB,IAAM,GACX1hB,KAAK2hB,IAAM,GAEX,IAAIjC,EAAI1f,KAAKmH,IAAM,EAAI9N,KAAKgN,KAAK,EAAIrG,KAAKmH,KACtCsB,EAAIiX,GAAK,EAAIA,GACbkC,EAAKnZ,EAETzI,KAAKwhB,IAAI,GAAK/Y,GAAK,EAAIA,IAAM,EAAI,EAAIA,GAAUA,GAAK,IAAM,GAAKA,GAAK,GAAK,GAAKA,IAAM,KAAO,OAAhD,KAC3CzI,KAAKyhB,IAAI,GAAKhZ,GAAUA,GAAM,EAAI,EAAIA,GAAM,EAAI,EAAIA,IAAM,GAAK,GAAKA,GAAK,GAAK,GAAKA,GAAK,KAAO,UAA3E,GAEpBmZ,GAAUnZ,EACVzI,KAAKwhB,IAAI,GAAKI,GAAM,EAAI,EAAInZ,GAAcA,IAAM,IAAM,GAAKA,GAAK,KAAO,IAAMA,GAAK,KAAO,OAAxD,MACjCzI,KAAKyhB,IAAI,GAAKG,GAAM,EAAI,EAAInZ,IAAM,GAAK,GAAKA,IAAO,GAAK,EAAIA,GAAK,IAAM,IAAMA,IAAM,KAAO,SAE1FmZ,GAAUnZ,EACVzI,KAAKwhB,IAAI,GAAKI,GAAM,GAAK,GAAKnZ,IAAM,IAAM,GAAKA,IAAM,KAAO,IAAMA,GAAK,MAAQ,SAC/EzI,KAAKyhB,IAAI,GAAKG,IAAO,GAAK,GAAKnZ,GAAK,GAAK,GAAKA,GAAK,IAAQA,IAAM,MAAQ,SAEzEmZ,GAAUnZ,EACVzI,KAAKwhB,IAAI,GAAKI,GAAM,KAAO,IAAMnZ,IAAM,IAAM,GAAKA,IAAM,OAAS,SACjEzI,KAAKyhB,IAAI,GAAKG,GAAM,KAAO,IAAMnZ,GAAeA,IAAO,MAAQ,OAAzB,MAEtCmZ,GAAUnZ,EACVzI,KAAKwhB,IAAI,GAAKI,GAAM,KAAO,IAAMnZ,IAAM,OAAS,OAChDzI,KAAKyhB,IAAI,GAAKG,IAAO,IAAM,IAAMnZ,GAAK,OAAS,QAE/CmZ,GAAUnZ,EACVzI,KAAKwhB,IAAI,GAAKI,GAAM,OAAS,OAC7B5hB,KAAKyhB,IAAI,GAAKG,GAAM,OAAS,QAE7BA,EAAKvoB,KAAKsN,IAAI8B,EAAG,GACjBzI,KAAK6hB,GAAK7hB,KAAKrC,IAAM,EAAI8K,IAAM,EAAImZ,GAAM,EAAI,EAAIA,GAAM,EAAI,GAAKA,EAAK,OAErE5hB,KAAK0hB,IAAI,GAAKjZ,GAAYA,GAAM,EAAI,EAAIA,IAAM,GAAK,GAAKA,GAAM,EAAI,IAAMA,GAAK,GAAK,IAAMA,IAAM,MAAQ,YAAlF,IACpBzI,KAAK2hB,IAAI,GAAKlZ,GAAK,GAAMA,IAAM,EAAI,EAAIA,GAAK,EAAI,GAAKA,GAAK,GAAK,IAAMA,IAAM,IAAM,IAAMA,GAAK,KAAO,YAEnGzI,KAAK0hB,IAAI,GAAKE,IAAO,EAAI,GAAKnZ,IAAM,EAAI,GAAKA,GAAK,IAAM,KAAOA,IAAM,GAAK,IAAMA,GAAK,QAAU,aAC/FzI,KAAK2hB,IAAI,GAAKC,GAAM,GAAK,GAAKnZ,GAAcA,GAAK,IAAM,KAAOA,GAAK,IAAM,IAAMA,IAAM,QAAU,WAA5D,KAEnCmZ,GAAUnZ,EACVzI,KAAK0hB,IAAI,GAAKE,IAAO,GAAK,IAAMnZ,GAAK,GAAK,IAAMA,GAAK,IAAM,KAAOA,IAAM,KAAO,UAC/EzI,KAAK2hB,IAAI,GAAKC,GAAM,GAAK,IAAMnZ,IAAM,IAAM,IAAMA,GAAK,MAAQ,MAAQA,GAAK,OAAS,WAEpFmZ,GAAUnZ,EACVzI,KAAK0hB,IAAI,GAAKE,IAAO,KAAO,OAASnZ,GAAK,GAAK,IAAMA,GAAK,OAAS,WACnEzI,KAAK2hB,IAAI,GAAKC,GAAM,MAAQ,OAASnZ,IAAM,IAAM,IAAMA,GAAK,QAAU,WAEtEmZ,GAAUnZ,EACVzI,KAAK0hB,IAAI,GAAKE,IAAO,KAAO,OAASnZ,GAAK,OAAS,UACnDzI,KAAK2hB,IAAI,GAAKC,GAAM,MAAQ,MAAQnZ,IAAM,QAAU,UAEpDmZ,GAAUnZ,EACVzI,KAAK0hB,IAAI,GAAKE,IAAO,SAAW,WAChC5hB,KAAK2hB,IAAI,GAAU,kBAALC,EAEd,IAAIhQ,EAAIkQ,GAAK9hB,KAAKyhB,IAAKzhB,KAAK3D,MAC5B2D,KAAK+hB,IAAM/hB,KAAK6hB,IAAMjQ,EAAIoQ,GAAMhiB,KAAK2hB,IAAK,EAAI/P,IAGzC,SAASrK,GAAQ1L,GACtB,IAAIomB,EAAKta,GAAW9L,EAAEyK,EAAItG,KAAKpD,OAC3BslB,EAAKrmB,EAAE2L,EAEX0a,EAAKJ,GAAK9hB,KAAKyhB,IAAKS,GACpB,IAAIC,EAAS9oB,KAAK4N,IAAIib,GAClBE,EAAS/oB,KAAKgO,IAAI6a,GAClBG,EAAShpB,KAAK4N,IAAIgb,GAClBK,EAASjpB,KAAKgO,IAAI4a,GAEtBC,EAAK7oB,KAAKwY,MAAMsQ,EAAQG,EAASF,GACjCH,EAAK5oB,KAAKwY,MAAMwQ,EAASD,EAAQlC,GAAMiC,EAAQC,EAASE,IACxDL,EAAKM,GAAOlpB,KAAKuN,IAAIqb,IAErB,IAKI3b,EACAkB,EANAgb,EAAMC,GAAYziB,KAAK2hB,IAAK,EAAIO,EAAI,EAAID,GAoB5C,OAlBAC,GAAUM,EAAI,GACdP,GAAUO,EAAI,GAKVnpB,KAAKkN,IAAI0b,IAAO,gBAClB3b,EAAItG,KAAKrE,GAAKqE,KAAK6hB,GAAKI,GAAMjiB,KAAKzC,GACnCiK,EAAIxH,KAAKrE,GAAKqE,KAAK6hB,GAAKK,EAAKliB,KAAK+hB,IAAM/hB,KAAKvC,KAG7C6I,EAAIkK,IACJhJ,EAAIgJ,KAGN3U,EAAEyK,EAAIA,EACNzK,EAAE2L,EAAIA,EAEC3L,EAGF,SAASgM,GAAQhM,GACtB,IAMI4L,EACAC,EAPAua,GAAMpmB,EAAEyK,EAAItG,KAAKzC,KAAO,EAAIyC,KAAKrE,GACjCumB,GAAMrmB,EAAE2L,EAAIxH,KAAKvC,KAAO,EAAIuC,KAAKrE,GAQrC,GANAumB,GAAMA,EAAKliB,KAAK+hB,IAAM/hB,KAAK6hB,GAC3BI,GAAUjiB,KAAK6hB,GAKXxoB,KAAKkN,IAAI0b,IAAO,eAAgB,CAClC,IAAIO,EAAMC,GAAYziB,KAAK0hB,IAAK,EAAIQ,EAAI,EAAID,GAE5CC,GAAUM,EAAI,GACdP,GAAUO,EAAI,GACdP,EAAK5oB,KAAK2N,KAAKia,GAAKgB,IAEpB,IAAIE,EAAS9oB,KAAK4N,IAAIib,GAClBE,EAAS/oB,KAAKgO,IAAI6a,GAClBG,EAAShpB,KAAK4N,IAAIgb,GAClBK,EAASjpB,KAAKgO,IAAI4a,GAEtBC,EAAK7oB,KAAKwY,MAAMsQ,EAASG,EAAQpC,GAAMmC,EAAQC,EAASF,IACxDH,EAAK5oB,KAAKwY,MAAMwQ,EAAQC,EAASF,GAEjC3a,EAAME,GAAWsa,EAAKjiB,KAAKpD,OAC3B8K,EAAMoa,GAAK9hB,KAAKwhB,IAAKU,QAGrBza,EAAM+I,IACN9I,EAAM8I,IAMR,OAHA3U,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EAEC7L,EAGF,IAAImM,GAAQ,CAAC,+BAAgC,+BAAgC,SAAU,sBAAuB,sBAAuB,SAC5I,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,ICxKM,YAAShK,EAAMyJ,GAC5B,QAAazB,IAAThI,EAAoB,CAGtB,GAFAA,EAAO3E,KAAKob,MAAoC,IAA7B9M,GAAWF,GAAOpO,KAAKC,IAAWD,KAAKC,IAAM,EAE5D0E,EAAO,EACT,OAAO,EACF,GAAIA,EAAO,GAChB,OAAO,GAGX,OAAOA,ECVF,IAAI0kB,GAAY,SAIhB,SAASxb,KACd,IAAIlJ,EAAO2kB,GAAY3iB,KAAKhC,KAAMgC,KAAKpD,OACvC,QAAaoJ,IAAThI,EACF,MAAM,IAAI+B,MAAM,oBAElBC,KAAK3D,KAAO,EACZ2D,KAAKpD,OAAW,EAAIvD,KAAKkN,IAAIvI,GAAS,KAAOrE,EAC7CqG,KAAKzC,GAAK,IACVyC,KAAKvC,GAAKuC,KAAK7B,SAAW,IAAW,EACrC6B,KAAKrC,GAAK,MAEVilB,GAAO1b,KAAK3C,MAAMvE,MAClBA,KAAKuH,QAAUqb,GAAOrb,QACtBvH,KAAK6H,QAAU+a,GAAO/a,QAGjB,IAAIG,GAAQ,CAAC,uCAAwC,OAC5D,IACEd,KAAMA,GACNc,MAAOA,GACP0a,UAAWA,IC1BE,YAASG,EAAO/a,GAC7B,OAAQzO,KAAKsN,KAAK,EAAIkc,IAAU,EAAIA,GAAQ/a,GCA9C,IAAIwW,GAAW,GAGR,SAASpX,KACd,IAAIkX,EAAO/kB,KAAK4N,IAAIjH,KAAK3D,MACrBgiB,EAAOhlB,KAAKgO,IAAIrH,KAAK3D,MACzBgiB,GAAQA,EACRre,KAAK8iB,GAAKzpB,KAAKgN,KAAK,EAAIrG,KAAKmH,KAAO,EAAInH,KAAKmH,GAAKiX,EAAOA,GACzDpe,KAAK6Y,EAAIxf,KAAKgN,KAAK,EAAIrG,KAAKmH,GAAKkX,EAAOA,GAAQ,EAAIre,KAAKmH,KACzDnH,KAAK+iB,MAAQ1pB,KAAKymB,KAAK1B,EAAOpe,KAAK6Y,GACnC7Y,KAAKgjB,OAAS,GAAMhjB,KAAK6Y,EAAI7Y,KAAKoH,EAClCpH,KAAKijB,EAAI5pB,KAAKuN,IAAI,GAAM5G,KAAK+iB,MAAQlpB,IAAWR,KAAKsN,IAAItN,KAAKuN,IAAI,GAAM5G,KAAK3D,KAAOxC,GAASmG,KAAK6Y,GAAKqK,GAAKljB,KAAKoH,EAAIgX,EAAMpe,KAAKgjB,SAG3H,SAASzb,GAAQ1L,GACtB,IAAI4L,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAIZ,OAFA3L,EAAE2L,EAAI,EAAInO,KAAK2N,KAAKhH,KAAKijB,EAAI5pB,KAAKsN,IAAItN,KAAKuN,IAAI,GAAMc,EAAM7N,GAASmG,KAAK6Y,GAAKqK,GAAKljB,KAAKoH,EAAI/N,KAAK4N,IAAIS,GAAM1H,KAAKgjB,SAAW5pB,EAC3HyC,EAAEyK,EAAItG,KAAK6Y,EAAIpR,EACR5L,EAGF,SAASgM,GAAQhM,GAKtB,IAJA,IAAIsnB,EAAU,MACV1b,EAAM5L,EAAEyK,EAAItG,KAAK6Y,EACjBnR,EAAM7L,EAAE2L,EACRmO,EAAMtc,KAAKsN,IAAItN,KAAKuN,IAAI,GAAMc,EAAM7N,GAAUmG,KAAKijB,EAAG,EAAIjjB,KAAK6Y,GAC1D/d,EAAIwjB,GAAUxjB,EAAI,IAAKA,EAAG,CAEjC,GADA4M,EAAM,EAAIrO,KAAK2N,KAAK2O,EAAMuN,GAAKljB,KAAKoH,EAAI/N,KAAK4N,IAAIpL,EAAE2L,IAAM,GAAMxH,KAAKoH,IAAMhO,EACtEC,KAAKkN,IAAImB,EAAM7L,EAAE2L,GAAK2b,EACxB,MAEFtnB,EAAE2L,EAAIE,EAGR,OAAK5M,GAGLe,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,GAJE,KAOJ,IAAImM,GAAQ,CAAC,SACpB,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,IC/CF,SAASd,KACdkc,GAAMlc,KAAK3C,MAAMvE,MACZA,KAAK8iB,KAGV9iB,KAAKqjB,MAAQhqB,KAAK4N,IAAIjH,KAAK+iB,OAC3B/iB,KAAKsjB,MAAQjqB,KAAKgO,IAAIrH,KAAK+iB,OAC3B/iB,KAAKujB,GAAK,EAAIvjB,KAAK8iB,GACd9iB,KAAKwjB,QACRxjB,KAAKwjB,MAAQ,sCAIV,SAASjc,GAAQ1L,GACtB,IAAI4nB,EAAMC,EAAMC,EAAM/lB,EAWtB,OAVA/B,EAAEyK,EAAIqB,GAAW9L,EAAEyK,EAAItG,KAAKpD,OAC5BwmB,GAAM7b,QAAQhD,MAAMvE,KAAM,CAACnE,IAC3B4nB,EAAOpqB,KAAK4N,IAAIpL,EAAE2L,GAClBkc,EAAOrqB,KAAKgO,IAAIxL,EAAE2L,GAClBmc,EAAOtqB,KAAKgO,IAAIxL,EAAEyK,GAClB1I,EAAIoC,KAAKrC,GAAKqC,KAAKujB,IAAM,EAAIvjB,KAAKqjB,MAAQI,EAAOzjB,KAAKsjB,MAAQI,EAAOC,GACrE9nB,EAAEyK,EAAI1I,EAAI8lB,EAAOrqB,KAAK4N,IAAIpL,EAAEyK,GAC5BzK,EAAE2L,EAAI5J,GAAKoC,KAAKsjB,MAAQG,EAAOzjB,KAAKqjB,MAAQK,EAAOC,GACnD9nB,EAAEyK,EAAItG,KAAKrE,EAAIE,EAAEyK,EAAItG,KAAKzC,GAC1B1B,EAAE2L,EAAIxH,KAAKrE,EAAIE,EAAE2L,EAAIxH,KAAKvC,GACnB5B,EAGF,SAASgM,GAAQhM,GACtB,IAAI4nB,EAAMC,EAAMjc,EAAKC,EAAKkc,EAM1B,GALA/nB,EAAEyK,GAAKzK,EAAEyK,EAAItG,KAAKzC,IAAMyC,KAAKrE,EAC7BE,EAAE2L,GAAK3L,EAAE2L,EAAIxH,KAAKvC,IAAMuC,KAAKrE,EAE7BE,EAAEyK,GAAKtG,KAAKrC,GACZ9B,EAAE2L,GAAKxH,KAAKrC,GACPimB,EAAMvqB,KAAKgN,KAAKxK,EAAEyK,EAAIzK,EAAEyK,EAAIzK,EAAE2L,EAAI3L,EAAE2L,GAAK,CAC5C,IAAIyX,EAAI,EAAI5lB,KAAKwY,MAAM+R,EAAK5jB,KAAKujB,IACjCE,EAAOpqB,KAAK4N,IAAIgY,GAChByE,EAAOrqB,KAAKgO,IAAI4X,GAChBvX,EAAMrO,KAAKymB,KAAK4D,EAAO1jB,KAAKqjB,MAAQxnB,EAAE2L,EAAIic,EAAOzjB,KAAKsjB,MAAQM,GAC9Dnc,EAAMpO,KAAKwY,MAAMhW,EAAEyK,EAAImd,EAAMG,EAAM5jB,KAAKsjB,MAAQI,EAAO7nB,EAAE2L,EAAIxH,KAAKqjB,MAAQI,QAG1E/b,EAAM1H,KAAK+iB,MACXtb,EAAM,EAOR,OAJA5L,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACN0b,GAAMvb,QAAQtD,MAAMvE,KAAM,CAACnE,IAC3BA,EAAEyK,EAAIqB,GAAW9L,EAAEyK,EAAItG,KAAKpD,OACrBf,EAGF,IAAImM,GAAQ,CAAC,2BAA4B,wBAAyB,sBAAuB,SAAS,oCAAoC,wBAC7I,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,ICtDF,SAAS6b,GAAMC,EAAM5d,EAAQ6d,GAElC,OADA7d,GAAU6d,EACF1qB,KAAKuN,IAAI,IAAOxN,EAAU0qB,IAASzqB,KAAKsN,KAAK,EAAIT,IAAW,EAAIA,GAAS,GAAM6d,GAGlF,SAAS7c,KACdlH,KAAKgkB,QAAU3qB,KAAKgO,IAAIrH,KAAK3D,MAC7B2D,KAAKikB,QAAU5qB,KAAK4N,IAAIjH,KAAK3D,MACzB2D,KAAK0D,OACS,IAAZ1D,KAAKrC,KAAamW,MAAM9T,KAAKtD,SAAWrD,KAAKkN,IAAIvG,KAAKgkB,UAAYtqB,IACpEsG,KAAKrC,GAAK,IAAO,EAAI6I,GAAKxG,KAAK3D,MAAQhD,KAAK4N,IAAIjH,KAAKtD,WAInDrD,KAAKkN,IAAIvG,KAAKgkB,UAAYtqB,IACxBsG,KAAK3D,KAAO,EAGd2D,KAAKoG,IAAM,EAKXpG,KAAKoG,KAAO,GAGhBpG,KAAKkkB,KAAO7qB,KAAKgN,KAAKhN,KAAKsN,IAAI,EAAI3G,KAAKoH,EAAG,EAAIpH,KAAKoH,GAAK/N,KAAKsN,IAAI,EAAI3G,KAAKoH,EAAG,EAAIpH,KAAKoH,IACvE,IAAZpH,KAAKrC,KAAamW,MAAM9T,KAAKtD,SAAWrD,KAAKkN,IAAIvG,KAAKgkB,UAAYtqB,IACpEsG,KAAKrC,GAAK,GAAMqC,KAAKkkB,KAAO5c,GAAMtH,KAAKoH,EAAG/N,KAAK4N,IAAIjH,KAAKtD,QAASrD,KAAKgO,IAAIrH,KAAKtD,SAAWkL,GAAM5H,KAAKoH,EAAGpH,KAAKoG,IAAMpG,KAAKtD,OAAQsD,KAAKoG,IAAM/M,KAAK4N,IAAIjH,KAAKtD,UAE3JsD,KAAKmkB,IAAM7c,GAAMtH,KAAKoH,EAAGpH,KAAKikB,QAASjkB,KAAKgkB,SAC5ChkB,KAAKokB,GAAK,EAAI/qB,KAAK2N,KAAKhH,KAAK6jB,MAAM7jB,KAAK3D,KAAM2D,KAAKikB,QAASjkB,KAAKoH,IAAMhO,EACvE4G,KAAKqkB,MAAQhrB,KAAKgO,IAAIrH,KAAKokB,IAC3BpkB,KAAKskB,MAAQjrB,KAAK4N,IAAIjH,KAAKokB,KAKxB,SAAS7c,GAAQ1L,GACtB,IAIIwb,EAAG3F,EAAG6S,EAAMC,EAAM3d,EAAI4d,EAJtBhd,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EACRkd,EAASrrB,KAAK4N,IAAIS,GAClBid,EAAStrB,KAAKgO,IAAIK,GAElBkd,EAAOjd,GAAWF,EAAMzH,KAAKpD,OAEjC,OAAIvD,KAAKkN,IAAIlN,KAAKkN,IAAIkB,EAAMzH,KAAKpD,OAASvD,KAAKC,KAAOI,GAASL,KAAKkN,IAAImB,EAAM1H,KAAK3D,OAAS3C,GAG1FmC,EAAEyK,EAAI+M,IACNxX,EAAE2L,EAAI6L,IACCxX,GAELmE,KAAK0D,QAEP2T,EAAI,EAAIrX,KAAKrC,IAAM,EAAIqC,KAAKikB,QAAUS,EAAS1kB,KAAKgkB,QAAUW,EAAStrB,KAAKgO,IAAIud,IAChF/oB,EAAEyK,EAAItG,KAAKrE,EAAI0b,EAAIsN,EAAStrB,KAAK4N,IAAI2d,GAAQ5kB,KAAKzC,GAClD1B,EAAE2L,EAAIxH,KAAKrE,EAAI0b,GAAKrX,KAAKgkB,QAAUU,EAAS1kB,KAAKikB,QAAUU,EAAStrB,KAAKgO,IAAIud,IAAS5kB,KAAKvC,GACpF5B,IAGP6V,EAAI,EAAIrY,KAAK2N,KAAKhH,KAAK6jB,MAAMnc,EAAKgd,EAAQ1kB,KAAKoH,IAAMhO,EACrDorB,EAAOnrB,KAAKgO,IAAIqK,GAChB6S,EAAOlrB,KAAK4N,IAAIyK,GACZrY,KAAKkN,IAAIvG,KAAKgkB,UAAYtqB,GAC5BmN,EAAKe,GAAM5H,KAAKoH,EAAGM,EAAM1H,KAAKoG,IAAKpG,KAAKoG,IAAMse,GAC9CD,EAAK,EAAIzkB,KAAKrE,EAAIqE,KAAKrC,GAAKkJ,EAAK7G,KAAKkkB,KACtCroB,EAAEyK,EAAItG,KAAKzC,GAAKknB,EAAKprB,KAAK4N,IAAIQ,EAAMzH,KAAKpD,OACzCf,EAAE2L,EAAIxH,KAAKvC,GAAKuC,KAAKoG,IAAMqe,EAAKprB,KAAKgO,IAAII,EAAMzH,KAAKpD,OAE7Cf,IAEAxC,KAAKkN,IAAIvG,KAAKikB,SAAWvqB,GAGhC2d,EAAI,EAAIrX,KAAKrE,EAAIqE,KAAKrC,IAAM,EAAI6mB,EAAOnrB,KAAKgO,IAAIud,IAChD/oB,EAAE2L,EAAI6P,EAAIkN,IAKVlN,EAAI,EAAIrX,KAAKrE,EAAIqE,KAAKrC,GAAKqC,KAAKmkB,KAAOnkB,KAAKqkB,OAAS,EAAIrkB,KAAKskB,MAAQC,EAAOvkB,KAAKqkB,MAAQG,EAAOnrB,KAAKgO,IAAIud,KAC1G/oB,EAAE2L,EAAI6P,GAAKrX,KAAKqkB,MAAQE,EAAOvkB,KAAKskB,MAAQE,EAAOnrB,KAAKgO,IAAIud,IAAS5kB,KAAKvC,IAE5E5B,EAAEyK,EAAI+Q,EAAImN,EAAOnrB,KAAK4N,IAAI2d,GAAQ5kB,KAAKzC,GAGlC1B,IAIF,SAASgM,GAAQhM,GAGtB,IAAI4L,EAAKC,EAAKb,EAAIge,EAAIC,EAFtBjpB,EAAEyK,GAAKtG,KAAKzC,GACZ1B,EAAE2L,GAAKxH,KAAKvC,GAEZ,IAAIgnB,EAAKprB,KAAKgN,KAAKxK,EAAEyK,EAAIzK,EAAEyK,EAAIzK,EAAE2L,EAAI3L,EAAE2L,GACvC,GAAIxH,KAAK0D,OAAQ,CACf,IAAIub,EAAI,EAAI5lB,KAAK2N,KAAKyd,GAAM,EAAIzkB,KAAKrE,EAAIqE,KAAKrC,KAG9C,OAFA8J,EAAMzH,KAAKpD,MACX8K,EAAM1H,KAAK3D,KACPooB,GAAM/qB,GACRmC,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,IAET6L,EAAMrO,KAAKymB,KAAKzmB,KAAKgO,IAAI4X,GAAKjf,KAAKikB,QAAUpoB,EAAE2L,EAAInO,KAAK4N,IAAIgY,GAAKjf,KAAKgkB,QAAUS,GAG5Ehd,EAFApO,KAAKkN,IAAIvG,KAAKgkB,SAAWtqB,EACvBsG,KAAK3D,KAAO,EACRsL,GAAW3H,KAAKpD,MAAQvD,KAAKwY,MAAMhW,EAAEyK,GAAK,EAAIzK,EAAE2L,IAGhDG,GAAW3H,KAAKpD,MAAQvD,KAAKwY,MAAMhW,EAAEyK,EAAGzK,EAAE2L,IAI5CG,GAAW3H,KAAKpD,MAAQvD,KAAKwY,MAAMhW,EAAEyK,EAAIjN,KAAK4N,IAAIgY,GAAIwF,EAAKzkB,KAAKgkB,QAAU3qB,KAAKgO,IAAI4X,GAAKpjB,EAAE2L,EAAIxH,KAAKikB,QAAU5qB,KAAK4N,IAAIgY,KAE9HpjB,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,GAGP,GAAIxC,KAAKkN,IAAIvG,KAAKgkB,UAAYtqB,EAAO,CACnC,GAAI+qB,GAAM/qB,EAMR,OALAgO,EAAM1H,KAAK3D,KACXoL,EAAMzH,KAAKpD,MACXf,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EAEC7L,EAETA,EAAEyK,GAAKtG,KAAKoG,IACZvK,EAAE2L,GAAKxH,KAAKoG,IACZS,EAAK4d,EAAKzkB,KAAKkkB,MAAQ,EAAIlkB,KAAKrE,EAAIqE,KAAKrC,IACzC+J,EAAM1H,KAAKoG,IAAM2B,GAAM/H,KAAKoH,EAAGP,GAC/BY,EAAMzH,KAAKoG,IAAMuB,GAAW3H,KAAKoG,IAAMpG,KAAKpD,MAAQvD,KAAKwY,MAAMhW,EAAEyK,GAAK,EAAIzK,EAAE2L,SAG5Eqd,EAAK,EAAIxrB,KAAK2N,KAAKyd,EAAKzkB,KAAKqkB,OAAS,EAAIrkB,KAAKrE,EAAIqE,KAAKrC,GAAKqC,KAAKmkB,MAClE1c,EAAMzH,KAAKpD,MACP6nB,GAAM/qB,EACRorB,EAAM9kB,KAAKokB,IAGXU,EAAMzrB,KAAKymB,KAAKzmB,KAAKgO,IAAIwd,GAAM7kB,KAAKskB,MAAQzoB,EAAE2L,EAAInO,KAAK4N,IAAI4d,GAAM7kB,KAAKqkB,MAAQI,GAC9Ehd,EAAME,GAAW3H,KAAKpD,MAAQvD,KAAKwY,MAAMhW,EAAEyK,EAAIjN,KAAK4N,IAAI4d,GAAKJ,EAAKzkB,KAAKqkB,MAAQhrB,KAAKgO,IAAIwd,GAAMhpB,EAAE2L,EAAIxH,KAAKskB,MAAQjrB,KAAK4N,IAAI4d,MAE5Hnd,GAAO,EAAIK,GAAM/H,KAAKoH,EAAG/N,KAAKuN,IAAI,IAAOxN,EAAU0rB,KAOvD,OAJAjpB,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EAGC7L,EAIF,IAAImM,GAAQ,CAAC,QAAS,2BAA4B,mCACzD,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,GACP6b,MAAOA,ICpKF,SAAS3c,KACd,IAAI6d,EAAO/kB,KAAK3D,KAChB2D,KAAKglB,QAAUhlB,KAAKpD,MACpB,IAAIqoB,EAAU5rB,KAAK4N,IAAI8d,GACnBG,EAAgBllB,KAAKrE,EACrBwpB,EAAOnlB,KAAK9D,GACZkpB,EAAa,EAAID,EACjBE,EAAK,EAAID,EAAa/rB,KAAKsN,IAAIye,EAAY,GAC3Che,EAAIpH,KAAKoH,EAAI/N,KAAKgN,KAAKgf,GAC3BrlB,KAAKslB,EAAItlB,KAAKrC,GAAKunB,EAAgB7rB,KAAKgN,KAAK,EAAIgf,IAAO,EAAIA,EAAKhsB,KAAKsN,IAAIse,EAAS,IACnFjlB,KAAK/C,MAAQ5D,KAAKgN,KAAK,EAAIgf,GAAM,EAAIA,GAAMhsB,KAAKsN,IAAItN,KAAKgO,IAAI0d,GAAO,IACpE/kB,KAAKulB,GAAKlsB,KAAKymB,KAAKmF,EAAUjlB,KAAK/C,OACnC,IAAIuoB,EAAKnsB,KAAKuL,IAAIvL,KAAKuN,IAAIvN,KAAKC,GAAK,EAAI0G,KAAKulB,GAAK,IAC/CE,EAAKpsB,KAAKuL,IAAIvL,KAAKuN,IAAIvN,KAAKC,GAAK,EAAIyrB,EAAO,IAC5CW,EAAKrsB,KAAKuL,KAAK,EAAIwC,EAAI6d,IAAY,EAAI7d,EAAI6d,IAC/CjlB,KAAKijB,EAAIuC,EAAKxlB,KAAK/C,MAAQwoB,EAAKzlB,KAAK/C,MAAQmK,EAAI,EAAIse,EAGhD,SAASne,GAAQ1L,GACtB,IAAI8pB,EAAMtsB,KAAKuL,IAAIvL,KAAKuN,IAAIvN,KAAKC,GAAK,EAAIuC,EAAE2L,EAAI,IAC5Coe,EAAM5lB,KAAKoH,EAAI,EAAI/N,KAAKuL,KAAK,EAAI5E,KAAKoH,EAAI/N,KAAK4N,IAAIpL,EAAE2L,KAAO,EAAIxH,KAAKoH,EAAI/N,KAAK4N,IAAIpL,EAAE2L,KACpFqe,GAAK7lB,KAAK/C,OAAS0oB,EAAMC,GAAO5lB,KAAKijB,EAGrCplB,EAAI,GAAKxE,KAAK2N,KAAK3N,KAAKyO,IAAI+d,IAAMxsB,KAAKC,GAAK,GAG5Cge,EAAItX,KAAK/C,OAASpB,EAAEyK,EAAItG,KAAKglB,SAG7Bc,EAAOzsB,KAAK2N,KAAK3N,KAAK4N,IAAIqQ,IAAMje,KAAK4N,IAAIjH,KAAKulB,IAAMlsB,KAAKuN,IAAI/I,GAAKxE,KAAKgO,IAAIrH,KAAKulB,IAAMlsB,KAAKgO,IAAIiQ,KAE/FyO,EAAO1sB,KAAKymB,KAAKzmB,KAAKgO,IAAIrH,KAAKulB,IAAMlsB,KAAK4N,IAAIpJ,GAAKxE,KAAK4N,IAAIjH,KAAKulB,IAAMlsB,KAAKgO,IAAIxJ,GAAKxE,KAAKgO,IAAIiQ,IAIlG,OAFAzb,EAAE2L,EAAIxH,KAAKslB,EAAI,EAAIjsB,KAAKuL,KAAK,EAAIvL,KAAK4N,IAAI8e,KAAU,EAAI1sB,KAAK4N,IAAI8e,KAAU/lB,KAAKvC,GAChF5B,EAAEyK,EAAItG,KAAKslB,EAAIQ,EAAO9lB,KAAKzC,GACpB1B,EAGF,SAASgM,GAAQhM,GACtB,IAAI8V,EAAI9V,EAAEyK,EAAItG,KAAKzC,GACfmU,EAAI7V,EAAE2L,EAAIxH,KAAKvC,GAEfqoB,EAAOnU,EAAI3R,KAAKslB,EAChBS,EAAO,GAAK1sB,KAAK2N,KAAK3N,KAAKyO,IAAI4J,EAAI1R,KAAKslB,IAAMjsB,KAAKC,GAAK,GAExDuE,EAAIxE,KAAKymB,KAAKzmB,KAAKgO,IAAIrH,KAAKulB,IAAMlsB,KAAK4N,IAAI8e,GAAQ1sB,KAAK4N,IAAIjH,KAAKulB,IAAMlsB,KAAKgO,IAAI0e,GAAQ1sB,KAAKgO,IAAIye,IACjGxO,EAAIje,KAAK2N,KAAK3N,KAAK4N,IAAI6e,IAASzsB,KAAKgO,IAAIrH,KAAKulB,IAAMlsB,KAAKgO,IAAIye,GAAQzsB,KAAK4N,IAAIjH,KAAKulB,IAAMlsB,KAAKuN,IAAImf,KAElGC,EAAShmB,KAAKglB,QAAU1N,EAAItX,KAAK/C,MAEjC4oB,EAAI,EACJI,EAAMpoB,EACNqoB,GAAW,IACXC,EAAY,EAChB,MAAO9sB,KAAKkN,IAAI0f,EAAMC,GAAW,KAAW,CAC1C,KAAMC,EAAY,GAEhB,OAGFN,EAAI,EAAI7lB,KAAK/C,OAAS5D,KAAKuL,IAAIvL,KAAKuN,IAAIvN,KAAKC,GAAK,EAAIuE,EAAI,IAAMmC,KAAKijB,GAAKjjB,KAAKoH,EAAI/N,KAAKuL,IAAIvL,KAAKuN,IAAIvN,KAAKC,GAAK,EAAID,KAAKymB,KAAK9f,KAAKoH,EAAI/N,KAAK4N,IAAIgf,IAAQ,IACvJC,EAAUD,EACVA,EAAM,EAAI5sB,KAAK2N,KAAK3N,KAAKyO,IAAI+d,IAAMxsB,KAAKC,GAAK,EAK/C,OAFAuC,EAAEyK,EAAI0f,EACNnqB,EAAE2L,EAAIye,EACCpqB,EAGF,IAAImM,GAAQ,CAAC,UACpB,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,IC/ELoe,GAAM,KAEV,SAASC,GAAQ3V,GACf,IAAI4V,EAAmB,CAAC,0BAA0B,kDAC9CC,EAAyC,kBAAjB7V,EAAE5N,WAA0BpI,OAAOD,KAAKiW,EAAE5N,YAAY,GAAK4N,EAAE5N,WAEzF,MAAO,YAAa4N,GAAK,WAAYA,IAAmD,IAA9C4V,EAAiBvnB,QAAQwnB,GAM9D,SAASrf,KACd,IAAId,EAAKM,EAAK8f,EAAQtM,EAAGuM,EAAGC,EAAGC,EAAGC,EAAQ/qB,EAAGgrB,EAC3CC,EAD8C5pB,EAAQ,EAC9C6pB,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAU,EAItEpnB,KAAKqnB,OAAShB,GAAQrmB,MACtBA,KAAKsnB,OAAS,WAAYtnB,KAE1B,IAAIunB,GAAM,EACN,UAAWvnB,OACbunB,GAAM,GAGR,IAAIC,GAAM,EAaV,GAZI,yBAA0BxnB,OAC5BwnB,GAAM,GAGJD,IACFH,EAAUpnB,KAAK/C,OAGbuqB,IACFtqB,EAAS8C,KAAK7C,qBAAuBxD,GAGnC4tB,GAAOC,EACTT,EAAO/mB,KAAK3C,WAOZ,GALA2pB,EAAOhnB,KAAKlD,MACZoqB,EAAOlnB,KAAKzD,KACZ0qB,EAAOjnB,KAAKhD,MACZmqB,EAAOnnB,KAAKvD,KAERpD,KAAKkN,IAAI2gB,EAAOC,IAASf,KAAQhgB,EAAM/M,KAAKkN,IAAI2gB,KAAUd,IAC1D/sB,KAAKkN,IAAIH,EAAMhN,IAAYgtB,IAAO/sB,KAAKkN,IAAIlN,KAAKkN,IAAIvG,KAAK3D,MAAQjD,IAAYgtB,IAC7E/sB,KAAKkN,IAAIlN,KAAKkN,IAAI4gB,GAAQ/tB,IAAYgtB,GACxC,MAAM,IAAIrmB,MAId,IAAI0nB,EAAS,EAAMznB,KAAKmH,GACxBT,EAAMrN,KAAKgN,KAAKohB,GAEZpuB,KAAKkN,IAAIvG,KAAK3D,MAAQ3C,GACxBktB,EAASvtB,KAAK4N,IAAIjH,KAAK3D,MACvBmqB,EAASntB,KAAKgO,IAAIrH,KAAK3D,MACvB+J,EAAM,EAAIpG,KAAKmH,GAAKyf,EAASA,EAC7B5mB,KAAKogB,EAAIoG,EAASA,EAClBxmB,KAAKogB,EAAI/mB,KAAKgN,KAAK,EAAIrG,KAAKmH,GAAKnH,KAAKogB,EAAIpgB,KAAKogB,EAAIqH,GACnDznB,KAAKqX,EAAIrX,KAAKogB,EAAIpgB,KAAKrC,GAAK+I,EAAMN,EAClC8T,EAAIla,KAAKogB,EAAI1Z,GAAO8f,EAASntB,KAAKgN,KAAKD,IACvCqgB,EAAIvM,EAAIA,EAAG,EAEPuM,GAAK,EACPA,EAAI,GAEJA,EAAIptB,KAAKgN,KAAKogB,GACVzmB,KAAK3D,KAAO,IACdoqB,GAAKA,IAITzmB,KAAK0nB,EAAIjB,GAAKvM,EACdla,KAAK0nB,GAAKruB,KAAKsN,IAAIiB,GAAM5H,KAAKoH,EAAGpH,KAAK3D,KAAMuqB,GAAS5mB,KAAKogB,KAE1DpgB,KAAKogB,EAAI,EAAI1Z,EACb1G,KAAKqX,EAAIrX,KAAKrC,GACdqC,KAAK0nB,EAAIxN,EAAIuM,EAAI,GAGfc,GAAOC,GACLD,GACFT,EAASztB,KAAKymB,KAAKzmB,KAAK4N,IAAImgB,GAAWlN,GAClCsN,IACHtqB,EAAQkqB,KAGVN,EAAS5pB,EACTkqB,EAAU/tB,KAAKymB,KAAK5F,EAAI7gB,KAAK4N,IAAI6f,KAEnC9mB,KAAK2nB,KAAOZ,EAAO1tB,KAAKymB,KAAK,IAAO2G,EAAI,EAAIA,GAAKptB,KAAKuN,IAAIkgB,IAAW9mB,KAAKogB,IAE1EsG,EAAIrtB,KAAKsN,IAAIiB,GAAM5H,KAAKoH,EAAG8f,EAAM7tB,KAAK4N,IAAIigB,IAAQlnB,KAAKogB,GACvDuG,EAAIttB,KAAKsN,IAAIiB,GAAM5H,KAAKoH,EAAG+f,EAAM9tB,KAAK4N,IAAIkgB,IAAQnnB,KAAKogB,GACvDqG,EAAIzmB,KAAK0nB,EAAIhB,EACb7qB,GAAK8qB,EAAID,IAAMC,EAAID,GACnBG,EAAI7mB,KAAK0nB,EAAI1nB,KAAK0nB,EAClBb,GAAKA,EAAIF,EAAID,IAAMG,EAAIF,EAAID,GAC3BtgB,EAAM4gB,EAAOC,EAET7gB,GAAO/M,KAAKuuB,GACdX,GAAOntB,EACEsM,EAAM/M,KAAKuuB,KACpBX,GAAQntB,GAGVkG,KAAK2nB,KAAOhgB,GAAW,IAAOqf,EAAOC,GAAQ5tB,KAAK2N,KAAK6f,EAAIxtB,KAAKuN,IAAI,GAAM5G,KAAKogB,GAAK4G,EAAOC,IAASprB,GAAKmE,KAAKogB,GAC9G0G,EAASztB,KAAK2N,KAAK,EAAI3N,KAAK4N,IAAIjH,KAAKogB,EAAIzY,GAAWqf,EAAOhnB,KAAK2nB,QAAUlB,EAAI,EAAIA,IAClFvpB,EAAQkqB,EAAU/tB,KAAKymB,KAAK5F,EAAI7gB,KAAK4N,IAAI6f,KAG3C9mB,KAAK6nB,OAASxuB,KAAK4N,IAAI6f,GACvB9mB,KAAK8nB,OAASzuB,KAAKgO,IAAIyf,GACvB9mB,KAAK+nB,OAAS1uB,KAAK4N,IAAI/J,GACvB8C,KAAKgoB,OAAS3uB,KAAKgO,IAAInK,GAEvB8C,KAAKioB,GAAK,EAAIjoB,KAAKogB,EACnBpgB,KAAKkoB,IAAMloB,KAAKqX,EAAIrX,KAAKioB,GACzBjoB,KAAKmoB,IAAM,EAAInoB,KAAKkoB,IACfloB,KAAKqX,EAAIrX,KAAKogB,EAEfpgB,KAAKqnB,OACPrnB,KAAKooB,IAAM,GAEXpoB,KAAKooB,IAAM/uB,KAAKkN,IAAIvG,KAAKkoB,IAAM7uB,KAAK2N,KAAK3N,KAAKgN,KAAK6T,EAAIA,EAAI,GAAK7gB,KAAKgO,IAAI+f,KAErEpnB,KAAK3D,KAAO,IACd2D,KAAKooB,KAAQpoB,KAAKooB,MAItB3B,EAAI,GAAMK,EACV9mB,KAAKqoB,SAAWroB,KAAKkoB,IAAM7uB,KAAKuL,IAAIvL,KAAKuN,IAAI/M,EAAS4sB,IACtDzmB,KAAKsoB,SAAWtoB,KAAKkoB,IAAM7uB,KAAKuL,IAAIvL,KAAKuN,IAAI/M,EAAS4sB,IAMjD,SAASlf,GAAQ1L,GACtB,IACIgqB,EAAGjN,EAAG2P,EAAG/Q,EAAGgR,EAAG5I,EAAM6I,EAAGjtB,EADxB+a,EAAS,GAIb,GAFA1a,EAAEyK,EAAIzK,EAAEyK,EAAItG,KAAK2nB,KAEbtuB,KAAKkN,IAAIlN,KAAKkN,IAAI1K,EAAE2L,GAAKpO,GAAWM,EAAO,CAS7C,GARA8uB,EAAIxoB,KAAK0nB,EAAIruB,KAAKsN,IAAIiB,GAAM5H,KAAKoH,EAAGvL,EAAE2L,EAAGnO,KAAK4N,IAAIpL,EAAE2L,IAAKxH,KAAKogB,GAE9DR,EAAO,EAAI4I,EACX3C,EAAI,IAAO2C,EAAI5I,GACfhH,EAAI,IAAO4P,EAAI5I,GACfpI,EAAIne,KAAK4N,IAAIjH,KAAKogB,EAAIvkB,EAAEyK,GACxBiiB,GAAK1C,EAAI7lB,KAAK6nB,OAASrQ,EAAIxX,KAAK8nB,QAAUlP,EAEtCvf,KAAKkN,IAAIlN,KAAKkN,IAAIgiB,GAAK,GAAO7uB,EAChC,MAAM,IAAIqG,MAGZvE,EAAI,GAAMwE,KAAKkoB,IAAM7uB,KAAKuL,KAAK,EAAI2jB,IAAI,EAAIA,IAC3C3I,EAAOvmB,KAAKgO,IAAIrH,KAAKogB,EAAIvkB,EAAEyK,GAGzBmiB,EADEpvB,KAAKkN,IAAIqZ,GAAQwG,GACfpmB,KAAKqX,EAAIxb,EAAEyK,EAEXtG,KAAKkoB,IAAM7uB,KAAKwY,MAAOgU,EAAI7lB,KAAK8nB,OAAStQ,EAAIxX,KAAK6nB,OAASjI,QAGjEpkB,EAAIK,EAAE2L,EAAI,EAAIxH,KAAKqoB,SAAWroB,KAAKsoB,SACnCG,EAAIzoB,KAAKkoB,IAAMrsB,EAAE2L,EAenB,OAZIxH,KAAKsnB,QACP/Q,EAAOjQ,EAAImiB,EACXlS,EAAO/O,EAAIhM,IAEXitB,GAAKzoB,KAAKooB,IACV7R,EAAOjQ,EAAI9K,EAAIwE,KAAKgoB,OAASS,EAAIzoB,KAAK+nB,OACtCxR,EAAO/O,EAAIihB,EAAIzoB,KAAKgoB,OAASxsB,EAAIwE,KAAK+nB,QAGxCxR,EAAOjQ,EAAKtG,KAAKrE,EAAI4a,EAAOjQ,EAAItG,KAAKzC,GACrCgZ,EAAO/O,EAAKxH,KAAKrE,EAAI4a,EAAO/O,EAAIxH,KAAKvC,GAE9B8Y,EAGF,SAAS1O,GAAQhM,GACtB,IAAI4sB,EAAGjtB,EAAGktB,EAAIC,EAAIC,EAAIC,EAAIC,EACtBvS,EAAS,GAmBb,GAjBA1a,EAAEyK,GAAKzK,EAAEyK,EAAItG,KAAKzC,KAAO,EAAMyC,KAAKrE,GACpCE,EAAE2L,GAAK3L,EAAE2L,EAAIxH,KAAKvC,KAAO,EAAMuC,KAAKrE,GAEhCqE,KAAKsnB,QACP9rB,EAAIK,EAAE2L,EACNihB,EAAI5sB,EAAEyK,IAEN9K,EAAIK,EAAEyK,EAAItG,KAAKgoB,OAASnsB,EAAE2L,EAAIxH,KAAK+nB,OACnCU,EAAI5sB,EAAE2L,EAAIxH,KAAKgoB,OAASnsB,EAAEyK,EAAItG,KAAK+nB,OAAS/nB,KAAKooB,KAGnDM,EAAKrvB,KAAKyO,KAAK9H,KAAKmoB,IAAM3sB,GAC1BmtB,EAAK,IAAOD,EAAK,EAAIA,GACrBE,EAAK,IAAOF,EAAK,EAAIA,GACrBG,EAAKxvB,KAAK4N,IAAIjH,KAAKmoB,IAAMM,GACzBK,GAAMD,EAAK7oB,KAAK8nB,OAASa,EAAK3oB,KAAK6nB,QAAUe,EAEzCvvB,KAAKkN,IAAIlN,KAAKkN,IAAIuiB,GAAM,GAAKpvB,EAC/B6c,EAAOjQ,EAAI,EACXiQ,EAAO/O,EAAIshB,EAAK,GAAK1vB,EAAUA,MAC1B,CAIL,GAHAmd,EAAO/O,EAAIxH,KAAK0nB,EAAIruB,KAAKgN,MAAM,EAAIyiB,IAAO,EAAIA,IAC9CvS,EAAO/O,EAAIO,GAAM/H,KAAKoH,EAAG/N,KAAKsN,IAAI4P,EAAO/O,EAAG,EAAIxH,KAAKogB,IAEjD7J,EAAO/O,IAAMgJ,IACf,MAAM,IAAIzQ,MAGZwW,EAAOjQ,GAAKtG,KAAKioB,GAAK5uB,KAAKwY,MAAO8W,EAAK3oB,KAAK8nB,OAASe,EAAK7oB,KAAK6nB,OAASxuB,KAAKgO,IAAIrH,KAAKmoB,IAAMM,IAK9F,OAFAlS,EAAOjQ,GAAKtG,KAAK2nB,KAEVpR,EAGF,IAAIvO,GAAQ,CAAC,0BAA2B,0BAA2B,iDAAkD,mDAAoD,yCAA0C,mBAAoB,SAC9O,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,ICzOF,SAASd,KAuBd,GATKlH,KAAKvD,OACRuD,KAAKvD,KAAOuD,KAAKzD,MAEdyD,KAAKrC,KACRqC,KAAKrC,GAAK,GAEZqC,KAAKzC,GAAKyC,KAAKzC,IAAM,EACrByC,KAAKvC,GAAKuC,KAAKvC,IAAM,IAEjBpE,KAAKkN,IAAIvG,KAAKzD,KAAOyD,KAAKvD,MAAQ/C,GAAtC,CAIA,IAAIkmB,EAAO5f,KAAKnC,EAAImC,KAAKrE,EACzBqE,KAAKoH,EAAI/N,KAAKgN,KAAK,EAAIuZ,EAAOA,GAE9B,IAAImJ,EAAO1vB,KAAK4N,IAAIjH,KAAKzD,MACrBysB,EAAO3vB,KAAKgO,IAAIrH,KAAKzD,MACrB4nB,EAAM7c,GAAMtH,KAAKoH,EAAG2hB,EAAMC,GAC1BC,EAAMrhB,GAAM5H,KAAKoH,EAAGpH,KAAKzD,KAAMwsB,GAE/BG,EAAO7vB,KAAK4N,IAAIjH,KAAKvD,MACrB0sB,EAAO9vB,KAAKgO,IAAIrH,KAAKvD,MACrB2sB,EAAM9hB,GAAMtH,KAAKoH,EAAG8hB,EAAMC,GAC1BE,EAAMzhB,GAAM5H,KAAKoH,EAAGpH,KAAKvD,KAAMysB,GAE/BI,EAAM1hB,GAAM5H,KAAKoH,EAAGpH,KAAK3D,KAAMhD,KAAK4N,IAAIjH,KAAK3D,OAE7ChD,KAAKkN,IAAIvG,KAAKzD,KAAOyD,KAAKvD,MAAQ/C,EACpCsG,KAAKupB,GAAKlwB,KAAKuL,IAAIuf,EAAMiF,GAAO/vB,KAAKuL,IAAIqkB,EAAMI,GAG/CrpB,KAAKupB,GAAKR,EAERjV,MAAM9T,KAAKupB,MACbvpB,KAAKupB,GAAKR,GAEZ/oB,KAAKwpB,GAAKrF,GAAOnkB,KAAKupB,GAAKlwB,KAAKsN,IAAIsiB,EAAKjpB,KAAKupB,KAC9CvpB,KAAKykB,GAAKzkB,KAAKrE,EAAIqE,KAAKwpB,GAAKnwB,KAAKsN,IAAI2iB,EAAKtpB,KAAKupB,IAC3CvpB,KAAKwjB,QACRxjB,KAAKwjB,MAAQ,4BAMV,SAASjc,GAAQ1L,GAEtB,IAAI4L,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAGRnO,KAAKkN,IAAI,EAAIlN,KAAKkN,IAAImB,GAAOrO,KAAKC,KAAOI,IAC3CgO,EAAMlB,GAAKkB,IAAQtO,EAAU,EAAIM,IAGnC,IACImN,EAAI4iB,EADJrjB,EAAM/M,KAAKkN,IAAIlN,KAAKkN,IAAImB,GAAOtO,GAEnC,GAAIgN,EAAM1M,EACRmN,EAAKe,GAAM5H,KAAKoH,EAAGM,EAAKrO,KAAK4N,IAAIS,IACjC+hB,EAAMzpB,KAAKrE,EAAIqE,KAAKwpB,GAAKnwB,KAAKsN,IAAIE,EAAI7G,KAAKupB,QAExC,CAEH,GADAnjB,EAAMsB,EAAM1H,KAAKupB,GACbnjB,GAAO,EACT,OAAO,KAETqjB,EAAM,EAER,IAAIC,EAAQ1pB,KAAKupB,GAAK5hB,GAAWF,EAAMzH,KAAKpD,OAI5C,OAHAf,EAAEyK,EAAItG,KAAKrC,IAAM8rB,EAAMpwB,KAAK4N,IAAIyiB,IAAU1pB,KAAKzC,GAC/C1B,EAAE2L,EAAIxH,KAAKrC,IAAMqC,KAAKykB,GAAKgF,EAAMpwB,KAAKgO,IAAIqiB,IAAU1pB,KAAKvC,GAElD5B,EAKF,SAASgM,GAAQhM,GAEtB,IAAI4tB,EAAKrjB,EAAKS,EACVa,EAAKD,EACLnB,GAAKzK,EAAEyK,EAAItG,KAAKzC,IAAMyC,KAAKrC,GAC3B6J,EAAKxH,KAAKykB,IAAM5oB,EAAE2L,EAAIxH,KAAKvC,IAAMuC,KAAKrC,GACtCqC,KAAKupB,GAAK,GACZE,EAAMpwB,KAAKgN,KAAKC,EAAIA,EAAIkB,EAAIA,GAC5BpB,EAAM,IAGNqjB,GAAOpwB,KAAKgN,KAAKC,EAAIA,EAAIkB,EAAIA,GAC7BpB,GAAO,GAET,IAAIsjB,EAAQ,EAIZ,GAHY,IAARD,IACFC,EAAQrwB,KAAKwY,MAAOzL,EAAME,EAAKF,EAAMoB,IAE1B,IAARiiB,GAAezpB,KAAKupB,GAAK,GAI5B,GAHAnjB,EAAM,EAAIpG,KAAKupB,GACf1iB,EAAKxN,KAAKsN,IAAK8iB,GAAOzpB,KAAKrE,EAAIqE,KAAKwpB,IAAMpjB,GAC1CsB,EAAMK,GAAM/H,KAAKoH,EAAGP,IACP,OAATa,EACF,OAAO,UAITA,GAAOtO,EAMT,OAJAqO,EAAME,GAAW+hB,EAAQ1pB,KAAKupB,GAAKvpB,KAAKpD,OAExCf,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,EAGF,IAAImM,GAAQ,CACjB,gDACA,0BACA,8BACA,8BACA,MACA,gCACA,iCAGF,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,IClJF,SAASd,KACdlH,KAAKrE,EAAI,YACTqE,KAAKmH,GAAK,iBACVnH,KAAKoH,EAAI/N,KAAKgN,KAAKrG,KAAKmH,IACnBnH,KAAK3D,OACR2D,KAAK3D,KAAO,kBAET2D,KAAKpD,QACRoD,KAAKpD,MAAQ,mBAGVoD,KAAKrC,KACRqC,KAAKrC,GAAK,OAEZqC,KAAK2pB,IAAM,iBACX3pB,KAAK4pB,IAAM,EAAI5pB,KAAK2pB,IACpB3pB,KAAK6pB,IAAM7pB,KAAK3D,KAChB2D,KAAKqlB,GAAKrlB,KAAKmH,GACfnH,KAAKoH,EAAI/N,KAAKgN,KAAKrG,KAAKqlB,IACxBrlB,KAAK8pB,KAAOzwB,KAAKgN,KAAK,EAAKrG,KAAKqlB,GAAKhsB,KAAKsN,IAAItN,KAAKgO,IAAIrH,KAAK6pB,KAAM,IAAO,EAAI7pB,KAAKqlB,KAClFrlB,KAAK+pB,GAAK,iBACV/pB,KAAKgqB,GAAK3wB,KAAKymB,KAAKzmB,KAAK4N,IAAIjH,KAAK6pB,KAAO7pB,KAAK8pB,MAC9C9pB,KAAK2f,EAAItmB,KAAKsN,KAAK,EAAI3G,KAAKoH,EAAI/N,KAAK4N,IAAIjH,KAAK6pB,OAAS,EAAI7pB,KAAKoH,EAAI/N,KAAK4N,IAAIjH,KAAK6pB,MAAO7pB,KAAK8pB,KAAO9pB,KAAKoH,EAAI,GAC9GpH,KAAKpC,EAAIvE,KAAKuN,IAAI5G,KAAKgqB,GAAK,EAAIhqB,KAAK2pB,KAAOtwB,KAAKsN,IAAItN,KAAKuN,IAAI5G,KAAK6pB,IAAM,EAAI7pB,KAAK2pB,KAAM3pB,KAAK8pB,MAAQ9pB,KAAK2f,EAC1G3f,KAAKwlB,GAAKxlB,KAAKrC,GACfqC,KAAKiqB,GAAKjqB,KAAKrE,EAAItC,KAAKgN,KAAK,EAAIrG,KAAKqlB,KAAO,EAAIrlB,KAAKqlB,GAAKhsB,KAAKsN,IAAItN,KAAK4N,IAAIjH,KAAK6pB,KAAM,IACxF7pB,KAAKkqB,GAAK,iBACVlqB,KAAKyI,EAAIpP,KAAK4N,IAAIjH,KAAKkqB,IACvBlqB,KAAKmqB,IAAMnqB,KAAKwlB,GAAKxlB,KAAKiqB,GAAK5wB,KAAKuN,IAAI5G,KAAKkqB,IAC7ClqB,KAAKoqB,GAAKpqB,KAAK4pB,IAAM5pB,KAAK+pB,GAMrB,SAASxiB,GAAQ1L,GACtB,IAAIwuB,EAAK5B,EAAG6B,EAAQ9L,EAAGgB,EAAG+K,EAAKC,EAC3B/iB,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EACRoX,EAAYjX,GAAWF,EAAMzH,KAAKpD,OAgBtC,OAdAytB,EAAMhxB,KAAKsN,KAAM,EAAI3G,KAAKoH,EAAI/N,KAAK4N,IAAIS,KAAS,EAAI1H,KAAKoH,EAAI/N,KAAK4N,IAAIS,IAAS1H,KAAK8pB,KAAO9pB,KAAKoH,EAAI,GACpGqhB,EAAI,GAAKpvB,KAAK2N,KAAKhH,KAAKpC,EAAIvE,KAAKsN,IAAItN,KAAKuN,IAAIc,EAAM,EAAI1H,KAAK2pB,KAAM3pB,KAAK8pB,MAAQO,GAAOrqB,KAAK2pB,KAC5FW,GAAU1L,EAAY5e,KAAK8pB,KAC3BtL,EAAInlB,KAAKymB,KAAKzmB,KAAKgO,IAAIrH,KAAKoqB,IAAM/wB,KAAK4N,IAAIwhB,GAAKpvB,KAAK4N,IAAIjH,KAAKoqB,IAAM/wB,KAAKgO,IAAIohB,GAAKpvB,KAAKgO,IAAIijB,IAC3F9K,EAAInmB,KAAKymB,KAAKzmB,KAAKgO,IAAIohB,GAAKpvB,KAAK4N,IAAIqjB,GAAUjxB,KAAKgO,IAAImX,IACxD+L,EAAMvqB,KAAKyI,EAAI+W,EACfgL,EAAKxqB,KAAKmqB,IAAM9wB,KAAKsN,IAAItN,KAAKuN,IAAI5G,KAAKkqB,GAAK,EAAIlqB,KAAK2pB,KAAM3pB,KAAKyI,GAAKpP,KAAKsN,IAAItN,KAAKuN,IAAI4X,EAAI,EAAIxe,KAAK2pB,KAAM3pB,KAAKyI,GAC/G5M,EAAE2L,EAAIgjB,EAAKnxB,KAAKgO,IAAIkjB,GAAO,EAC3B1uB,EAAEyK,EAAIkkB,EAAKnxB,KAAK4N,IAAIsjB,GAAO,EAEtBvqB,KAAKyqB,QACR5uB,EAAE2L,IAAM,EACR3L,EAAEyK,IAAM,GAEFzK,EAIH,SAASgM,GAAQhM,GACtB,IAAI4sB,EAAG6B,EAAQ9L,EAAGgB,EAAG+K,EAAKC,EAAIE,EAC1BC,EAIAnI,EAAM3mB,EAAEyK,EACZzK,EAAEyK,EAAIzK,EAAE2L,EACR3L,EAAE2L,EAAIgb,EACDxiB,KAAKyqB,QACR5uB,EAAE2L,IAAM,EACR3L,EAAEyK,IAAM,GAEVkkB,EAAKnxB,KAAKgN,KAAKxK,EAAEyK,EAAIzK,EAAEyK,EAAIzK,EAAE2L,EAAI3L,EAAE2L,GACnC+iB,EAAMlxB,KAAKwY,MAAMhW,EAAE2L,EAAG3L,EAAEyK,GACxBkZ,EAAI+K,EAAMlxB,KAAK4N,IAAIjH,KAAKkqB,IACxB1L,EAAI,GAAKnlB,KAAK2N,KAAK3N,KAAKsN,IAAI3G,KAAKmqB,IAAMK,EAAI,EAAIxqB,KAAKyI,GAAKpP,KAAKuN,IAAI5G,KAAKkqB,GAAK,EAAIlqB,KAAK2pB,MAAQ3pB,KAAK2pB,KAClGlB,EAAIpvB,KAAKymB,KAAKzmB,KAAKgO,IAAIrH,KAAKoqB,IAAM/wB,KAAK4N,IAAIuX,GAAKnlB,KAAK4N,IAAIjH,KAAKoqB,IAAM/wB,KAAKgO,IAAImX,GAAKnlB,KAAKgO,IAAImY,IAC3F8K,EAASjxB,KAAKymB,KAAKzmB,KAAKgO,IAAImX,GAAKnlB,KAAK4N,IAAIuY,GAAKnmB,KAAKgO,IAAIohB,IACxD5sB,EAAEyK,EAAItG,KAAKpD,MAAQ0tB,EAAStqB,KAAK8pB,KACjCY,EAAMjC,EACNkC,EAAK,EACL,IAAIrZ,EAAO,EACX,GACEzV,EAAE2L,EAAI,GAAKnO,KAAK2N,KAAK3N,KAAKsN,IAAI3G,KAAKpC,GAAK,EAAIoC,KAAK8pB,MAAQzwB,KAAKsN,IAAItN,KAAKuN,IAAI6hB,EAAI,EAAIzoB,KAAK2pB,KAAM,EAAI3pB,KAAK8pB,MAAQzwB,KAAKsN,KAAK,EAAI3G,KAAKoH,EAAI/N,KAAK4N,IAAIyjB,KAAS,EAAI1qB,KAAKoH,EAAI/N,KAAK4N,IAAIyjB,IAAO1qB,KAAKoH,EAAI,IAAMpH,KAAK2pB,KACrMtwB,KAAKkN,IAAImkB,EAAM7uB,EAAE2L,GAAK,QACxBmjB,EAAK,GAEPD,EAAM7uB,EAAE2L,EACR8J,GAAQ,QACM,IAAPqZ,GAAYrZ,EAAO,IAC5B,OAAIA,GAAQ,GACH,KAGDzV,EAGH,IAAImM,GAAQ,CAAC,SAAU,UAC9B,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,ICxGM,YAAS4iB,EAAIvQ,EAAIgL,EAAIwF,EAAIpkB,GACtC,OAAQmkB,EAAKnkB,EAAM4T,EAAKhhB,KAAK4N,IAAI,EAAIR,GAAO4e,EAAKhsB,KAAK4N,IAAI,EAAIR,GAAOokB,EAAKxxB,KAAK4N,IAAI,EAAIR,GCD1E,YAASH,GACtB,OAAQ,EAAI,IAAOA,GAAK,EAAIA,EAAI,IAAM,EAAI,KAAOA,ICDpC,YAASA,GACtB,MAAQ,KAAQA,GAAK,EAAI,IAAOA,GAAK,EAAI,OAAUA,ICDtC,YAASA,GACtB,MAAQ,UAAaA,EAAIA,GAAK,EAAI,IAAOA,GCD5B,YAASA,GACtB,OAAQA,EAAIA,EAAIA,GAAK,GAAK,MCDb,YAAS3K,EAAGyL,EAAGlB,GAC5B,IAAI0Z,EAAOxY,EAAIlB,EACf,OAAOvK,EAAItC,KAAKgN,KAAK,EAAIuZ,EAAOA,GCCnB,YAAStZ,GACtB,OAAQjN,KAAKkN,IAAID,GAAKlN,EAAWkN,EAAKA,EAAKE,GAAKF,GAAKjN,KAAKC,GCJ7C,YAAS8lB,EAAIwL,EAAIvQ,EAAIgL,EAAIwF,GACtC,IAAIpkB,EACAK,EAEJL,EAAM2Y,EAAKwL,EACX,IAAK,IAAI9vB,EAAI,EAAGA,EAAI,GAAIA,IAGtB,GAFAgM,GAAQsY,GAAMwL,EAAKnkB,EAAM4T,EAAKhhB,KAAK4N,IAAI,EAAIR,GAAO4e,EAAKhsB,KAAK4N,IAAI,EAAIR,GAAOokB,EAAKxxB,KAAK4N,IAAI,EAAIR,MAAUmkB,EAAK,EAAIvQ,EAAKhhB,KAAKgO,IAAI,EAAIZ,GAAO,EAAI4e,EAAKhsB,KAAKgO,IAAI,EAAIZ,GAAO,EAAIokB,EAAKxxB,KAAKgO,IAAI,EAAIZ,IAC5LA,GAAOK,EACHzN,KAAKkN,IAAIO,IAAS,MACpB,OAAOL,EAKX,OAAO4M,ICHF,SAASnM,KACTlH,KAAK0D,SACR1D,KAAK4qB,GAAKE,GAAK9qB,KAAKmH,IACpBnH,KAAKqa,GAAK0Q,GAAK/qB,KAAKmH,IACpBnH,KAAKqlB,GAAK2F,GAAKhrB,KAAKmH,IACpBnH,KAAK6qB,GAAKI,GAAKjrB,KAAKmH,IACpBnH,KAAK2e,IAAM3e,KAAKrE,EAAIuvB,GAAKlrB,KAAK4qB,GAAI5qB,KAAKqa,GAAIra,KAAKqlB,GAAIrlB,KAAK6qB,GAAI7qB,KAAK3D,OAM/D,SAASkL,GAAQ1L,GAItB,IAAIyK,EAAGkB,EACH2jB,EAAMtvB,EAAEyK,EACRG,EAAM5K,EAAE2L,EAGZ,GAFA2jB,EAAMxjB,GAAWwjB,EAAMnrB,KAAKpD,OAExBoD,KAAK0D,OACP4C,EAAItG,KAAKrE,EAAItC,KAAKymB,KAAKzmB,KAAKgO,IAAIZ,GAAOpN,KAAK4N,IAAIkkB,IAChD3jB,EAAIxH,KAAKrE,GAAKtC,KAAKwY,MAAMxY,KAAKuN,IAAIH,GAAMpN,KAAKgO,IAAI8jB,IAAQnrB,KAAK3D,UAE3D,CAEH,IAAI6J,EAAS7M,KAAK4N,IAAIR,GAClBN,EAAS9M,KAAKgO,IAAIZ,GAClB2kB,EAAKC,GAAGrrB,KAAKrE,EAAGqE,KAAKoH,EAAGlB,GACxBolB,EAAKjyB,KAAKuN,IAAIH,GAAOpN,KAAKuN,IAAIH,GAC9BsY,EAAKoM,EAAM9xB,KAAKgO,IAAIZ,GACpB8kB,EAAMxM,EAAKA,EACXyM,EAAKxrB,KAAKmH,GAAKhB,EAASA,GAAU,EAAInG,KAAKmH,IAC3CiY,EAAKpf,KAAKrE,EAAIuvB,GAAKlrB,KAAK4qB,GAAI5qB,KAAKqa,GAAIra,KAAKqlB,GAAIrlB,KAAK6qB,GAAIpkB,GAE3DH,EAAI8kB,EAAKrM,GAAM,EAAIwM,EAAMD,GAAM,EAAI,GAAK,EAAIA,EAAK,EAAIE,GAAMD,EAAM,MACjE/jB,EAAI4X,EAAKpf,KAAK2e,IAAMyM,EAAKllB,EAASC,EAASolB,GAAO,IAAO,EAAID,EAAK,EAAIE,GAAMD,EAAM,IAOpF,OAFA1vB,EAAEyK,EAAIA,EAAItG,KAAKzC,GACf1B,EAAE2L,EAAIA,EAAIxH,KAAKvC,GACR5B,EAKF,SAASgM,GAAQhM,GACtBA,EAAEyK,GAAKtG,KAAKzC,GACZ1B,EAAE2L,GAAKxH,KAAKvC,GACZ,IAEIgJ,EAAK0kB,EAFL7kB,EAAIzK,EAAEyK,EAAItG,KAAKrE,EACf6L,EAAI3L,EAAE2L,EAAIxH,KAAKrE,EAGnB,GAAIqE,KAAK0D,OAAQ,CACf,IAAI+nB,EAAKjkB,EAAIxH,KAAK3D,KAClBoK,EAAMpN,KAAKymB,KAAKzmB,KAAK4N,IAAIwkB,GAAMpyB,KAAKgO,IAAIf,IACxC6kB,EAAM9xB,KAAKwY,MAAMxY,KAAKuN,IAAIN,GAAIjN,KAAKgO,IAAIokB,QAEpC,CAEH,IAAIC,EAAM1rB,KAAK2e,IAAM3e,KAAKrE,EAAI6L,EAC1B0f,EAAOyE,GAAMD,EAAK1rB,KAAK4qB,GAAI5qB,KAAKqa,GAAIra,KAAKqlB,GAAIrlB,KAAK6qB,IACtD,GAAIxxB,KAAKkN,IAAIlN,KAAKkN,IAAI2gB,GAAQ9tB,IAAYM,EAMxC,OALAmC,EAAEyK,EAAItG,KAAKpD,MACXf,EAAE2L,EAAIpO,EACFoO,EAAI,IACN3L,EAAE2L,IAAM,GAEH3L,EAET,IAAI+vB,EAAMP,GAAGrrB,KAAKrE,EAAGqE,KAAKoH,EAAG/N,KAAK4N,IAAIigB,IAElC2E,EAAMD,EAAMA,EAAMA,EAAM5rB,KAAKrE,EAAIqE,KAAKrE,GAAK,EAAIqE,KAAKmH,IACpD2kB,EAAMzyB,KAAKsN,IAAItN,KAAKuN,IAAIsgB,GAAO,GAC/B6E,EAAKzlB,EAAItG,KAAKrE,EAAIiwB,EAClBI,EAAMD,EAAKA,EACftlB,EAAMygB,EAAO0E,EAAMvyB,KAAKuN,IAAIsgB,GAAQ2E,EAAME,EAAKA,GAAM,IAAO,EAAI,EAAID,GAAOC,EAAKA,EAAK,IACrFZ,EAAMY,GAAM,EAAIC,GAAOF,EAAM,GAAK,EAAI,EAAIA,GAAOA,EAAME,EAAM,KAAO3yB,KAAKgO,IAAI6f,GAM/E,OAFArrB,EAAEyK,EAAIqB,GAAWwjB,EAAMnrB,KAAKpD,OAC5Bf,EAAE2L,EAAIykB,GAAWxlB,GACV5K,EAIF,IAAImM,GAAQ,CAAC,UAAW,kBAAmB,QAClD,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,IC1GM,YAAS/B,EAAQC,GAC9B,IAAIE,EACJ,OAAIH,EAAS,MACXG,EAAMH,EAASC,GACN,EAAID,EAASA,IAAWC,GAAU,EAAIE,EAAMA,GAAQ,GAAMH,EAAU5M,KAAKuL,KAAK,EAAIwB,IAAQ,EAAIA,MAG/F,EAAIF,ECKT,IAAIgmB,GAAS,EAETC,GAAS,EACTC,GAAQ,EACRC,GAAQ,EAIZ,SAASnlB,KACd,IAWMhB,EAXFiO,EAAI9a,KAAKkN,IAAIvG,KAAK3D,MAUtB,GATIhD,KAAKkN,IAAI4N,EAAI/a,GAAWM,EAC1BsG,KAAKssB,KAAOtsB,KAAK3D,KAAO,EAAI2D,KAAKksB,OAASlsB,KAAKmsB,OAExC9yB,KAAKkN,IAAI4N,GAAKza,EACrBsG,KAAKssB,KAAOtsB,KAAKosB,MAGjBpsB,KAAKssB,KAAOtsB,KAAKqsB,MAEfrsB,KAAKmH,GAAK,EAMZ,OAHAnH,KAAKusB,GAAKC,GAAMxsB,KAAKoH,EAAG,GACxBpH,KAAKysB,IAAM,IAAO,EAAIzsB,KAAKmH,IAC3BnH,KAAK0sB,IAAMC,GAAQ3sB,KAAKmH,IAChBnH,KAAKssB,MACb,KAAKtsB,KAAKmsB,OACRnsB,KAAKyrB,GAAK,EACV,MACF,KAAKzrB,KAAKksB,OACRlsB,KAAKyrB,GAAK,EACV,MACF,KAAKzrB,KAAKosB,MACRpsB,KAAK4sB,GAAKvzB,KAAKgN,KAAK,GAAMrG,KAAKusB,IAC/BvsB,KAAKyrB,GAAK,EAAIzrB,KAAK4sB,GACnB5sB,KAAK6sB,IAAM,EACX7sB,KAAK8sB,IAAM,GAAM9sB,KAAKusB,GACtB,MACF,KAAKvsB,KAAKqsB,MACRrsB,KAAK4sB,GAAKvzB,KAAKgN,KAAK,GAAMrG,KAAKusB,IAC/BrmB,EAAS7M,KAAK4N,IAAIjH,KAAK3D,MACvB2D,KAAK+sB,MAAQP,GAAMxsB,KAAKoH,EAAGlB,GAAUlG,KAAKusB,GAC1CvsB,KAAKgtB,MAAQ3zB,KAAKgN,KAAK,EAAIrG,KAAK+sB,MAAQ/sB,KAAK+sB,OAC7C/sB,KAAKyrB,GAAKpyB,KAAKgO,IAAIrH,KAAK3D,OAAShD,KAAKgN,KAAK,EAAIrG,KAAKmH,GAAKjB,EAASA,GAAUlG,KAAK4sB,GAAK5sB,KAAKgtB,OAC3FhtB,KAAK8sB,KAAO9sB,KAAK6sB,IAAM7sB,KAAK4sB,IAAM5sB,KAAKyrB,GACvCzrB,KAAK6sB,KAAO7sB,KAAKyrB,GACjB,WAIEzrB,KAAKssB,OAAStsB,KAAKqsB,QACrBrsB,KAAK4mB,OAASvtB,KAAK4N,IAAIjH,KAAK3D,MAC5B2D,KAAKwmB,OAASntB,KAAKgO,IAAIrH,KAAK3D,OAO3B,SAASkL,GAAQ1L,GAItB,IAAIyK,EAAGkB,EAAGylB,EAAQC,EAAQhnB,EAAQinB,EAAGC,EAAMC,EAAMxvB,EAAGsI,EAChDglB,EAAMtvB,EAAEyK,EACRG,EAAM5K,EAAE2L,EAGZ,GADA2jB,EAAMxjB,GAAWwjB,EAAMnrB,KAAKpD,OACxBoD,KAAK0D,QAIP,GAHAwC,EAAS7M,KAAK4N,IAAIR,GAClBN,EAAS9M,KAAKgO,IAAIZ,GAClBwmB,EAAS5zB,KAAKgO,IAAI8jB,GACdnrB,KAAKssB,OAAStsB,KAAKqsB,OAASrsB,KAAKssB,OAAStsB,KAAKosB,MAAO,CAExD,GADA5kB,EAAKxH,KAAKssB,OAAStsB,KAAKosB,MAAS,EAAIjmB,EAAS8mB,EAAS,EAAIjtB,KAAK4mB,OAAS1gB,EAASlG,KAAKwmB,OAASrgB,EAAS8mB,EACrGzlB,GAAK9N,EACP,OAAO,KAET8N,EAAInO,KAAKgN,KAAK,EAAImB,GAClBlB,EAAIkB,EAAIrB,EAAS9M,KAAK4N,IAAIkkB,GAC1B3jB,GAAMxH,KAAKssB,OAAStsB,KAAKosB,MAASlmB,EAASlG,KAAKwmB,OAAStgB,EAASlG,KAAK4mB,OAASzgB,EAAS8mB,OAEtF,GAAIjtB,KAAKssB,OAAStsB,KAAKmsB,QAAUnsB,KAAKssB,OAAStsB,KAAKksB,OAAQ,CAI/D,GAHIlsB,KAAKssB,OAAStsB,KAAKmsB,SACrBc,GAAUA,GAER5zB,KAAKkN,IAAIE,EAAMzG,KAAK3D,MAAQ3C,EAC9B,OAAO,KAET8N,EAAI3N,EAAe,GAAN4M,EACbe,EAAI,GAAMxH,KAAKssB,OAAStsB,KAAKksB,OAAU7yB,KAAKgO,IAAIG,GAAKnO,KAAK4N,IAAIO,IAC9DlB,EAAIkB,EAAInO,KAAK4N,IAAIkkB,GACjB3jB,GAAKylB,OAGJ,CAYH,OAXAG,EAAO,EACPC,EAAO,EACPxvB,EAAI,EACJovB,EAAS5zB,KAAKgO,IAAI8jB,GAClB+B,EAAS7zB,KAAK4N,IAAIkkB,GAClBjlB,EAAS7M,KAAK4N,IAAIR,GAClB0mB,EAAIX,GAAMxsB,KAAKoH,EAAGlB,GACdlG,KAAKssB,OAAStsB,KAAKqsB,OAASrsB,KAAKssB,OAAStsB,KAAKosB,QACjDgB,EAAOD,EAAIntB,KAAKusB,GAChBc,EAAOh0B,KAAKgN,KAAK,EAAI+mB,EAAOA,IAEtBptB,KAAKssB,MACb,KAAKtsB,KAAKqsB,MACRxuB,EAAI,EAAImC,KAAK+sB,MAAQK,EAAOptB,KAAKgtB,MAAQK,EAAOJ,EAChD,MACF,KAAKjtB,KAAKosB,MACRvuB,EAAI,EAAIwvB,EAAOJ,EACf,MACF,KAAKjtB,KAAKmsB,OACRtuB,EAAIzE,EAAUqN,EACd0mB,EAAIntB,KAAKusB,GAAKY,EACd,MACF,KAAKntB,KAAKksB,OACRruB,EAAI4I,EAAMrN,EACV+zB,EAAIntB,KAAKusB,GAAKY,EACd,MAEF,GAAI9zB,KAAKkN,IAAI1I,GAAKnE,EAChB,OAAO,KAET,OAAQsG,KAAKssB,MACb,KAAKtsB,KAAKqsB,MACV,KAAKrsB,KAAKosB,MACRvuB,EAAIxE,KAAKgN,KAAK,EAAIxI,GAEhB2J,EADExH,KAAKssB,OAAStsB,KAAKqsB,MACjBrsB,KAAK8sB,IAAMjvB,GAAKmC,KAAKgtB,MAAQI,EAAOptB,KAAK+sB,MAAQM,EAAOJ,IAGvDpvB,EAAIxE,KAAKgN,KAAK,GAAK,EAAIgnB,EAAOJ,KAAYG,EAAOptB,KAAK8sB,IAE7DxmB,EAAItG,KAAK6sB,IAAMhvB,EAAIwvB,EAAOH,EAC1B,MACF,KAAKltB,KAAKmsB,OACV,KAAKnsB,KAAKksB,OACJiB,GAAK,GACP7mB,GAAKzI,EAAIxE,KAAKgN,KAAK8mB,IAAMD,EACzB1lB,EAAIylB,GAAWjtB,KAAKssB,OAAStsB,KAAKksB,OAAUruB,GAAKA,IAGjDyI,EAAIkB,EAAI,EAEV,OAMJ,OAFA3L,EAAEyK,EAAItG,KAAKrE,EAAI2K,EAAItG,KAAKzC,GACxB1B,EAAE2L,EAAIxH,KAAKrE,EAAI6L,EAAIxH,KAAKvC,GACjB5B,EAKF,SAASgM,GAAQhM,GACtBA,EAAEyK,GAAKtG,KAAKzC,GACZ1B,EAAE2L,GAAKxH,KAAKvC,GACZ,IAEI0tB,EAAK1kB,EAAK6mB,EAAKC,EAAKJ,EAAGvJ,EAAK4J,EAF5BlnB,EAAIzK,EAAEyK,EAAItG,KAAKrE,EACf6L,EAAI3L,EAAE2L,EAAIxH,KAAKrE,EAEnB,GAAIqE,KAAK0D,OAAQ,CACf,IACE+gB,EADEgJ,EAAO,EACLC,EAAO,EAIb,GAFAjJ,EAAKprB,KAAKgN,KAAKC,EAAIA,EAAIkB,EAAIA,GAC3Bf,EAAW,GAALge,EACFhe,EAAM,EACR,OAAO,KAOT,OALAA,EAAM,EAAIpN,KAAKymB,KAAKrZ,GAChBzG,KAAKssB,OAAStsB,KAAKqsB,OAASrsB,KAAKssB,OAAStsB,KAAKosB,QACjDsB,EAAOr0B,KAAK4N,IAAIR,GAChBgnB,EAAOp0B,KAAKgO,IAAIZ,IAEVzG,KAAKssB,MACb,KAAKtsB,KAAKosB,MACR3lB,EAAOpN,KAAKkN,IAAIke,IAAO/qB,EAAS,EAAIL,KAAKymB,KAAKtY,EAAIkmB,EAAOjJ,GACzDne,GAAKonB,EACLlmB,EAAIimB,EAAOhJ,EACX,MACF,KAAKzkB,KAAKqsB,MACR5lB,EAAOpN,KAAKkN,IAAIke,IAAO/qB,EAASsG,KAAK3D,KAAOhD,KAAKymB,KAAK2N,EAAOztB,KAAK4mB,OAASpf,EAAIkmB,EAAO1tB,KAAKwmB,OAAS/B,GACpGne,GAAKonB,EAAO1tB,KAAKwmB,OACjBhf,GAAKimB,EAAOp0B,KAAK4N,IAAIR,GAAOzG,KAAK4mB,QAAUnC,EAC3C,MACF,KAAKzkB,KAAKmsB,OACR3kB,GAAKA,EACLf,EAAMrN,EAAUqN,EAChB,MACF,KAAKzG,KAAKksB,OACRzlB,GAAOrN,EACP,MAEF+xB,EAAa,IAAN3jB,GAAYxH,KAAKssB,OAAStsB,KAAKosB,OAASpsB,KAAKssB,OAAStsB,KAAKqsB,MAAchzB,KAAKwY,MAAMvL,EAAGkB,GAAlB,MAEzE,CAEH,GADAgmB,EAAK,EACDxtB,KAAKssB,OAAStsB,KAAKqsB,OAASrsB,KAAKssB,OAAStsB,KAAKosB,MAAO,CAIxD,GAHA9lB,GAAKtG,KAAKyrB,GACVjkB,GAAKxH,KAAKyrB,GACV7H,EAAMvqB,KAAKgN,KAAKC,EAAIA,EAAIkB,EAAIA,GACxBoc,EAAMlqB,EAGR,OAFAmC,EAAEyK,EAAItG,KAAKpD,MACXf,EAAE2L,EAAIxH,KAAK3D,KACJR,EAET0xB,EAAM,EAAIl0B,KAAKymB,KAAK,GAAM8D,EAAM5jB,KAAK4sB,IACrCU,EAAMj0B,KAAKgO,IAAIkmB,GACfjnB,GAAMinB,EAAMl0B,KAAK4N,IAAIsmB,GACjBvtB,KAAKssB,OAAStsB,KAAKqsB,OACrBmB,EAAKF,EAAMttB,KAAK+sB,MAAQvlB,EAAI+lB,EAAMvtB,KAAKgtB,MAAQpJ,EAC/CuJ,EAAIntB,KAAKusB,GAAKiB,EACdhmB,EAAIoc,EAAM5jB,KAAKgtB,MAAQM,EAAM9lB,EAAIxH,KAAK+sB,MAAQQ,IAG9CC,EAAKhmB,EAAI+lB,EAAM3J,EACfuJ,EAAIntB,KAAKusB,GAAKiB,EACdhmB,EAAIoc,EAAM0J,QAGT,GAAIttB,KAAKssB,OAAStsB,KAAKmsB,QAAUnsB,KAAKssB,OAAStsB,KAAKksB,OAAQ,CAK/D,GAJIlsB,KAAKssB,OAAStsB,KAAKmsB,SACrB3kB,GAAKA,GAEP2lB,EAAK7mB,EAAIA,EAAIkB,EAAIA,GACZ2lB,EAGH,OAFAtxB,EAAEyK,EAAItG,KAAKpD,MACXf,EAAE2L,EAAIxH,KAAK3D,KACJR,EAET2xB,EAAK,EAAIL,EAAIntB,KAAKusB,GACdvsB,KAAKssB,OAAStsB,KAAKksB,SACrBsB,GAAMA,GAGVrC,EAAM9xB,KAAKwY,MAAMvL,EAAGkB,GACpBf,EAAMknB,GAAQt0B,KAAKymB,KAAK0N,GAAKxtB,KAAK0sB,KAKpC,OAFA7wB,EAAEyK,EAAIqB,GAAW3H,KAAKpD,MAAQuuB,GAC9BtvB,EAAE2L,EAAIf,EACC5K,EAIT,IAAI+xB,GAAM,kBAENC,GAAM,mBACNC,GAAM,mBACNC,GAAM,mBACNC,GAAM,kBACNC,GAAM,oBAEV,SAAStB,GAAQxlB,GACf,IAAIgN,EACA+Z,EAAM,GASV,OARAA,EAAI,GAAK/mB,EAAKymB,GACdzZ,EAAIhN,EAAKA,EACT+mB,EAAI,IAAM/Z,EAAI0Z,GACdK,EAAI,GAAK/Z,EAAI4Z,GACb5Z,GAAKhN,EACL+mB,EAAI,IAAM/Z,EAAI2Z,GACdI,EAAI,IAAM/Z,EAAI6Z,GACdE,EAAI,GAAK/Z,EAAI8Z,GACNC,EAGT,SAASP,GAAQQ,EAAMD,GACrB,IAAI/Z,EAAIga,EAAOA,EACf,OAAQA,EAAOD,EAAI,GAAK70B,KAAK4N,IAAIkN,GAAK+Z,EAAI,GAAK70B,KAAK4N,IAAIkN,EAAIA,GAAK+Z,EAAI,GAAK70B,KAAK4N,IAAIkN,EAAIA,EAAIA,GAGtF,IAAInM,GAAQ,CAAC,+BAAgC,+BAAgC,QACpF,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,GACPkkB,OAAQA,GACRC,OAAQA,GACRC,MAAOA,GACPC,MAAOA,ICxSM,YAAS/lB,GAItB,OAHIjN,KAAKkN,IAAID,GAAK,IAChBA,EAAKA,EAAI,EAAK,GAAK,GAEdjN,KAAKymB,KAAKxZ,GCEZ,SAASY,KAEV7N,KAAKkN,IAAIvG,KAAKzD,KAAOyD,KAAKvD,MAAQ/C,IAGtCsG,KAAK4f,KAAO5f,KAAKnC,EAAImC,KAAKrE,EAC1BqE,KAAKmH,GAAK,EAAI9N,KAAKsN,IAAI3G,KAAK4f,KAAM,GAClC5f,KAAK6qB,GAAKxxB,KAAKgN,KAAKrG,KAAKmH,IAEzBnH,KAAKouB,OAAS/0B,KAAK4N,IAAIjH,KAAKzD,MAC5ByD,KAAKquB,OAASh1B,KAAKgO,IAAIrH,KAAKzD,MAC5ByD,KAAKsuB,GAAKtuB,KAAKouB,OACfpuB,KAAKoG,IAAMpG,KAAKouB,OAChBpuB,KAAKmkB,IAAM7c,GAAMtH,KAAK6qB,GAAI7qB,KAAKouB,OAAQpuB,KAAKquB,QAC5CruB,KAAKuuB,IAAM/B,GAAMxsB,KAAK6qB,GAAI7qB,KAAKouB,OAAQpuB,KAAKquB,QAE5CruB,KAAKouB,OAAS/0B,KAAK4N,IAAIjH,KAAKvD,MAC5BuD,KAAKquB,OAASh1B,KAAKgO,IAAIrH,KAAKvD,MAC5BuD,KAAKwuB,GAAKxuB,KAAKouB,OACfpuB,KAAKopB,IAAM9hB,GAAMtH,KAAK6qB,GAAI7qB,KAAKouB,OAAQpuB,KAAKquB,QAC5CruB,KAAKyuB,IAAMjC,GAAMxsB,KAAK6qB,GAAI7qB,KAAKouB,OAAQpuB,KAAKquB,QAE5CruB,KAAKouB,OAAS/0B,KAAK4N,IAAIjH,KAAK3D,MAC5B2D,KAAKquB,OAASh1B,KAAKgO,IAAIrH,KAAK3D,MAC5B2D,KAAK0uB,GAAK1uB,KAAKouB,OACfpuB,KAAK2uB,IAAMnC,GAAMxsB,KAAK6qB,GAAI7qB,KAAKouB,OAAQpuB,KAAKquB,QAExCh1B,KAAKkN,IAAIvG,KAAKzD,KAAOyD,KAAKvD,MAAQ/C,EACpCsG,KAAK4uB,KAAO5uB,KAAKmkB,IAAMnkB,KAAKmkB,IAAMnkB,KAAKopB,IAAMppB,KAAKopB,MAAQppB,KAAKyuB,IAAMzuB,KAAKuuB,KAG1EvuB,KAAK4uB,IAAM5uB,KAAKoG,IAElBpG,KAAKif,EAAIjf,KAAKmkB,IAAMnkB,KAAKmkB,IAAMnkB,KAAK4uB,IAAM5uB,KAAKuuB,IAC/CvuB,KAAKykB,GAAKzkB,KAAKrE,EAAItC,KAAKgN,KAAKrG,KAAKif,EAAIjf,KAAK4uB,IAAM5uB,KAAK2uB,KAAO3uB,KAAK4uB,KAK7D,SAASrnB,GAAQ1L,GAEtB,IAAI4L,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAEZxH,KAAK6e,QAAUxlB,KAAK4N,IAAIS,GACxB1H,KAAK8e,QAAUzlB,KAAKgO,IAAIK,GAExB,IAAImnB,EAAKrC,GAAMxsB,KAAK6qB,GAAI7qB,KAAK6e,QAAS7e,KAAK8e,SACvC2K,EAAMzpB,KAAKrE,EAAItC,KAAKgN,KAAKrG,KAAKif,EAAIjf,KAAK4uB,IAAMC,GAAM7uB,KAAK4uB,IACxDlF,EAAQ1pB,KAAK4uB,IAAMjnB,GAAWF,EAAMzH,KAAKpD,OACzC0J,EAAImjB,EAAMpwB,KAAK4N,IAAIyiB,GAAS1pB,KAAKzC,GACjCiK,EAAIxH,KAAKykB,GAAKgF,EAAMpwB,KAAKgO,IAAIqiB,GAAS1pB,KAAKvC,GAI/C,OAFA5B,EAAEyK,EAAIA,EACNzK,EAAE2L,EAAIA,EACC3L,EAGF,SAASgM,GAAQhM,GACtB,IAAI4tB,EAAKoF,EAAIzoB,EAAKsjB,EAAOjiB,EAAKC,EA4B9B,OA1BA7L,EAAEyK,GAAKtG,KAAKzC,GACZ1B,EAAE2L,EAAIxH,KAAKykB,GAAK5oB,EAAE2L,EAAIxH,KAAKvC,GACvBuC,KAAK4uB,KAAO,GACdnF,EAAMpwB,KAAKgN,KAAKxK,EAAEyK,EAAIzK,EAAEyK,EAAIzK,EAAE2L,EAAI3L,EAAE2L,GACpCpB,EAAM,IAGNqjB,GAAOpwB,KAAKgN,KAAKxK,EAAEyK,EAAIzK,EAAEyK,EAAIzK,EAAE2L,EAAI3L,EAAE2L,GACrCpB,GAAO,GAETsjB,EAAQ,EACI,IAARD,IACFC,EAAQrwB,KAAKwY,MAAMzL,EAAMvK,EAAEyK,EAAGF,EAAMvK,EAAE2L,IAExCpB,EAAMqjB,EAAMzpB,KAAK4uB,IAAM5uB,KAAKrE,EACxBqE,KAAK0D,OACPgE,EAAMrO,KAAKymB,MAAM9f,KAAKif,EAAI7Y,EAAMA,IAAQ,EAAIpG,KAAK4uB,OAGjDC,GAAM7uB,KAAKif,EAAI7Y,EAAMA,GAAOpG,KAAK4uB,IACjClnB,EAAM1H,KAAK8uB,MAAM9uB,KAAK6qB,GAAIgE,IAG5BpnB,EAAME,GAAW+hB,EAAQ1pB,KAAK4uB,IAAM5uB,KAAKpD,OACzCf,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,EAMF,SAASizB,GAAM7oB,EAAQ4oB,GAC5B,IAAI3oB,EAAQC,EAAQC,EAAKM,EAAKI,EAC1BL,EAAMsoB,GAAM,GAAMF,GACtB,GAAI5oB,EAASvM,EACX,OAAO+M,EAIT,IADA,IAAIuoB,EAAS/oB,EAASA,EACbnL,EAAI,EAAGA,GAAK,GAAIA,IAOvB,GANAoL,EAAS7M,KAAK4N,IAAIR,GAClBN,EAAS9M,KAAKgO,IAAIZ,GAClBL,EAAMH,EAASC,EACfQ,EAAM,EAAIN,EAAMA,EAChBU,EAAO,GAAMJ,EAAMA,EAAMP,GAAU0oB,GAAM,EAAIG,GAAU9oB,EAASQ,EAAM,GAAMT,EAAS5M,KAAKuL,KAAK,EAAIwB,IAAQ,EAAIA,KAC/GK,GAAYK,EACRzN,KAAKkN,IAAIO,IAAS,KACpB,OAAOL,EAGX,OAAO,KAGF,IAAIuB,GAAQ,CAAC,0BAA2B,SAAU,OACzD,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,GACP8mB,MAAOA,ICrHF,SAAS5nB,KAIdlH,KAAKivB,QAAU51B,KAAK4N,IAAIjH,KAAK3D,MAC7B2D,KAAKkvB,QAAU71B,KAAKgO,IAAIrH,KAAK3D,MAE7B2D,KAAKmvB,cAAgB,IAAOnvB,KAAKrE,EACjCqE,KAAK8iB,GAAK,EAKL,SAASvb,GAAQ1L,GACtB,IAAIqK,EAAQC,EACRye,EACAwK,EACAC,EACA1P,EACArZ,EAAGkB,EACHC,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EA8BZ,OA3BAod,EAAOjd,GAAWF,EAAMzH,KAAKpD,OAE7BsJ,EAAS7M,KAAK4N,IAAIS,GAClBvB,EAAS9M,KAAKgO,IAAIK,GAElB0nB,EAAS/1B,KAAKgO,IAAIud,GAClBjF,EAAI3f,KAAKivB,QAAU/oB,EAASlG,KAAKkvB,QAAU/oB,EAASipB,EACpDC,EAAM,EACD1P,EAAI,GAAOtmB,KAAKkN,IAAIoZ,IAAMjmB,GAC7B4M,EAAItG,KAAKzC,GAAKyC,KAAKrE,EAAI0zB,EAAMlpB,EAAS9M,KAAK4N,IAAI2d,GAAQjF,EACvDnY,EAAIxH,KAAKvC,GAAKuC,KAAKrE,EAAI0zB,GAAOrvB,KAAKkvB,QAAUhpB,EAASlG,KAAKivB,QAAU9oB,EAASipB,GAAUzP,IAWxFrZ,EAAItG,KAAKzC,GAAKyC,KAAKmvB,cAAgBhpB,EAAS9M,KAAK4N,IAAI2d,GACrDpd,EAAIxH,KAAKvC,GAAKuC,KAAKmvB,eAAiBnvB,KAAKkvB,QAAUhpB,EAASlG,KAAKivB,QAAU9oB,EAASipB,IAGtFvzB,EAAEyK,EAAIA,EACNzK,EAAE2L,EAAIA,EACC3L,EAGF,SAASgM,GAAQhM,GACtB,IAAI4oB,EACAhB,EAAMC,EACNzE,EACAxX,EAAKC,EA0BT,OAtBA7L,EAAEyK,GAAKzK,EAAEyK,EAAItG,KAAKzC,IAAMyC,KAAKrE,EAC7BE,EAAE2L,GAAK3L,EAAE2L,EAAIxH,KAAKvC,IAAMuC,KAAKrE,EAE7BE,EAAEyK,GAAKtG,KAAKrC,GACZ9B,EAAE2L,GAAKxH,KAAKrC,IAEP8mB,EAAKprB,KAAKgN,KAAKxK,EAAEyK,EAAIzK,EAAEyK,EAAIzK,EAAE2L,EAAI3L,EAAE2L,KACtCyX,EAAI5lB,KAAKwY,MAAM4S,EAAIzkB,KAAK8iB,IACxBW,EAAOpqB,KAAK4N,IAAIgY,GAChByE,EAAOrqB,KAAKgO,IAAI4X,GAEhBvX,EAAMqnB,GAAMrL,EAAO1jB,KAAKivB,QAAWpzB,EAAE2L,EAAIic,EAAOzjB,KAAKkvB,QAAWzK,GAChEhd,EAAMpO,KAAKwY,MAAMhW,EAAEyK,EAAImd,EAAMgB,EAAKzkB,KAAKkvB,QAAUxL,EAAO7nB,EAAE2L,EAAIxH,KAAKivB,QAAUxL,GAC7Ehc,EAAME,GAAW3H,KAAKpD,MAAQ6K,KAG9BC,EAAM1H,KAAK+iB,MACXtb,EAAM,GAGR5L,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,EAGF,IAAImM,GAAQ,CAAC,QACpB,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,ICpGM,YAAS/B,EAAQknB,GAC9B,IAAIvN,EAAO,GAAK,EAAI3Z,EAASA,IAAW,EAAIA,GAAU5M,KAAKuL,KAAK,EAAIqB,IAAW,EAAIA,IACnF,GAAI5M,KAAKkN,IAAIlN,KAAKkN,IAAI4mB,GAAKvN,GAAQ,KACjC,OAAIuN,EAAI,GACG,EAAI/zB,EAGNA,EASX,IALA,IACI0N,EACA+X,EACAC,EACA1Y,EAJAK,EAAMpN,KAAKymB,KAAK,GAAMqN,GAKjBryB,EAAI,EAAGA,EAAI,GAAIA,IAMtB,GALA+jB,EAAUxlB,KAAK4N,IAAIR,GACnBqY,EAAUzlB,KAAKgO,IAAIZ,GACnBL,EAAMH,EAAS4Y,EACf/X,EAAOzN,KAAKsN,IAAI,EAAIP,EAAMA,EAAK,IAAM,EAAI0Y,IAAYqO,GAAK,EAAIlnB,EAASA,GAAU4Y,GAAW,EAAIzY,EAAMA,GAAO,GAAMH,EAAS5M,KAAKuL,KAAK,EAAIwB,IAAQ,EAAIA,KACtJK,GAAOK,EACHzN,KAAKkN,IAAIO,IAAS,MACpB,OAAOL,EAKX,OAAO4M,ICnBF,SAASnM,KAETlH,KAAK0D,SACR1D,KAAKrC,GAAK2J,GAAMtH,KAAKoH,EAAG/N,KAAK4N,IAAIjH,KAAKtD,QAASrD,KAAKgO,IAAIrH,KAAKtD,UAM1D,SAAS6K,GAAQ1L,GACtB,IAEIyK,EAAGkB,EAFHC,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAIRod,EAAOjd,GAAWF,EAAMzH,KAAKpD,OACjC,GAAIoD,KAAK0D,OACP4C,EAAItG,KAAKzC,GAAKyC,KAAKrE,EAAIipB,EAAOvrB,KAAKgO,IAAIrH,KAAKtD,QAC5C8K,EAAIxH,KAAKvC,GAAKuC,KAAKrE,EAAItC,KAAK4N,IAAIS,GAAOrO,KAAKgO,IAAIrH,KAAKtD,YAElD,CACH,IAAImyB,EAAKrC,GAAMxsB,KAAKoH,EAAG/N,KAAK4N,IAAIS,IAChCpB,EAAItG,KAAKzC,GAAKyC,KAAKrE,EAAIqE,KAAKrC,GAAKinB,EACjCpd,EAAIxH,KAAKvC,GAAKuC,KAAKrE,EAAIkzB,EAAK,GAAM7uB,KAAKrC,GAKzC,OAFA9B,EAAEyK,EAAIA,EACNzK,EAAE2L,EAAIA,EACC3L,EAKF,SAASgM,GAAQhM,GAGtB,IAAI4L,EAAKC,EAaT,OAfA7L,EAAEyK,GAAKtG,KAAKzC,GACZ1B,EAAE2L,GAAKxH,KAAKvC,GAGRuC,KAAK0D,QACP+D,EAAME,GAAW3H,KAAKpD,MAASf,EAAEyK,EAAItG,KAAKrE,EAAKtC,KAAKgO,IAAIrH,KAAKtD,SAC7DgL,EAAMrO,KAAKymB,KAAMjkB,EAAE2L,EAAIxH,KAAKrE,EAAKtC,KAAKgO,IAAIrH,KAAKtD,WAG/CgL,EAAM4nB,GAAOtvB,KAAKoH,EAAG,EAAIvL,EAAE2L,EAAIxH,KAAKrC,GAAKqC,KAAKrE,GAC9C8L,EAAME,GAAW3H,KAAKpD,MAAQf,EAAEyK,GAAKtG,KAAKrE,EAAIqE,KAAKrC,MAGrD9B,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,EAGF,IAAImM,GAAQ,CAAC,OACpB,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,ICjEF,SAASd,KAEdlH,KAAKzC,GAAKyC,KAAKzC,IAAM,EACrByC,KAAKvC,GAAKuC,KAAKvC,IAAM,EACrBuC,KAAK3D,KAAO2D,KAAK3D,MAAQ,EACzB2D,KAAKpD,MAAQoD,KAAKpD,OAAS,EAC3BoD,KAAKtD,OAASsD,KAAKtD,QAAU,EAC7BsD,KAAKwjB,MAAQxjB,KAAKwjB,OAAS,wCAE3BxjB,KAAK8iB,GAAKzpB,KAAKgO,IAAIrH,KAAKtD,QAKnB,SAAS6K,GAAQ1L,GAEtB,IAAI4L,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAERod,EAAOjd,GAAWF,EAAMzH,KAAKpD,OAC7B2yB,EAAOtD,GAAWvkB,EAAM1H,KAAK3D,MAGjC,OAFAR,EAAEyK,EAAItG,KAAKzC,GAAMyC,KAAKrE,EAAIipB,EAAO5kB,KAAK8iB,GACtCjnB,EAAE2L,EAAIxH,KAAKvC,GAAMuC,KAAKrE,EAAI4zB,EACnB1zB,EAKF,SAASgM,GAAQhM,GAEtB,IAAIyK,EAAIzK,EAAEyK,EACNkB,EAAI3L,EAAE2L,EAIV,OAFA3L,EAAEyK,EAAIqB,GAAW3H,KAAKpD,OAAU0J,EAAItG,KAAKzC,KAAOyC,KAAKrE,EAAIqE,KAAK8iB,KAC9DjnB,EAAE2L,EAAIykB,GAAWjsB,KAAK3D,MAASmL,EAAIxH,KAAKvC,IAAOuC,KAAKrE,GAC7CE,EAGF,IAAImM,GAAQ,CAAC,kBAAmB,0BAA2B,OAClE,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,ICpCLsW,GAAW,GAER,SAASpX,KAGdlH,KAAK4f,KAAO5f,KAAKnC,EAAImC,KAAKrE,EAC1BqE,KAAKmH,GAAK,EAAI9N,KAAKsN,IAAI3G,KAAK4f,KAAM,GAClC5f,KAAKoH,EAAI/N,KAAKgN,KAAKrG,KAAKmH,IACxBnH,KAAK4qB,GAAKE,GAAK9qB,KAAKmH,IACpBnH,KAAKqa,GAAK0Q,GAAK/qB,KAAKmH,IACpBnH,KAAKqlB,GAAK2F,GAAKhrB,KAAKmH,IACpBnH,KAAK6qB,GAAKI,GAAKjrB,KAAKmH,IACpBnH,KAAK2e,IAAM3e,KAAKrE,EAAIuvB,GAAKlrB,KAAK4qB,GAAI5qB,KAAKqa,GAAIra,KAAKqlB,GAAIrlB,KAAK6qB,GAAI7qB,KAAK3D,MAK7D,SAASkL,GAAQ1L,GACtB,IAEIyK,EAAGkB,EAAGgoB,EAFN/nB,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAERod,EAAOjd,GAAWF,EAAMzH,KAAKpD,OAEjC,GADA4yB,EAAK5K,EAAOvrB,KAAK4N,IAAIS,GACjB1H,KAAK0D,OACHrK,KAAKkN,IAAImB,IAAQhO,GACnB4M,EAAItG,KAAKrE,EAAIipB,EACbpd,GAAK,EAAIxH,KAAKrE,EAAIqE,KAAK3D,OAGvBiK,EAAItG,KAAKrE,EAAItC,KAAK4N,IAAIuoB,GAAMn2B,KAAKuN,IAAIc,GACrCF,EAAIxH,KAAKrE,GAAKswB,GAAWvkB,EAAM1H,KAAK3D,OAAS,EAAIhD,KAAKgO,IAAImoB,IAAOn2B,KAAKuN,IAAIc,UAI5E,GAAIrO,KAAKkN,IAAImB,IAAQhO,EACnB4M,EAAItG,KAAKrE,EAAIipB,EACbpd,GAAK,EAAIxH,KAAK2e,QAEX,CACH,IAAIyM,EAAKC,GAAGrrB,KAAKrE,EAAGqE,KAAKoH,EAAG/N,KAAK4N,IAAIS,IAAQrO,KAAKuN,IAAIc,GACtDpB,EAAI8kB,EAAK/xB,KAAK4N,IAAIuoB,GAClBhoB,EAAIxH,KAAKrE,EAAIuvB,GAAKlrB,KAAK4qB,GAAI5qB,KAAKqa,GAAIra,KAAKqlB,GAAIrlB,KAAK6qB,GAAInjB,GAAO1H,KAAK2e,IAAMyM,GAAM,EAAI/xB,KAAKgO,IAAImoB,IAM/F,OAFA3zB,EAAEyK,EAAIA,EAAItG,KAAKzC,GACf1B,EAAE2L,EAAIA,EAAIxH,KAAKvC,GACR5B,EAKF,SAASgM,GAAQhM,GACtB,IAAI4L,EAAKC,EAAKpB,EAAGkB,EAAG1M,EAChBikB,EAAI0Q,EACJhpB,EAAKK,EAIT,GAHAR,EAAIzK,EAAEyK,EAAItG,KAAKzC,GACfiK,EAAI3L,EAAE2L,EAAIxH,KAAKvC,GAEXuC,KAAK0D,OACP,GAAIrK,KAAKkN,IAAIiB,EAAIxH,KAAKrE,EAAIqE,KAAK3D,OAAS3C,EACtC+N,EAAME,GAAWrB,EAAItG,KAAKrE,EAAIqE,KAAKpD,OACnC8K,EAAM,MAEH,CAIH,IAAIgoB,EACJ,IAJA3Q,EAAK/e,KAAK3D,KAAOmL,EAAIxH,KAAKrE,EAC1B8zB,EAAKnpB,EAAIA,EAAItG,KAAKrE,EAAIqE,KAAKrE,EAAIojB,EAAKA,EACpCtY,EAAMsY,EAEDjkB,EAAIwjB,GAAUxjB,IAAKA,EAItB,GAHA40B,EAASr2B,KAAKuN,IAAIH,GAClBK,GAAQ,GAAKiY,GAAMtY,EAAMipB,EAAS,GAAKjpB,EAAM,IAAOA,EAAMA,EAAMgpB,GAAMC,KAAYjpB,EAAMsY,GAAM2Q,EAAS,GACvGjpB,GAAOK,EACHzN,KAAKkN,IAAIO,IAASpN,EAAO,CAC3BgO,EAAMjB,EACN,MAGJgB,EAAME,GAAW3H,KAAKpD,MAASvD,KAAKymB,KAAKxZ,EAAIjN,KAAKuN,IAAIH,GAAOzG,KAAKrE,GAAMtC,KAAK4N,IAAIS,SAInF,GAAIrO,KAAKkN,IAAIiB,EAAIxH,KAAK2e,MAAQjlB,EAC5BgO,EAAM,EACND,EAAME,GAAW3H,KAAKpD,MAAQ0J,EAAItG,KAAKrE,OAEpC,CAKH,IAAI6vB,EAAImE,EAAKC,EAAMC,EACfzpB,EACJ,IALA2Y,GAAM/e,KAAK2e,IAAMnX,GAAKxH,KAAKrE,EAC3B8zB,EAAKnpB,EAAIA,EAAItG,KAAKrE,EAAIqE,KAAKrE,EAAIojB,EAAKA,EACpCtY,EAAMsY,EAGDjkB,EAAIwjB,GAAUxjB,IAAKA,EAQtB,GAPAsL,EAAMpG,KAAKoH,EAAI/N,KAAK4N,IAAIR,GACxB+kB,EAAKnyB,KAAKgN,KAAK,EAAID,EAAMA,GAAO/M,KAAKuN,IAAIH,GACzCkpB,EAAM3vB,KAAKrE,EAAIuvB,GAAKlrB,KAAK4qB,GAAI5qB,KAAKqa,GAAIra,KAAKqlB,GAAIrlB,KAAK6qB,GAAIpkB,GACxDmpB,EAAO5vB,KAAK4qB,GAAK,EAAI5qB,KAAKqa,GAAKhhB,KAAKgO,IAAI,EAAIZ,GAAO,EAAIzG,KAAKqlB,GAAKhsB,KAAKgO,IAAI,EAAIZ,GAAO,EAAIzG,KAAK6qB,GAAKxxB,KAAKgO,IAAI,EAAIZ,GAChHopB,EAAKF,EAAM3vB,KAAKrE,EAChBmL,GAAQiY,GAAMyM,EAAKqE,EAAK,GAAKA,EAAK,GAAMrE,GAAMqE,EAAKA,EAAKJ,KAAQzvB,KAAKmH,GAAK9N,KAAK4N,IAAI,EAAIR,IAAQopB,EAAKA,EAAKJ,EAAK,EAAI1Q,EAAK8Q,IAAO,EAAIrE,IAAOzM,EAAK8Q,IAAOrE,EAAKoE,EAAO,EAAIv2B,KAAK4N,IAAI,EAAIR,IAAQmpB,GAC1LnpB,GAAOK,EACHzN,KAAKkN,IAAIO,IAASpN,EAAO,CAC3BgO,EAAMjB,EACN,MAKJ+kB,EAAKnyB,KAAKgN,KAAK,EAAIrG,KAAKmH,GAAK9N,KAAKsN,IAAItN,KAAK4N,IAAIS,GAAM,IAAMrO,KAAKuN,IAAIc,GACpED,EAAME,GAAW3H,KAAKpD,MAAQvD,KAAKymB,KAAKxZ,EAAIklB,EAAKxrB,KAAKrE,GAAKtC,KAAK4N,IAAIS,IAMxE,OAFA7L,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,EAGF,IAAImM,GAAQ,CAAC,YAAa,QACjC,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,ICnHF,SAASd,KACdlH,KAAKqX,EAAI,GACTrX,KAAKqX,EAAE,GAAK,YACZrX,KAAKqX,EAAE,IAAM,YACbrX,KAAKqX,EAAE,GAAK,WACZrX,KAAKqX,EAAE,IAAM,UACbrX,KAAKqX,EAAE,GAAK,SACZrX,KAAKqX,EAAE,IAAM,SACbrX,KAAKqX,EAAE,GAAK,SACZrX,KAAKqX,EAAE,IAAM,QACbrX,KAAKqX,EAAE,GAAK,MACZrX,KAAKqX,EAAE,KAAO,MAEdrX,KAAK8vB,KAAO,GACZ9vB,KAAK+vB,KAAO,GACZ/vB,KAAK8vB,KAAK,GAAK,YACf9vB,KAAK+vB,KAAK,GAAK,EACf/vB,KAAK8vB,KAAK,GAAK,WACf9vB,KAAK+vB,KAAK,GAAK,WACf/vB,KAAK8vB,KAAK,IAAM,WAChB9vB,KAAK+vB,KAAK,GAAK,UACf/vB,KAAK8vB,KAAK,IAAM,UAChB9vB,KAAK+vB,KAAK,GAAK,UACf/vB,KAAK8vB,KAAK,IAAM,UAChB9vB,KAAK+vB,KAAK,IAAM,UAChB/vB,KAAK8vB,KAAK,IAAM,SAChB9vB,KAAK+vB,KAAK,IAAM,UAEhB/vB,KAAKgwB,KAAO,GACZhwB,KAAKiwB,KAAO,GACZjwB,KAAKgwB,KAAK,GAAK,aACfhwB,KAAKiwB,KAAK,GAAK,EACfjwB,KAAKgwB,KAAK,IAAM,WAChBhwB,KAAKiwB,KAAK,IAAM,WAChBjwB,KAAKgwB,KAAK,GAAK,WACfhwB,KAAKiwB,KAAK,IAAM,WAChBjwB,KAAKgwB,KAAK,IAAM,UAChBhwB,KAAKiwB,KAAK,GAAK,UACfjwB,KAAKgwB,KAAK,GAAK,WACfhwB,KAAKiwB,KAAK,GAAK,WACfjwB,KAAKgwB,KAAK,GAAK,UACfhwB,KAAKiwB,KAAK,GAAK,UAEfjwB,KAAKka,EAAI,GACTla,KAAKka,EAAE,GAAK,aACZla,KAAKka,EAAE,GAAK,YACZla,KAAKka,EAAE,IAAM,UACbla,KAAKka,EAAE,IAAM,SACbla,KAAKka,EAAE,IAAM,SACbla,KAAKka,EAAE,GAAK,QACZla,KAAKka,EAAE,GAAK,MACZla,KAAKka,EAAE,GAAK,OACZla,KAAKka,EAAE,IAAM,MAOR,SAAS3S,GAAQ1L,GACtB,IAAI4M,EACAhB,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAER0oB,EAAYxoB,EAAM1H,KAAK3D,KACvBuiB,EAAYnX,EAAMzH,KAAKpD,MAIvBuzB,EAAQD,EAAY/2B,EAAa,KACjCi3B,EAAWxR,EACXyR,EAAU,EAEVC,EAAQ,EACZ,IAAK7nB,EAAI,EAAGA,GAAK,GAAIA,IACnB4nB,GAAoBF,EACpBG,GAAgBtwB,KAAKqX,EAAE5O,GAAK4nB,EAI9B,IAMIE,EACAC,EAPAC,EAAQH,EACRI,EAAQN,EAGRO,EAAU,EACVC,EAAU,EAIVC,EAAO,EACPC,EAAO,EACX,IAAKroB,EAAI,EAAGA,GAAK,EAAGA,IAClB8nB,EAAWI,EAAUF,EAAQG,EAAUF,EACvCF,EAAWI,EAAUH,EAAQE,EAAUD,EACvCC,EAAUJ,EACVK,EAAUJ,EACVK,EAAOA,EAAO7wB,KAAK8vB,KAAKrnB,GAAKkoB,EAAU3wB,KAAK+vB,KAAKtnB,GAAKmoB,EACtDE,EAAOA,EAAO9wB,KAAK+vB,KAAKtnB,GAAKkoB,EAAU3wB,KAAK8vB,KAAKrnB,GAAKmoB,EAOxD,OAHA/0B,EAAEyK,EAAKwqB,EAAO9wB,KAAKrE,EAAKqE,KAAKzC,GAC7B1B,EAAE2L,EAAKqpB,EAAO7wB,KAAKrE,EAAKqE,KAAKvC,GAEtB5B,EAMF,SAASgM,GAAQhM,GACtB,IAAI4M,EAcAsoB,EACAC,EAdA1qB,EAAIzK,EAAEyK,EACNkB,EAAI3L,EAAE2L,EAENypB,EAAU3qB,EAAItG,KAAKzC,GACnB2zB,EAAU1pB,EAAIxH,KAAKvC,GAGnBozB,EAAOK,EAAUlxB,KAAKrE,EACtBm1B,EAAOG,EAAUjxB,KAAKrE,EAGtBw1B,EAAS,EACTC,EAAS,EAITX,EAAQ,EACRC,EAAQ,EACZ,IAAKjoB,EAAI,EAAGA,GAAK,EAAGA,IAClBsoB,EAAUI,EAASN,EAAOO,EAASN,EACnCE,EAAUI,EAASP,EAAOM,EAASL,EACnCK,EAASJ,EACTK,EAASJ,EACTP,EAAQA,EAAQzwB,KAAKgwB,KAAKvnB,GAAK0oB,EAASnxB,KAAKiwB,KAAKxnB,GAAK2oB,EACvDV,EAAQA,EAAQ1wB,KAAKiwB,KAAKxnB,GAAK0oB,EAASnxB,KAAKgwB,KAAKvnB,GAAK2oB,EAOzD,IAAK,IAAIt2B,EAAI,EAAGA,EAAIkF,KAAKqxB,WAAYv2B,IAAK,CACxC,IAEIy1B,EACAC,EAHAG,EAAUF,EACVG,EAAUF,EAIVY,EAAST,EACTU,EAAST,EACb,IAAKroB,EAAI,EAAGA,GAAK,EAAGA,IAClB8nB,EAAWI,EAAUF,EAAQG,EAAUF,EACvCF,EAAWI,EAAUH,EAAQE,EAAUD,EACvCC,EAAUJ,EACVK,EAAUJ,EACVc,IAAmB7oB,EAAI,IAAMzI,KAAK8vB,KAAKrnB,GAAKkoB,EAAU3wB,KAAK+vB,KAAKtnB,GAAKmoB,GACrEW,IAAmB9oB,EAAI,IAAMzI,KAAK+vB,KAAKtnB,GAAKkoB,EAAU3wB,KAAK8vB,KAAKrnB,GAAKmoB,GAGvED,EAAU,EACVC,EAAU,EACV,IAAIY,EAASxxB,KAAK8vB,KAAK,GACnB2B,EAASzxB,KAAK+vB,KAAK,GACvB,IAAKtnB,EAAI,EAAGA,GAAK,EAAGA,IAClB8nB,EAAWI,EAAUF,EAAQG,EAAUF,EACvCF,EAAWI,EAAUH,EAAQE,EAAUD,EACvCC,EAAUJ,EACVK,EAAUJ,EACVgB,GAAkB/oB,GAAKzI,KAAK8vB,KAAKrnB,GAAKkoB,EAAU3wB,KAAK+vB,KAAKtnB,GAAKmoB,GAC/Da,GAAkBhpB,GAAKzI,KAAK+vB,KAAKtnB,GAAKkoB,EAAU3wB,KAAK8vB,KAAKrnB,GAAKmoB,GAIjE,IAAIc,EAAOF,EAASA,EAASC,EAASA,EACtChB,GAASa,EAASE,EAASD,EAASE,GAAUC,EAC9ChB,GAASa,EAASC,EAASF,EAASG,GAAUC,EAIhD,IAAIpB,EAAQG,EACRL,EAAWM,EACXiB,EAAU,EAEVxB,EAAQ,EACZ,IAAK1nB,EAAI,EAAGA,GAAK,EAAGA,IAClBkpB,GAAoBrB,EACpBH,GAAgBnwB,KAAKka,EAAEzR,GAAKkpB,EAK9B,IAAIjqB,EAAM1H,KAAK3D,KAAQ8zB,EAAQh3B,EAAa,IACxCsO,EAAMzH,KAAKpD,MAAQwzB,EAKvB,OAHAv0B,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EAEC7L,EAGF,IAAImM,GAAQ,CAAC,uBAAwB,QAC5C,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,ICrNF,SAASd,MAMT,SAASK,GAAQ1L,GACtB,IAAI4L,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAGRod,EAAOjd,GAAWF,EAAMzH,KAAKpD,OAC7B0J,EAAItG,KAAKzC,GAAKyC,KAAKrE,EAAIipB,EACvBpd,EAAIxH,KAAKvC,GAAKuC,KAAKrE,EAAItC,KAAKuL,IAAIvL,KAAKuN,IAAKvN,KAAKC,GAAK,EAAMoO,EAAM,MAAS,KAI7E,OAFA7L,EAAEyK,EAAIA,EACNzK,EAAE2L,EAAIA,EACC3L,EAKF,SAASgM,GAAQhM,GACtBA,EAAEyK,GAAKtG,KAAKzC,GACZ1B,EAAE2L,GAAKxH,KAAKvC,GAEZ,IAAIgK,EAAME,GAAW3H,KAAKpD,MAAQf,EAAEyK,EAAItG,KAAKrE,GACzC+L,EAAM,KAAOrO,KAAK2N,KAAK3N,KAAKyO,IAAI,GAAMjM,EAAE2L,EAAIxH,KAAKrE,IAAMtC,KAAKC,GAAK,GAIrE,OAFAuC,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,EAGF,IAAImM,GAAQ,CAAC,qBAAsB,QAC1C,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,IC/CLsW,GAAW,GAQR,SAASpX,KAKTlH,KAAK0D,QAIR1D,KAAKyI,EAAI,EACTzI,KAAKyV,EAAI,EACTzV,KAAKmH,GAAK,EACVnH,KAAK4xB,IAAMv4B,KAAKgN,MAAMrG,KAAKyV,EAAI,GAAKzV,KAAKyI,GACzCzI,KAAK6xB,IAAM7xB,KAAK4xB,KAAO5xB,KAAKyV,EAAI,IAPhCzV,KAAKme,GAAKO,GAAQ1e,KAAKmH,IAcpB,SAASI,GAAQ1L,GACtB,IAAIyK,EAAGkB,EACHC,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAKZ,GAFAC,EAAME,GAAWF,EAAMzH,KAAKpD,OAExBoD,KAAK0D,OAAQ,CACf,GAAK1D,KAAKyV,EAKR,IADA,IAAI7X,EAAIoC,KAAKyI,EAAIpP,KAAK4N,IAAIS,GACjB5M,EAAIwjB,GAAUxjB,IAAKA,EAAG,CAC7B,IAAI0c,GAAKxX,KAAKyV,EAAI/N,EAAMrO,KAAK4N,IAAIS,GAAO9J,IAAMoC,KAAKyV,EAAIpc,KAAKgO,IAAIK,IAEhE,GADAA,GAAO8P,EACHne,KAAKkN,IAAIiR,GAAK9d,EAChB,WARJgO,EAAiB,IAAX1H,KAAKyI,EAAUpP,KAAKymB,KAAK9f,KAAKyI,EAAIpP,KAAK4N,IAAIS,IAAQA,EAY3DpB,EAAItG,KAAKrE,EAAIqE,KAAK6xB,IAAMpqB,GAAOzH,KAAKyV,EAAIpc,KAAKgO,IAAIK,IACjDF,EAAIxH,KAAKrE,EAAIqE,KAAK4xB,IAAMlqB,MAGrB,CAEH,IAAI8W,EAAInlB,KAAK4N,IAAIS,GACbuX,EAAI5lB,KAAKgO,IAAIK,GACjBF,EAAIxH,KAAKrE,EAAI8iB,GAAQ/W,EAAK8W,EAAGS,EAAGjf,KAAKme,IACrC7X,EAAItG,KAAKrE,EAAI8L,EAAMwX,EAAI5lB,KAAKgN,KAAK,EAAIrG,KAAKmH,GAAKqX,EAAIA,GAKrD,OAFA3iB,EAAEyK,EAAIA,EACNzK,EAAE2L,EAAIA,EACC3L,EAGF,SAASgM,GAAQhM,GACtB,IAAI6L,EAAKkY,EAAMnY,EAAK+W,EAkCpB,OAhCA3iB,EAAEyK,GAAKtG,KAAKzC,GACZkK,EAAM5L,EAAEyK,EAAItG,KAAKrE,EACjBE,EAAE2L,GAAKxH,KAAKvC,GACZiK,EAAM7L,EAAE2L,EAAIxH,KAAKrE,EAEbqE,KAAK0D,QACPgE,GAAO1H,KAAK4xB,IACZnqB,GAAazH,KAAK6xB,KAAO7xB,KAAKyV,EAAIpc,KAAKgO,IAAIK,IACvC1H,KAAKyV,EACP/N,EAAMqnB,IAAO/uB,KAAKyV,EAAI/N,EAAMrO,KAAK4N,IAAIS,IAAQ1H,KAAKyI,GAEhC,IAAXzI,KAAKyI,IACZf,EAAMqnB,GAAM11B,KAAK4N,IAAIS,GAAO1H,KAAKyI,IAEnChB,EAAME,GAAWF,EAAMzH,KAAKpD,OAC5B8K,EAAMukB,GAAWvkB,KAGjBA,EAAM4X,GAAYzjB,EAAE2L,EAAIxH,KAAKrE,EAAGqE,KAAKmH,GAAInH,KAAKme,IAC9CK,EAAInlB,KAAKkN,IAAImB,GACT8W,EAAIplB,GACNolB,EAAInlB,KAAK4N,IAAIS,GACbkY,EAAO5f,KAAKpD,MAAQf,EAAEyK,EAAIjN,KAAKgN,KAAK,EAAIrG,KAAKmH,GAAKqX,EAAIA,IAAMxe,KAAKrE,EAAItC,KAAKgO,IAAIK,IAE9ED,EAAME,GAAWiY,IAETpB,EAAI9kB,EAASN,IACrBqO,EAAMzH,KAAKpD,QAGff,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,EAGF,IAAImM,GAAQ,CAAC,aAAc,QAClC,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,IChHF,SAASd,MAIT,SAASK,GAAQ1L,GAItB,IAAI4L,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAERoX,EAAYjX,GAAWF,EAAMzH,KAAKpD,OAClC8sB,EAAQhiB,EACRtB,EAAM/M,KAAKC,GAAKD,KAAK4N,IAAIS,GAI7B,MAAO,EAAM,CACX,IAAIoqB,IAAgBpI,EAAQrwB,KAAK4N,IAAIyiB,GAAStjB,IAAQ,EAAI/M,KAAKgO,IAAIqiB,IAEnE,GADAA,GAASoI,EACLz4B,KAAKkN,IAAIurB,GAAep4B,EAC1B,MAGJgwB,GAAS,EAKLrwB,KAAKC,GAAK,EAAID,KAAKkN,IAAImB,GAAOhO,IAChCklB,EAAY,GAEd,IAAItY,EAAI,cAAiBtG,KAAKrE,EAAIijB,EAAYvlB,KAAKgO,IAAIqiB,GAAS1pB,KAAKzC,GACjEiK,EAAI,gBAAkBxH,KAAKrE,EAAItC,KAAK4N,IAAIyiB,GAAS1pB,KAAKvC,GAI1D,OAFA5B,EAAEyK,EAAIA,EACNzK,EAAE2L,EAAIA,EACC3L,EAGF,SAASgM,GAAQhM,GACtB,IAAI6tB,EACAnL,EAIJ1iB,EAAEyK,GAAKtG,KAAKzC,GACZ1B,EAAE2L,GAAKxH,KAAKvC,GACZ8gB,EAAM1iB,EAAE2L,GAAK,gBAAkBxH,KAAKrE,GAKhCtC,KAAKkN,IAAIgY,GAAO,gBAClBA,EAAM,eAERmL,EAAQrwB,KAAKymB,KAAKvB,GAClB,IAAI9W,EAAME,GAAW3H,KAAKpD,MAASf,EAAEyK,GAAK,cAAiBtG,KAAKrE,EAAItC,KAAKgO,IAAIqiB,KACzEjiB,GAAQpO,KAAKC,KACfmO,GAAOpO,KAAKC,IAEVmO,EAAMpO,KAAKC,KACbmO,EAAMpO,KAAKC,IAEbilB,GAAO,EAAImL,EAAQrwB,KAAK4N,IAAI,EAAIyiB,IAAUrwB,KAAKC,GAC3CD,KAAKkN,IAAIgY,GAAO,IAClBA,EAAM,GAER,IAAI7W,EAAMrO,KAAKymB,KAAKvB,GAIpB,OAFA1iB,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,EAGF,IAAImM,GAAQ,CAAC,YAAa,QACjC,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,ICtEF,SAASd,KAKV7N,KAAKkN,IAAIvG,KAAKzD,KAAOyD,KAAKvD,MAAQ/C,IAGtCsG,KAAKvD,KAAOuD,KAAKvD,MAAQuD,KAAKzD,KAC9ByD,KAAK4f,KAAO5f,KAAKnC,EAAImC,KAAKrE,EAC1BqE,KAAKmH,GAAK,EAAI9N,KAAKsN,IAAI3G,KAAK4f,KAAM,GAClC5f,KAAKoH,EAAI/N,KAAKgN,KAAKrG,KAAKmH,IACxBnH,KAAK4qB,GAAKE,GAAK9qB,KAAKmH,IACpBnH,KAAKqa,GAAK0Q,GAAK/qB,KAAKmH,IACpBnH,KAAKqlB,GAAK2F,GAAKhrB,KAAKmH,IACpBnH,KAAK6qB,GAAKI,GAAKjrB,KAAKmH,IAEpBnH,KAAKkG,OAAS7M,KAAK4N,IAAIjH,KAAKzD,MAC5ByD,KAAKmG,OAAS9M,KAAKgO,IAAIrH,KAAKzD,MAE5ByD,KAAKmkB,IAAM7c,GAAMtH,KAAKoH,EAAGpH,KAAKkG,OAAQlG,KAAKmG,QAC3CnG,KAAK0rB,IAAMR,GAAKlrB,KAAK4qB,GAAI5qB,KAAKqa,GAAIra,KAAKqlB,GAAIrlB,KAAK6qB,GAAI7qB,KAAKzD,MAErDlD,KAAKkN,IAAIvG,KAAKzD,KAAOyD,KAAKvD,MAAQ/C,EACpCsG,KAAKupB,GAAKvpB,KAAKkG,QAGflG,KAAKkG,OAAS7M,KAAK4N,IAAIjH,KAAKvD,MAC5BuD,KAAKmG,OAAS9M,KAAKgO,IAAIrH,KAAKvD,MAC5BuD,KAAKopB,IAAM9hB,GAAMtH,KAAKoH,EAAGpH,KAAKkG,OAAQlG,KAAKmG,QAC3CnG,KAAK+xB,IAAM7G,GAAKlrB,KAAK4qB,GAAI5qB,KAAKqa,GAAIra,KAAKqlB,GAAIrlB,KAAK6qB,GAAI7qB,KAAKvD,MACzDuD,KAAKupB,IAAMvpB,KAAKmkB,IAAMnkB,KAAKopB,MAAQppB,KAAK+xB,IAAM/xB,KAAK0rB,MAErD1rB,KAAK2f,EAAI3f,KAAK0rB,IAAM1rB,KAAKmkB,IAAMnkB,KAAKupB,GACpCvpB,KAAK2e,IAAMuM,GAAKlrB,KAAK4qB,GAAI5qB,KAAKqa,GAAIra,KAAKqlB,GAAIrlB,KAAK6qB,GAAI7qB,KAAK3D,MACzD2D,KAAKykB,GAAKzkB,KAAKrE,GAAKqE,KAAK2f,EAAI3f,KAAK2e,MAK7B,SAASpX,GAAQ1L,GACtB,IAEI4tB,EAFAhiB,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAKZ,GAAIxH,KAAK0D,OACP+lB,EAAMzpB,KAAKrE,GAAKqE,KAAK2f,EAAIjY,OAEtB,CACH,IAAI0X,EAAK8L,GAAKlrB,KAAK4qB,GAAI5qB,KAAKqa,GAAIra,KAAKqlB,GAAIrlB,KAAK6qB,GAAInjB,GAClD+hB,EAAMzpB,KAAKrE,GAAKqE,KAAK2f,EAAIP,GAE3B,IAAIsK,EAAQ1pB,KAAKupB,GAAK5hB,GAAWF,EAAMzH,KAAKpD,OACxC0J,EAAItG,KAAKzC,GAAKksB,EAAMpwB,KAAK4N,IAAIyiB,GAC7BliB,EAAIxH,KAAKvC,GAAKuC,KAAKykB,GAAKgF,EAAMpwB,KAAKgO,IAAIqiB,GAG3C,OAFA7tB,EAAEyK,EAAIA,EACNzK,EAAE2L,EAAIA,EACC3L,EAKF,SAASgM,GAAQhM,GAGtB,IAAIuK,EAAKqjB,EAAK/hB,EAAKD,EAFnB5L,EAAEyK,GAAKtG,KAAKzC,GACZ1B,EAAE2L,EAAIxH,KAAKykB,GAAK5oB,EAAE2L,EAAIxH,KAAKvC,GAEvBuC,KAAKupB,IAAM,GACbE,EAAMpwB,KAAKgN,KAAKxK,EAAEyK,EAAIzK,EAAEyK,EAAIzK,EAAE2L,EAAI3L,EAAE2L,GACpCpB,EAAM,IAGNqjB,GAAOpwB,KAAKgN,KAAKxK,EAAEyK,EAAIzK,EAAEyK,EAAIzK,EAAE2L,EAAI3L,EAAE2L,GACrCpB,GAAO,GAET,IAAIsjB,EAAQ,EAKZ,GAJY,IAARD,IACFC,EAAQrwB,KAAKwY,MAAMzL,EAAMvK,EAAEyK,EAAGF,EAAMvK,EAAE2L,IAGpCxH,KAAK0D,OAKP,OAJA+D,EAAME,GAAW3H,KAAKpD,MAAQ8sB,EAAQ1pB,KAAKupB,IAC3C7hB,EAAMukB,GAAWjsB,KAAK2f,EAAI8J,EAAMzpB,KAAKrE,GACrCE,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,EAGP,IAAIujB,EAAKpf,KAAK2f,EAAI8J,EAAMzpB,KAAKrE,EAK7B,OAJA+L,EAAMikB,GAAMvM,EAAIpf,KAAK4qB,GAAI5qB,KAAKqa,GAAIra,KAAKqlB,GAAIrlB,KAAK6qB,IAChDpjB,EAAME,GAAW3H,KAAKpD,MAAQ8sB,EAAQ1pB,KAAKupB,IAC3C1tB,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,EAKJ,IAAImM,GAAQ,CAAC,oBAAqB,QACzC,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,IC3GF,SAASd,KAEdlH,KAAKslB,EAAItlB,KAAKrE,EAGT,SAAS4L,GAAQ1L,GAEtB,IAMIyK,EAAGkB,EANHC,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAIRod,EAAOjd,GAAWF,EAAMzH,KAAKpD,OAG7BvD,KAAKkN,IAAImB,IAAQhO,IACnB4M,EAAItG,KAAKzC,GAAKyC,KAAKslB,EAAIV,EACvBpd,EAAIxH,KAAKvC,IAEX,IAAIisB,EAAQqF,GAAM,EAAI11B,KAAKkN,IAAImB,EAAMrO,KAAKC,MACrCD,KAAKkN,IAAIqe,IAASlrB,GAAWL,KAAKkN,IAAIlN,KAAKkN,IAAImB,GAAOtO,IAAYM,KACrE4M,EAAItG,KAAKzC,GAEPiK,EADEE,GAAO,EACL1H,KAAKvC,GAAKpE,KAAKC,GAAK0G,KAAKslB,EAAIjsB,KAAKuN,IAAI,GAAM8iB,GAG5C1pB,KAAKvC,GAAKpE,KAAKC,GAAK0G,KAAKslB,GAAKjsB,KAAKuN,IAAI,GAAM8iB,IAIrD,IAAI3K,EAAK,GAAM1lB,KAAKkN,IAAKlN,KAAKC,GAAKsrB,EAASA,EAAOvrB,KAAKC,IACpDiyB,EAAMxM,EAAKA,EACXiT,EAAQ34B,KAAK4N,IAAIyiB,GACjBuI,EAAQ54B,KAAKgO,IAAIqiB,GAEjB/J,EAAIsS,GAASD,EAAQC,EAAQ,GAC7BC,EAAMvS,EAAIA,EACVlK,EAAIkK,GAAK,EAAIqS,EAAQ,GACrBG,EAAM1c,EAAIA,EACVrP,EAAM/M,KAAKC,GAAK0G,KAAKslB,GAAKvG,GAAMY,EAAIwS,GAAO94B,KAAKgN,KAAKklB,GAAO5L,EAAIwS,IAAQxS,EAAIwS,IAAQA,EAAM5G,IAAQ2G,EAAMC,MAAUA,EAAM5G,GACxH3G,EAAO,IACTxe,GAAOA,GAETE,EAAItG,KAAKzC,GAAK6I,EAEd,IAAI+mB,EAAI5B,EAAM5L,EAYd,OAXAvZ,EAAM/M,KAAKC,GAAK0G,KAAKslB,GAAK7P,EAAI0X,EAAIpO,EAAK1lB,KAAKgN,MAAM8rB,EAAM5G,IAAQA,EAAM,GAAK4B,EAAIA,KAAOgF,EAAM5G,GAG1F/jB,EAFEE,GAAO,EAEL1H,KAAKvC,GAAK2I,EAIVpG,KAAKvC,GAAK2I,EAEhBvK,EAAEyK,EAAIA,EACNzK,EAAE2L,EAAIA,EACC3L,EAKF,SAASgM,GAAQhM,GACtB,IAAI4L,EAAKC,EACL0qB,EAAIC,EAAIC,EAAKC,EAAIC,EAAIC,EACrBC,EACAC,EACAvsB,EACAwsB,EACApT,EA0CJ,OAtCA3jB,EAAEyK,GAAKtG,KAAKzC,GACZ1B,EAAE2L,GAAKxH,KAAKvC,GACZ2I,EAAM/M,KAAKC,GAAK0G,KAAKslB,EACrB8M,EAAKv2B,EAAEyK,EAAIF,EACXisB,EAAKx2B,EAAE2L,EAAIpB,EACXksB,EAAMF,EAAKA,EAAKC,EAAKA,EACrBE,GAAMl5B,KAAKkN,IAAI8rB,IAAO,EAAIC,GAC1BE,EAAKD,EAAK,EAAIF,EAAKA,EAAKD,EAAKA,EAC7BK,GAAM,EAAIF,EAAK,EAAI,EAAIF,EAAKA,EAAKC,EAAMA,EACvC9S,EAAI6S,EAAKA,EAAKI,GAAM,EAAID,EAAKA,EAAKA,EAAKC,EAAKA,EAAKA,EAAK,EAAIF,EAAKC,EAAKC,EAAKA,GAAM,GAC/EC,GAAMH,EAAKC,EAAKA,EAAK,EAAIC,GAAMA,EAC/BE,EAAK,EAAIt5B,KAAKgN,MAAMqsB,EAAK,GACzBtsB,EAAQ,EAAIoZ,EAAKkT,EAAMC,EACnBt5B,KAAKkN,IAAIH,GAAO,IAEhBA,EADEA,GAAO,EACH,GAGC,GAGXwsB,EAAMv5B,KAAKgmB,KAAKjZ,GAAO,EAErBsB,EADE7L,EAAE2L,GAAK,IACDmrB,EAAKt5B,KAAKgO,IAAIurB,EAAMv5B,KAAKC,GAAK,GAAKk5B,EAAK,EAAIC,GAAMp5B,KAAKC,MAGtDq5B,EAAKt5B,KAAKgO,IAAIurB,EAAMv5B,KAAKC,GAAK,GAAKk5B,EAAK,EAAIC,GAAMp5B,KAAKC,GAIhEmO,EADEpO,KAAKkN,IAAI6rB,GAAM14B,EACXsG,KAAKpD,MAGL+K,GAAW3H,KAAKpD,MAAQvD,KAAKC,IAAMg5B,EAAM,EAAIj5B,KAAKgN,KAAK,EAAI,GAAK+rB,EAAKA,EAAKC,EAAKA,GAAMC,EAAMA,IAAQ,EAAIF,GAG/Gv2B,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,EAGF,IAAImM,GAAQ,CAAC,oBAAqB,gBAAiB,SAC1D,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,ICjHF,SAASd,KACdlH,KAAK6yB,QAAUx5B,KAAK4N,IAAIjH,KAAK3D,MAC7B2D,KAAK8yB,QAAUz5B,KAAKgO,IAAIrH,KAAK3D,MAGxB,SAASkL,GAAQ1L,GACtB,IAKI+uB,EAAIvQ,EAAIgL,EAAIwF,EAAIkI,EAAKC,EAAItD,EAAQuD,EAAKC,EAAIC,EAAKC,EAAIC,EAAG3M,EAAG4M,EAAIC,EAAItU,EAAGuU,EAAIC,EAAOjV,EAAGkV,EAAIC,EAAIC,EAAIC,EAL9FpsB,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EACRtB,EAAS7M,KAAK4N,IAAIpL,EAAE2L,GACpBrB,EAAS9M,KAAKgO,IAAIxL,EAAE2L,GACpBod,EAAOjd,GAAWF,EAAMzH,KAAKpD,OAEjC,OAAIoD,KAAK0D,OACHrK,KAAKkN,IAAIvG,KAAK6yB,QAAU,IAAMn5B,GAEhCmC,EAAEyK,EAAItG,KAAKzC,GAAKyC,KAAKrE,GAAKvC,EAAUsO,GAAOrO,KAAK4N,IAAI2d,GACpD/oB,EAAE2L,EAAIxH,KAAKvC,GAAKuC,KAAKrE,GAAKvC,EAAUsO,GAAOrO,KAAKgO,IAAIud,GAC7C/oB,GAEAxC,KAAKkN,IAAIvG,KAAK6yB,QAAU,IAAMn5B,GAErCmC,EAAEyK,EAAItG,KAAKzC,GAAKyC,KAAKrE,GAAKvC,EAAUsO,GAAOrO,KAAK4N,IAAI2d,GACpD/oB,EAAE2L,EAAIxH,KAAKvC,GAAKuC,KAAKrE,GAAKvC,EAAUsO,GAAOrO,KAAKgO,IAAIud,GAC7C/oB,IAIP43B,EAAQzzB,KAAK6yB,QAAU3sB,EAASlG,KAAK8yB,QAAU3sB,EAAS9M,KAAKgO,IAAIud,GACjE3F,EAAI5lB,KAAKgmB,KAAKoU,GACdD,EAAKvU,EAAIA,EAAI5lB,KAAK4N,IAAIgY,GAAK,EAC3BpjB,EAAEyK,EAAItG,KAAKzC,GAAKyC,KAAKrE,EAAI63B,EAAKrtB,EAAS9M,KAAK4N,IAAI2d,GAChD/oB,EAAE2L,EAAIxH,KAAKvC,GAAKuC,KAAKrE,EAAI63B,GAAMxzB,KAAK8yB,QAAU5sB,EAASlG,KAAK6yB,QAAU1sB,EAAS9M,KAAKgO,IAAIud,IACjF/oB,IAIT+uB,EAAKE,GAAK9qB,KAAKmH,IACfkT,EAAK0Q,GAAK/qB,KAAKmH,IACfke,EAAK2F,GAAKhrB,KAAKmH,IACf0jB,EAAKI,GAAKjrB,KAAKmH,IACX9N,KAAKkN,IAAIvG,KAAK6yB,QAAU,IAAMn5B,GAEhCq5B,EAAM/yB,KAAKrE,EAAIuvB,GAAKN,EAAIvQ,EAAIgL,EAAIwF,EAAIzxB,GACpC45B,EAAKhzB,KAAKrE,EAAIuvB,GAAKN,EAAIvQ,EAAIgL,EAAIwF,EAAInjB,GACnC7L,EAAEyK,EAAItG,KAAKzC,IAAMw1B,EAAMC,GAAM35B,KAAK4N,IAAI2d,GACtC/oB,EAAE2L,EAAIxH,KAAKvC,IAAMs1B,EAAMC,GAAM35B,KAAKgO,IAAIud,GAC/B/oB,GAEAxC,KAAKkN,IAAIvG,KAAK6yB,QAAU,IAAMn5B,GAErCq5B,EAAM/yB,KAAKrE,EAAIuvB,GAAKN,EAAIvQ,EAAIgL,EAAIwF,EAAIzxB,GACpC45B,EAAKhzB,KAAKrE,EAAIuvB,GAAKN,EAAIvQ,EAAIgL,EAAIwF,EAAInjB,GACnC7L,EAAEyK,EAAItG,KAAKzC,IAAMw1B,EAAMC,GAAM35B,KAAK4N,IAAI2d,GACtC/oB,EAAE2L,EAAIxH,KAAKvC,IAAMs1B,EAAMC,GAAM35B,KAAKgO,IAAIud,GAC/B/oB,IAIP6zB,EAASxpB,EAASC,EAClB8sB,EAAM5H,GAAGrrB,KAAKrE,EAAGqE,KAAKoH,EAAGpH,KAAK6yB,SAC9BK,EAAK7H,GAAGrrB,KAAKrE,EAAGqE,KAAKoH,EAAGlB,GACxBitB,EAAM95B,KAAK2N,MAAM,EAAIhH,KAAKmH,IAAMuoB,EAAS1vB,KAAKmH,GAAK8rB,EAAMjzB,KAAK6yB,SAAWK,EAAK/sB,IAC9EitB,EAAK/5B,KAAKwY,MAAMxY,KAAK4N,IAAI2d,GAAO5kB,KAAK8yB,QAAUz5B,KAAKuN,IAAIusB,GAAOnzB,KAAK6yB,QAAUx5B,KAAKgO,IAAIud,IAErFpG,EADS,IAAP4U,EACE/5B,KAAKymB,KAAK9f,KAAK8yB,QAAUz5B,KAAK4N,IAAIksB,GAAOnzB,KAAK6yB,QAAUx5B,KAAKgO,IAAI8rB,IAE9D95B,KAAKkN,IAAIlN,KAAKkN,IAAI6sB,GAAM/5B,KAAKC,KAAOI,GACtCL,KAAKymB,KAAK9f,KAAK8yB,QAAUz5B,KAAK4N,IAAIksB,GAAOnzB,KAAK6yB,QAAUx5B,KAAKgO,IAAI8rB,IAGlE95B,KAAKymB,KAAKzmB,KAAK4N,IAAI2d,GAAQvrB,KAAKgO,IAAI8rB,GAAO95B,KAAK4N,IAAImsB,IAE1DC,EAAIrzB,KAAKoH,EAAIpH,KAAK6yB,QAAUx5B,KAAKgN,KAAK,EAAIrG,KAAKmH,IAC/Cuf,EAAI1mB,KAAKoH,EAAIpH,KAAK8yB,QAAUz5B,KAAKgO,IAAI+rB,GAAM/5B,KAAKgN,KAAK,EAAIrG,KAAKmH,IAC9DmsB,EAAKD,EAAI3M,EACT6M,EAAK7M,EAAIA,EACTgN,EAAKlV,EAAIA,EACTmV,EAAKD,EAAKlV,EACVoV,EAAKD,EAAKnV,EACVqV,EAAKD,EAAKpV,EACVS,EAAIgU,EAAMzU,GAAK,EAAIkV,EAAKH,GAAM,EAAIA,GAAM,EAAII,EAAK,EAAIL,GAAM,EAAI,EAAIC,GAAMK,EAAK,KAAOL,GAAM,EAAI,EAAIA,GAAM,EAAIF,EAAIA,GAAK,EAAI,EAAIE,IAAOM,EAAK,GAAKP,GAC/Iz3B,EAAEyK,EAAItG,KAAKzC,GAAK0hB,EAAI5lB,KAAK4N,IAAImsB,GAC7Bv3B,EAAE2L,EAAIxH,KAAKvC,GAAKwhB,EAAI5lB,KAAKgO,IAAI+rB,GACtBv3B,IAON,SAASgM,GAAQhM,GAGtB,IAAI4oB,EAAIlU,EAAGmd,EAAMD,EAAMhmB,EAAKC,EAAKtB,EAAKwkB,EAAIvQ,EAAIgL,EAAIwF,EAAIkI,EAAKja,EAAGgB,EAAIqZ,EAAKC,EAAIU,EAAOtR,EAAKnL,EAAG+I,EAAGlG,EAAG6Z,EAAItN,EAAGuN,EACvG,GAHAn4B,EAAEyK,GAAKtG,KAAKzC,GACZ1B,EAAE2L,GAAKxH,KAAKvC,GAERuC,KAAK0D,OAAQ,CAEf,GADA+gB,EAAKprB,KAAKgN,KAAKxK,EAAEyK,EAAIzK,EAAEyK,EAAIzK,EAAE2L,EAAI3L,EAAE2L,GAC/Bid,EAAM,EAAIrrB,EAAU4G,KAAKrE,EAC3B,OAoCF,OAlCA4U,EAAIkU,EAAKzkB,KAAKrE,EAEd+xB,EAAOr0B,KAAK4N,IAAIsJ,GAChBkd,EAAOp0B,KAAKgO,IAAIkJ,GAEhB9I,EAAMzH,KAAKpD,MACPvD,KAAKkN,IAAIke,IAAO/qB,EAClBgO,EAAM1H,KAAK3D,MAGXqL,EAAMqnB,GAAMtB,EAAOztB,KAAK6yB,QAAWh3B,EAAE2L,EAAIkmB,EAAO1tB,KAAK8yB,QAAWrO,GAChEre,EAAM/M,KAAKkN,IAAIvG,KAAK3D,MAAQjD,EAGxBqO,EAFApO,KAAKkN,IAAIH,IAAQ1M,EACfsG,KAAK3D,MAAQ,EACTsL,GAAW3H,KAAKpD,MAAQvD,KAAKwY,MAAMhW,EAAEyK,GAAKzK,EAAE2L,IAG5CG,GAAW3H,KAAKpD,MAAQvD,KAAKwY,OAAOhW,EAAEyK,EAAGzK,EAAE2L,IAW7CG,GAAW3H,KAAKpD,MAAQvD,KAAKwY,MAAMhW,EAAEyK,EAAIonB,EAAMjJ,EAAKzkB,KAAK8yB,QAAUrF,EAAO5xB,EAAE2L,EAAIxH,KAAK6yB,QAAUnF,KAIzG7xB,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,EAOP,OAJA+uB,EAAKE,GAAK9qB,KAAKmH,IACfkT,EAAK0Q,GAAK/qB,KAAKmH,IACfke,EAAK2F,GAAKhrB,KAAKmH,IACf0jB,EAAKI,GAAKjrB,KAAKmH,IACX9N,KAAKkN,IAAIvG,KAAK6yB,QAAU,IAAMn5B,GAEhCq5B,EAAM/yB,KAAKrE,EAAIuvB,GAAKN,EAAIvQ,EAAIgL,EAAIwF,EAAIzxB,GACpCqrB,EAAKprB,KAAKgN,KAAKxK,EAAEyK,EAAIzK,EAAEyK,EAAIzK,EAAE2L,EAAI3L,EAAE2L,GACnCsR,EAAIia,EAAMtO,EACV/c,EAAMikB,GAAM7S,EAAI9Y,KAAKrE,EAAGivB,EAAIvQ,EAAIgL,EAAIwF,GACpCpjB,EAAME,GAAW3H,KAAKpD,MAAQvD,KAAKwY,MAAMhW,EAAEyK,GAAK,EAAIzK,EAAE2L,IACtD3L,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,GAEAxC,KAAKkN,IAAIvG,KAAK6yB,QAAU,IAAMn5B,GAErCq5B,EAAM/yB,KAAKrE,EAAIuvB,GAAKN,EAAIvQ,EAAIgL,EAAIwF,EAAIzxB,GACpCqrB,EAAKprB,KAAKgN,KAAKxK,EAAEyK,EAAIzK,EAAEyK,EAAIzK,EAAE2L,EAAI3L,EAAE2L,GACnCsR,EAAI2L,EAAKsO,EAETrrB,EAAMikB,GAAM7S,EAAI9Y,KAAKrE,EAAGivB,EAAIvQ,EAAIgL,EAAIwF,GACpCpjB,EAAME,GAAW3H,KAAKpD,MAAQvD,KAAKwY,MAAMhW,EAAEyK,EAAGzK,EAAE2L,IAChD3L,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,IAIP4oB,EAAKprB,KAAKgN,KAAKxK,EAAEyK,EAAIzK,EAAEyK,EAAIzK,EAAE2L,EAAI3L,EAAE2L,GACnC4rB,EAAK/5B,KAAKwY,MAAMhW,EAAEyK,EAAGzK,EAAE2L,GACvBsS,EAAKuR,GAAGrrB,KAAKrE,EAAGqE,KAAKoH,EAAGpH,KAAK6yB,SAC7BiB,EAAQz6B,KAAKgO,IAAI+rB,GACjB5Q,EAAMxiB,KAAKoH,EAAIpH,KAAK8yB,QAAUgB,EAC9Bzc,GAAKmL,EAAMA,GAAO,EAAIxiB,KAAKmH,IAC3BiZ,EAAI,EAAIpgB,KAAKmH,IAAM,EAAIkQ,GAAKrX,KAAK6yB,QAAU7yB,KAAK8yB,QAAUgB,GAAS,EAAI9zB,KAAKmH,IAC5E+S,EAAIuK,EAAK3K,EACTia,EAAK7Z,EAAI7C,GAAK,EAAIA,GAAKhe,KAAKsN,IAAIuT,EAAG,GAAK,EAAIkG,GAAK,EAAI,EAAI/I,GAAKhe,KAAKsN,IAAIuT,EAAG,GAAK,GAC/EuM,EAAI,EAAIpP,EAAI0c,EAAKA,EAAK,EAAI7Z,EAAI6Z,EAAKA,EAAKA,EAAK,EAC7CZ,EAAM95B,KAAKymB,KAAK9f,KAAK6yB,QAAUx5B,KAAKgO,IAAI0sB,GAAM/zB,KAAK8yB,QAAUz5B,KAAK4N,IAAI8sB,GAAMD,GAC5ErsB,EAAME,GAAW3H,KAAKpD,MAAQvD,KAAKymB,KAAKzmB,KAAK4N,IAAImsB,GAAM/5B,KAAK4N,IAAI8sB,GAAM16B,KAAKgO,IAAI8rB,KAC/Ea,EAAS36B,KAAK4N,IAAIksB,GAClBzrB,EAAMrO,KAAKwY,OAAOmiB,EAASh0B,KAAKmH,GAAKsf,EAAIzmB,KAAK6yB,SAAWx5B,KAAKuN,IAAIusB,GAAMa,GAAU,EAAIh0B,KAAKmH,KAC3FtL,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,GAMN,IAAImM,GAAQ,CAAC,wBAAyB,QAC7C,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,IC1MF,SAASd,KAKdlH,KAAKivB,QAAU51B,KAAK4N,IAAIjH,KAAK3D,MAC7B2D,KAAKkvB,QAAU71B,KAAKgO,IAAIrH,KAAK3D,MAKxB,SAASkL,GAAQ1L,GACtB,IAAIqK,EAAQC,EACRye,EACAwK,EACAC,EACA1P,EAAGrZ,EAAGkB,EACNC,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAiBZ,OAdAod,EAAOjd,GAAWF,EAAMzH,KAAKpD,OAE7BsJ,EAAS7M,KAAK4N,IAAIS,GAClBvB,EAAS9M,KAAKgO,IAAIK,GAElB0nB,EAAS/1B,KAAKgO,IAAIud,GAClBjF,EAAI3f,KAAKivB,QAAU/oB,EAASlG,KAAKkvB,QAAU/oB,EAASipB,EACpDC,EAAM,GACD1P,EAAI,GAAOtmB,KAAKkN,IAAIoZ,IAAMjmB,KAC7B4M,EAAItG,KAAKrE,EAAI0zB,EAAMlpB,EAAS9M,KAAK4N,IAAI2d,GACrCpd,EAAIxH,KAAKvC,GAAKuC,KAAKrE,EAAI0zB,GAAOrvB,KAAKkvB,QAAUhpB,EAASlG,KAAKivB,QAAU9oB,EAASipB,IAEhFvzB,EAAEyK,EAAIA,EACNzK,EAAE2L,EAAIA,EACC3L,EAGF,SAASgM,GAAQhM,GACtB,IAAI4oB,EACAlU,EACAmd,EAAMD,EACNrnB,EACAqB,EAAKC,EAYT,OATA7L,EAAEyK,GAAKtG,KAAKzC,GACZ1B,EAAE2L,GAAKxH,KAAKvC,GACZgnB,EAAKprB,KAAKgN,KAAKxK,EAAEyK,EAAIzK,EAAEyK,EAAIzK,EAAE2L,EAAI3L,EAAE2L,GACnC+I,EAAIwe,GAAMtK,EAAKzkB,KAAKrE,GAEpB+xB,EAAOr0B,KAAK4N,IAAIsJ,GAChBkd,EAAOp0B,KAAKgO,IAAIkJ,GAEhB9I,EAAMzH,KAAKpD,MACPvD,KAAKkN,IAAIke,IAAO/qB,GAClBgO,EAAM1H,KAAK3D,KACXR,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,IAET6L,EAAMqnB,GAAMtB,EAAOztB,KAAKivB,QAAWpzB,EAAE2L,EAAIkmB,EAAO1tB,KAAKkvB,QAAWzK,GAChEre,EAAM/M,KAAKkN,IAAIvG,KAAK3D,MAAQjD,EACxBC,KAAKkN,IAAIH,IAAQ1M,GAEjB+N,EADEzH,KAAK3D,MAAQ,EACTsL,GAAW3H,KAAKpD,MAAQvD,KAAKwY,MAAMhW,EAAEyK,GAAKzK,EAAE2L,IAG5CG,GAAW3H,KAAKpD,MAAQvD,KAAKwY,OAAOhW,EAAEyK,EAAGzK,EAAE2L,IAEnD3L,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,IAET4L,EAAME,GAAW3H,KAAKpD,MAAQvD,KAAKwY,MAAOhW,EAAEyK,EAAIonB,EAAOjJ,EAAKzkB,KAAKkvB,QAAUzB,EAAO5xB,EAAE2L,EAAIxH,KAAKivB,QAAUvB,IACvG7xB,EAAEyK,EAAImB,EACN5L,EAAE2L,EAAIE,EACC7L,IAGF,IAAImM,GAAQ,CAAC,SACpB,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,ICnFLisB,GAAY,CACZC,MAAO,EACPC,MAAO,EACPC,KAAM,EACNC,KAAM,EACNC,IAAK,EACLC,OAAQ,GAGRC,GAAY,CACZC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,GAGL,SAAS1tB,KAEdlH,KAAKzC,GAAKyC,KAAKzC,IAAM,EACrByC,KAAKvC,GAAKuC,KAAKvC,IAAM,EACrBuC,KAAK3D,KAAO2D,KAAK3D,MAAQ,EACzB2D,KAAKpD,MAAQoD,KAAKpD,OAAS,EAC3BoD,KAAKtD,OAASsD,KAAKtD,QAAU,EAC7BsD,KAAKwjB,MAAQxjB,KAAKwjB,OAAS,mCAGvBxjB,KAAK3D,MAAQjD,EAAUS,EAAS,EAClCmG,KAAK60B,KAAOZ,GAAUK,IACbt0B,KAAK3D,QAAUjD,EAAUS,EAAS,GAC3CmG,KAAK60B,KAAOZ,GAAUM,OACbl7B,KAAKkN,IAAIvG,KAAKpD,QAAU/C,EACjCmG,KAAK60B,KAAOZ,GAAUC,MACb76B,KAAKkN,IAAIvG,KAAKpD,QAAUxD,EAAUS,EAC3CmG,KAAK60B,KAAO70B,KAAKpD,MAAQ,EAAMq3B,GAAUE,MAAQF,GAAUI,KAE3Dr0B,KAAK60B,KAAOZ,GAAUG,KAKR,IAAZp0B,KAAKmH,KACPnH,KAAK80B,YAAc,GAAK90B,KAAKrE,EAAIqE,KAAKnC,GAAKmC,KAAKrE,EAChDqE,KAAK+0B,oBAAsB/0B,KAAK80B,YAAc90B,KAAK80B,aAMhD,SAASvtB,GAAQ1L,GACtB,IACI6L,EAAKD,EACLiiB,EAAOjjB,EACP0N,EAAGgG,EAHH6a,EAAK,CAAC1uB,EAAG,EAAGkB,EAAG,GAKfytB,EAAO,CAACr0B,MAAO,GAoBnB,GAjBA/E,EAAEyK,GAAKtG,KAAKpD,MAMV8K,EADc,IAAZ1H,KAAKmH,GACD9N,KAAK2N,KAAKhH,KAAK+0B,oBAAsB17B,KAAKuN,IAAI/K,EAAE2L,IAEhD3L,EAAE2L,EAQVC,EAAM5L,EAAEyK,EACJtG,KAAK60B,OAASZ,GAAUK,IAC1B7tB,EAAMrN,EAAUsO,EACZD,GAAO5N,GAAU4N,GAAOrO,EAAUS,GACpCo7B,EAAKr0B,MAAQ4zB,GAAUC,OACvB/K,EAAQjiB,EAAMrO,GACLqO,EAAMrO,EAAUS,GAAU4N,KAASrO,EAAUS,IACtDo7B,EAAKr0B,MAAQ4zB,GAAUE,OACvBhL,EAASjiB,EAAM,EAAMA,EAAM1N,EAAM0N,EAAM1N,GAC9B0N,IAAQrO,EAAUS,IAAW4N,IAAQ5N,GAC9Co7B,EAAKr0B,MAAQ4zB,GAAUG,OACvBjL,EAAQjiB,EAAMrO,IAEd67B,EAAKr0B,MAAQ4zB,GAAUI,OACvBlL,EAAQjiB,QAEL,GAAIzH,KAAK60B,OAASZ,GAAUM,OACjC9tB,EAAMrN,EAAUsO,EACZD,GAAO5N,GAAU4N,GAAOrO,EAAUS,GACpCo7B,EAAKr0B,MAAQ4zB,GAAUC,OACvB/K,GAASjiB,EAAMrO,GACNqO,EAAM5N,GAAU4N,IAAQ5N,GACjCo7B,EAAKr0B,MAAQ4zB,GAAUE,OACvBhL,GAASjiB,GACAA,GAAO5N,GAAU4N,KAASrO,EAAUS,IAC7Co7B,EAAKr0B,MAAQ4zB,GAAUG,OACvBjL,GAASjiB,EAAMrO,IAEf67B,EAAKr0B,MAAQ4zB,GAAUI,OACvBlL,EAASjiB,EAAM,GAAOA,EAAM1N,GAAO0N,EAAM1N,OAEtC,CACL,IAAIozB,EAAGnf,EAAGwQ,EACNkG,EAAQC,EACRuQ,EAAQ9F,EAERpvB,KAAK60B,OAASZ,GAAUE,MAC1B1sB,EAAM0tB,GAAqB1tB,GAAMrO,GACxB4G,KAAK60B,OAASZ,GAAUG,KACjC3sB,EAAM0tB,GAAqB1tB,GAAM1N,GACxBiG,KAAK60B,OAASZ,GAAUI,OACjC5sB,EAAM0tB,GAAqB1tB,GAAMrO,IAEnCsrB,EAASrrB,KAAK4N,IAAIS,GAClBid,EAAStrB,KAAKgO,IAAIK,GAClBwtB,EAAS77B,KAAK4N,IAAIQ,GAClB2nB,EAAS/1B,KAAKgO,IAAII,GAClB0lB,EAAIxI,EAASyK,EACbphB,EAAI2W,EAASuQ,EACb1W,EAAIkG,EAEA1kB,KAAK60B,OAASZ,GAAUC,OAC1BztB,EAAMpN,KAAKgmB,KAAK8N,GAChBzD,EAAQ0L,GAAyB3uB,EAAK+X,EAAGxQ,EAAGinB,IACnCj1B,KAAK60B,OAASZ,GAAUE,OACjC1tB,EAAMpN,KAAKgmB,KAAKrR,GAChB0b,EAAQ0L,GAAyB3uB,EAAK+X,GAAI2O,EAAG8H,IACpCj1B,KAAK60B,OAASZ,GAAUG,MACjC3tB,EAAMpN,KAAKgmB,MAAM8N,GACjBzD,EAAQ0L,GAAyB3uB,EAAK+X,GAAIxQ,EAAGinB,IACpCj1B,KAAK60B,OAASZ,GAAUI,MACjC5tB,EAAMpN,KAAKgmB,MAAMrR,GACjB0b,EAAQ0L,GAAyB3uB,EAAK+X,EAAG2O,EAAG8H,KAG5CxuB,EAAMijB,EAAQ,EACduL,EAAKr0B,MAAQ4zB,GAAUC,QA2B3B,OApBAta,EAAK9gB,KAAK2N,KAAM,GAAKjN,GAAQ2vB,EAAQrwB,KAAKgmB,KAAKhmB,KAAK4N,IAAIyiB,GAASrwB,KAAKgO,IAAIxN,IAAWT,IACrF+a,EAAI9a,KAAKgN,MAAM,EAAIhN,KAAKgO,IAAIZ,KAASpN,KAAKgO,IAAI8S,GAAM9gB,KAAKgO,IAAI8S,KAAQ,EAAI9gB,KAAKgO,IAAIhO,KAAK2N,KAAK,EAAI3N,KAAKgO,IAAIqiB,OAGrGuL,EAAKr0B,QAAU4zB,GAAUE,OAC3Bva,GAAM/gB,EACG67B,EAAKr0B,QAAU4zB,GAAUG,OAClCxa,GAAMpgB,EACGk7B,EAAKr0B,QAAU4zB,GAAUI,SAClCza,GAAM,IAAMpgB,GAIdi7B,EAAG1uB,EAAI6N,EAAI9a,KAAKgO,IAAI8S,GACpB6a,EAAGxtB,EAAI2M,EAAI9a,KAAK4N,IAAIkT,GACpB6a,EAAG1uB,EAAI0uB,EAAG1uB,EAAItG,KAAKrE,EAAIqE,KAAKzC,GAC5By3B,EAAGxtB,EAAIwtB,EAAGxtB,EAAIxH,KAAKrE,EAAIqE,KAAKvC,GAE5B5B,EAAEyK,EAAI0uB,EAAG1uB,EACTzK,EAAE2L,EAAIwtB,EAAGxtB,EACF3L,EAKF,SAASgM,GAAQhM,GACtB,IACIse,EAAIkb,EAAIC,EAAOC,EACfC,EAAU9L,EAAOvjB,EAAQM,EACzB0N,EA8HEshB,EACA/F,EAAQgG,EAlIVC,EAAK,CAACxK,IAAK,EAAG1kB,IAAK,GAInBwuB,EAAO,CAACr0B,MAAO,GA4CnB,GAzCA/E,EAAEyK,GAAKzK,EAAEyK,EAAItG,KAAKzC,IAAMyC,KAAKrE,EAC7BE,EAAE2L,GAAK3L,EAAE2L,EAAIxH,KAAKvC,IAAMuC,KAAKrE,EAI7B05B,EAAKh8B,KAAK2N,KAAK3N,KAAKgN,KAAKxK,EAAEyK,EAAIzK,EAAEyK,EAAIzK,EAAE2L,EAAI3L,EAAE2L,IAC7C2S,EAAK9gB,KAAKwY,MAAMhW,EAAE2L,EAAG3L,EAAEyK,GACnBzK,EAAEyK,GAAK,GAAOzK,EAAEyK,GAAKjN,KAAKkN,IAAI1K,EAAE2L,GAClCytB,EAAKr0B,MAAQ4zB,GAAUC,OACd54B,EAAE2L,GAAK,GAAO3L,EAAE2L,GAAKnO,KAAKkN,IAAI1K,EAAEyK,IACzC2uB,EAAKr0B,MAAQ4zB,GAAUE,OACvBva,GAAM/gB,GACGyC,EAAEyK,EAAI,IAAQzK,EAAEyK,GAAKjN,KAAKkN,IAAI1K,EAAE2L,IACzCytB,EAAKr0B,MAAQ4zB,GAAUG,OACvBxa,EAAMA,EAAK,EAAMA,EAAKpgB,EAAMogB,EAAKpgB,IAEjCk7B,EAAKr0B,MAAQ4zB,GAAUI,OACvBza,GAAM/gB,GAQR+a,EAAKpa,EAAM,GAAMV,KAAKuN,IAAIuT,GAC1Bqb,EAAWn8B,KAAK4N,IAAIkN,IAAM9a,KAAKgO,IAAI8M,GAAM,EAAI9a,KAAKgN,KAAK,IACvDqjB,EAAQrwB,KAAK2N,KAAKwuB,GAClBF,EAAQj8B,KAAKgO,IAAI8S,GACjBob,EAAQl8B,KAAKuN,IAAIyuB,GACjBlvB,EAAS,EAAImvB,EAAQA,EAAQC,EAAQA,GAAS,EAAIl8B,KAAKgO,IAAIhO,KAAK2N,KAAK,EAAI3N,KAAKgO,IAAIqiB,MAC9EvjB,GAAU,EACZA,GAAU,EACDA,EAAS,IAClBA,EAAS,GAOPnG,KAAK60B,OAASZ,GAAUK,IAC1B7tB,EAAMpN,KAAKgmB,KAAKlZ,GAChBwvB,EAAGlvB,IAAMrN,EAAUqN,EACfwuB,EAAKr0B,QAAU4zB,GAAUC,OAC3BkB,EAAGxK,IAAMzB,EAAQtwB,EACR67B,EAAKr0B,QAAU4zB,GAAUE,OAClCiB,EAAGxK,IAAOzB,EAAQ,EAAMA,EAAQ3vB,EAAM2vB,EAAQ3vB,EACrCk7B,EAAKr0B,QAAU4zB,GAAUG,OAClCgB,EAAGxK,IAAMzB,EAAQtwB,EAEjBu8B,EAAGxK,IAAMzB,OAEN,GAAI1pB,KAAK60B,OAASZ,GAAUM,OACjC9tB,EAAMpN,KAAKgmB,KAAKlZ,GAChBwvB,EAAGlvB,IAAMA,EAAMrN,EACX67B,EAAKr0B,QAAU4zB,GAAUC,OAC3BkB,EAAGxK,KAAOzB,EAAQtwB,EACT67B,EAAKr0B,QAAU4zB,GAAUE,OAClCiB,EAAGxK,KAAOzB,EACDuL,EAAKr0B,QAAU4zB,GAAUG,OAClCgB,EAAGxK,KAAOzB,EAAQtwB,EAElBu8B,EAAGxK,IAAOzB,EAAQ,GAAOA,EAAQ3vB,GAAO2vB,EAAQ3vB,MAE7C,CAEL,IAAIozB,EAAGnf,EAAGwQ,EACV2O,EAAIhnB,EACJgO,EAAIgZ,EAAIA,EAEN3O,EADErK,GAAK,EACH,EAEA9a,KAAKgN,KAAK,EAAI8N,GAAK9a,KAAK4N,IAAIyiB,GAElCvV,GAAKqK,EAAIA,EAEPxQ,EADEmG,GAAK,EACH,EAEA9a,KAAKgN,KAAK,EAAI8N,GAGhB8gB,EAAKr0B,QAAU4zB,GAAUE,QAC3BvgB,EAAInG,EACJA,GAAKwQ,EACLA,EAAIrK,GACK8gB,EAAKr0B,QAAU4zB,GAAUG,QAClC3mB,GAAKA,EACLwQ,GAAKA,GACIyW,EAAKr0B,QAAU4zB,GAAUI,SAClCzgB,EAAInG,EACJA,EAAIwQ,EACJA,GAAKrK,GAGHnU,KAAK60B,OAASZ,GAAUE,OAC1BhgB,EAAIgZ,EACJA,GAAKnf,EACLA,EAAImG,GACKnU,KAAK60B,OAASZ,GAAUG,MACjCjH,GAAKA,EACLnf,GAAKA,GACIhO,KAAK60B,OAASZ,GAAUI,OACjClgB,EAAIgZ,EACJA,EAAInf,EACJA,GAAKmG,GAGPwhB,EAAGlvB,IAAMpN,KAAKgmB,MAAMb,GAAKplB,EACzBu8B,EAAGxK,IAAM9xB,KAAKwY,MAAM7D,EAAGmf,GACnBntB,KAAK60B,OAASZ,GAAUE,MAC1BwB,EAAGxK,IAAMgK,GAAqBQ,EAAGxK,KAAM/xB,GAC9B4G,KAAK60B,OAASZ,GAAUG,KACjCuB,EAAGxK,IAAMgK,GAAqBQ,EAAGxK,KAAMpxB,GAC9BiG,KAAK60B,OAASZ,GAAUI,OACjCsB,EAAGxK,IAAMgK,GAAqBQ,EAAGxK,KAAM/xB,IAM3B,IAAZ4G,KAAKmH,KAGPsuB,EAAeE,EAAGlvB,IAAM,EAAI,EAAI,EAChCipB,EAASr2B,KAAKuN,IAAI+uB,EAAGlvB,KACrBivB,EAAK11B,KAAKnC,EAAIxE,KAAKgN,KAAKqpB,EAASA,EAAS1vB,KAAK+0B,qBAC/CY,EAAGlvB,IAAMpN,KAAK2N,KAAK3N,KAAKgN,KAAKrG,KAAKrE,EAAIqE,KAAKrE,EAAI+5B,EAAKA,IAAO11B,KAAK80B,YAAcY,IAC1ED,IACFE,EAAGlvB,KAAOkvB,EAAGlvB,MAOjB,OAHAkvB,EAAGxK,KAAOnrB,KAAKpD,MACff,EAAEyK,EAAIqvB,EAAGxK,IACTtvB,EAAE2L,EAAImuB,EAAGlvB,IACF5K,EAKT,SAASu5B,GAAyB3uB,EAAKe,EAAGlB,EAAG2uB,GAC3C,IAAIvL,EAmBJ,OAlBIjjB,EAAM/M,GACRu7B,EAAKr0B,MAAQ4zB,GAAUC,OACvB/K,EAAQ,IAERA,EAAQrwB,KAAKwY,MAAMrK,EAAGlB,GAClBjN,KAAKkN,IAAImjB,IAAU7vB,EACrBo7B,EAAKr0B,MAAQ4zB,GAAUC,OACd/K,EAAQ7vB,GAAU6vB,GAAStwB,EAAUS,GAC9Co7B,EAAKr0B,MAAQ4zB,GAAUE,OACvBhL,GAAStwB,GACAswB,EAAQtwB,EAAUS,GAAU6vB,KAAWtwB,EAAUS,IAC1Do7B,EAAKr0B,MAAQ4zB,GAAUG,OACvBjL,EAASA,GAAS,EAAMA,EAAQ3vB,EAAM2vB,EAAQ3vB,IAE9Ck7B,EAAKr0B,MAAQ4zB,GAAUI,OACvBlL,GAAStwB,IAGNswB,EAIT,SAASyL,GAAqB1tB,EAAK0G,GACjC,IAAIynB,EAAOnuB,EAAM0G,EAMjB,OALIynB,GAAQ77B,EACV67B,GAAQ97B,EACC87B,GAAQ77B,IACjB67B,GAAQ97B,GAEH87B,EAGF,IAAI5tB,GAAQ,CAAC,mCAAoC,mCAAoC,OAC5F,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,ICtWL6tB,GAAU,CACV,CAAC,EAAQ,WAAa,WAAa,WACnC,CAAC,OAAS,WAAc,UAAa,WACrC,CAAC,OAAS,UAAa,YAAc,YACrC,CAAC,KAAS,WAAa,SAAY,WACnC,CAAC,OAAS,WAAa,YAAc,YACrC,CAAC,MAAS,WAAa,WAAa,WACpC,CAAC,KAAS,WAAa,WAAa,YACpC,CAAC,OAAS,WAAa,YAAc,WACrC,CAAC,OAAS,WAAa,SAAY,YACnC,CAAC,OAAS,WAAa,YAAc,YACrC,CAAC,OAAS,WAAa,UAAa,YACpC,CAAC,MAAS,WAAa,WAAa,YACpC,CAAC,OAAS,WAAa,WAAa,YACpC,CAAC,OAAS,WAAa,UAAa,YACpC,CAAC,OAAS,WAAa,YAAc,WACrC,CAAC,OAAS,WAAa,UAAa,YACpC,CAAC,OAAS,QAAU,WAAa,YACjC,CAAC,OAAS,UAAY,OAAU,YAChC,CAAC,OAAS,UAAY,UAAa,aAGnCC,GAAU,CACV,EAAE,WAAa,MAAQ,YAAc,YACrC,CAAC,KAAQ,OAAS,WAAa,aAC/B,CAAC,KAAQ,MAAQ,YAAc,YAC/B,CAAC,KAAQ,UAAY,WAAa,YAClC,CAAC,KAAQ,SAAW,YAAc,SAClC,CAAC,IAAQ,UAAY,WAAa,YAClC,CAAC,KAAQ,SAAW,YAAc,YAClC,CAAC,KAAQ,UAAY,YAAc,YACnC,CAAC,MAAQ,UAAY,YAAc,YACnC,CAAC,MAAQ,UAAY,YAAc,YACnC,CAAC,MAAQ,UAAY,YAAc,YACnC,CAAC,MAAQ,SAAW,YAAc,YAClC,CAAC,MAAQ,UAAY,YAAc,YACnC,CAAC,MAAQ,UAAY,YAAc,YACnC,CAAC,MAAQ,UAAY,UAAa,YAClC,CAAC,MAAQ,WAAa,UAAa,SACnC,CAAC,MAAQ,WAAa,WAAc,WACpC,CAAC,MAAQ,WAAa,QAAW,WACjC,CAAC,EAAQ,WAAa,WAAc,YAGpCC,GAAM,MACNC,GAAM,OACNhc,GAAKpgB,EAAI,EACTq8B,GAAM,EAAEjc,GACRkc,GAAQ,GAERC,GAAY,SAASC,EAAO9vB,GAC5B,OAAO8vB,EAAM,GAAK9vB,GAAK8vB,EAAM,GAAK9vB,GAAK8vB,EAAM,GAAK9vB,EAAI8vB,EAAM,MAG5DC,GAAY,SAASD,EAAO9vB,GAC5B,OAAO8vB,EAAM,GAAK9vB,GAAK,EAAI8vB,EAAM,GAAS,EAAJ9vB,EAAQ8vB,EAAM,KAGxD,SAASE,GAAeC,EAAM5tB,EAAO6tB,EAASC,GAE1C,IADA,IAAInwB,EAAIqC,EACD8tB,IAASA,EAAO,CACnB,IAAIC,EAAMH,EAAKjwB,GAEf,GADAA,GAAKowB,EACDr9B,KAAKkN,IAAImwB,GAAOF,EAChB,MAGR,OAAOlwB,EAGJ,SAASY,KACZlH,KAAKzC,GAAKyC,KAAKzC,IAAM,EACrByC,KAAKvC,GAAKuC,KAAKvC,IAAM,EACrBuC,KAAKpD,MAAQoD,KAAKpD,OAAS,EAC3BoD,KAAKmH,GAAK,EACVnH,KAAKwjB,MAAQxjB,KAAKwjB,OAAS,WAGxB,SAASjc,GAAQkG,GACpB,IAAIhG,EAAME,GAAW8F,EAAGnH,EAAItG,KAAKpD,OAE7BkK,EAAOzN,KAAKkN,IAAIkH,EAAGjG,GACnB1M,EAAIzB,KAAKob,MAAM3N,EAAOkT,IACtBlf,EAAI,EACJA,EAAI,EACGA,GAAKo7B,KACZp7B,EAAIo7B,GAAQ,GAEhBpvB,EAAOlN,GAAOkN,EAAOmvB,GAAMn7B,GAC3B,IAAIk6B,EAAK,CACL1uB,EAAG6vB,GAAUN,GAAQ/6B,GAAIgM,GAAQW,EACjCD,EAAG2uB,GAAUL,GAAQh7B,GAAIgM,IAQ7B,OANI2G,EAAGjG,EAAI,IACPwtB,EAAGxtB,GAAKwtB,EAAGxtB,GAGfwtB,EAAG1uB,EAAI0uB,EAAG1uB,EAAItG,KAAKrE,EAAIo6B,GAAM/1B,KAAKzC,GAClCy3B,EAAGxtB,EAAIwtB,EAAGxtB,EAAIxH,KAAKrE,EAAIq6B,GAAMh2B,KAAKvC,GAC3Bu3B,EAGJ,SAASntB,GAAQmtB,GACpB,IAAIvnB,EAAK,CACLnH,GAAI0uB,EAAG1uB,EAAItG,KAAKzC,KAAOyC,KAAKrE,EAAIo6B,IAChCvuB,EAAGnO,KAAKkN,IAAIyuB,EAAGxtB,EAAIxH,KAAKvC,KAAOuC,KAAKrE,EAAIq6B,KAG5C,GAAIvoB,EAAGjG,GAAK,EACRiG,EAAGnH,GAAKuvB,GAAQK,IAAO,GACvBzoB,EAAGjG,EAAIwtB,EAAGxtB,EAAI,GAAKpO,EAAUA,MAC1B,CAEH,IAAI0B,EAAIzB,KAAKob,MAAMhH,EAAGjG,EAAI0uB,IAM1B,IALIp7B,EAAI,EACJA,EAAI,EACGA,GAAKo7B,KACZp7B,EAAIo7B,GAAQ,KAGZ,GAAIJ,GAAQh7B,GAAG,GAAK2S,EAAGjG,IACjB1M,MACC,MAAIg7B,GAAQh7B,EAAE,GAAG,IAAM2S,EAAGjG,GAG7B,QAFE1M,EAMV,IAAIs7B,EAAQN,GAAQh7B,GAChBqZ,EAAI,GAAK1G,EAAGjG,EAAI4uB,EAAM,KAAON,GAAQh7B,EAAE,GAAG,GAAKs7B,EAAM,IAEzDjiB,EAAImiB,IAAe,SAAShwB,GACxB,OAAQ6vB,GAAUC,EAAO9vB,GAAKmH,EAAGjG,GAAK6uB,GAAUD,EAAO9vB,KACxD6N,EAAGza,EAAO,KAEb+T,EAAGnH,GAAK6vB,GAAUN,GAAQ/6B,GAAIqZ,GAC9B1G,EAAGjG,GAAK,EAAI1M,EAAIqZ,GAAKxa,EACjBq7B,EAAGxtB,EAAI,IACPiG,EAAGjG,GAAKiG,EAAGjG,GAKnB,OADAiG,EAAGnH,EAAIqB,GAAW8F,EAAGnH,EAAItG,KAAKpD,OACvB6Q,EAGJ,IAAIzF,GAAQ,CAAC,WAAY,SAChC,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,IC1JF,SAASd,KACZlH,KAAKsB,KAAO,UAIT,SAASiG,GAAQ1L,GACpB,IAAI8W,EAAQ5C,GAAqBlU,EAAGmE,KAAKmH,GAAInH,KAAKrE,GAClD,OAAOgX,EAGJ,SAAS9K,GAAQhM,GACpB,IAAI8W,EAAQlC,GAAqB5U,EAAGmE,KAAKmH,GAAInH,KAAKrE,EAAGqE,KAAKnC,GAC1D,OAAO8U,EAGJ,IAAI3K,GAAQ,CAAC,aAAc,aAAc,UAAW,WAC3D,IACId,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,ICxBPskB,GAAO,CACTH,OAAQ,EACRD,OAAQ,EACRE,MAAO,EACPC,MAAO,GAMLtwB,GAAS,CACX8jB,EAAO,CAAEzb,IAAK,IAAQuR,KAAK,GAC3BghB,IAAO,CAAEvyB,IAAK,EAAGuR,KAAK,EAAMihB,SAAS,GACrCC,KAAO,CAAEzyB,IAAK,EAAGuR,KAAK,EAAMihB,SAAS,GACrCh6B,MAAO,CAAEwH,IAAK,EAAGuR,KAAK,GACtBtZ,KAAO,CAAE+H,IAAK,EAAGuR,KAAK,IAGjB,SAASzO,KA0Bd,GAzBAxM,OAAOD,KAAKsB,IAAQiI,QAAQ,SAAUnI,GACpC,GAAuB,qBAAZmE,KAAKnE,GACdmE,KAAKnE,GAAKE,GAAOF,GAAGuI,QACf,IAAIrI,GAAOF,GAAG8Z,KAAO7B,MAAM9T,KAAKnE,IACrC,MAAM,IAAIkE,MAAM,4CAA8ClE,EAAI,MAAQmE,KAAKnE,IACtEE,GAAOF,GAAG8Z,MACnB3V,KAAKnE,GAAKM,WAAW6D,KAAKnE,KAExBE,GAAOF,GAAG+6B,UACZ52B,KAAKnE,GAAKmE,KAAKnE,GAAKlC,IAEtBm9B,KAAK92B,OAEH3G,KAAKkN,IAAKlN,KAAKkN,IAAIvG,KAAK3D,MAAQjD,GAAYM,EAC9CsG,KAAKssB,KAAOtsB,KAAK3D,KAAO,EAAIiwB,GAAKJ,OAASI,GAAKH,OACtC9yB,KAAKkN,IAAIvG,KAAK3D,MAAQ3C,EAC/BsG,KAAKssB,KAAOA,GAAKF,OAEjBpsB,KAAKssB,KAAOA,GAAKD,MACjBrsB,KAAK4mB,OAASvtB,KAAK4N,IAAIjH,KAAK3D,MAC5B2D,KAAKwmB,OAASntB,KAAKgO,IAAIrH,KAAK3D,OAG9B2D,KAAK+2B,IAAM/2B,KAAK6f,EAAI7f,KAAKrE,EAErBqE,KAAK+2B,KAAO,GAAK/2B,KAAK+2B,IAAM,KAC9B,MAAM,IAAIh3B,MAAM,kBAGlBC,KAAKnE,EAAI,EAAImE,KAAK+2B,IAClB/2B,KAAKg3B,GAAK,EAAIh3B,KAAKnE,EACnBmE,KAAKsgB,GAAK,EAAItgB,KAAK+2B,IACnB/2B,KAAKi3B,OAASj3B,KAAKnE,EAAI,GAAKmE,KAAKsgB,GACjCtgB,KAAKmH,GAAK,EAEV,IAAI+vB,EAAQl3B,KAAK62B,KACb35B,EAAQ8C,KAAK22B,IACjB32B,KAAKm3B,GAAK99B,KAAKgO,IAAInK,GACnB8C,KAAKo3B,GAAK/9B,KAAK4N,IAAI/J,GACnB8C,KAAKq3B,GAAKh+B,KAAKgO,IAAI6vB,GACnBl3B,KAAKs3B,GAAKj+B,KAAK4N,IAAIiwB,GAGd,SAAS3vB,GAAQ1L,GACtBA,EAAEyK,GAAKtG,KAAKpD,MACZ,IAGI0J,EAAGkB,EAkCH+vB,EAAIC,EArCJtxB,EAAS7M,KAAK4N,IAAIpL,EAAE2L,GACpBrB,EAAS9M,KAAKgO,IAAIxL,EAAE2L,GACpBylB,EAAS5zB,KAAKgO,IAAIxL,EAAEyK,GAExB,OAAQtG,KAAKssB,MACX,KAAKA,GAAKD,MACR7kB,EAAIxH,KAAK4mB,OAAS1gB,EAASlG,KAAKwmB,OAASrgB,EAAS8mB,EAClD,MACF,KAAKX,GAAKF,MACR5kB,EAAIrB,EAAS8mB,EACb,MACF,KAAKX,GAAKJ,OACR1kB,GAAKtB,EACL,MACF,KAAKomB,GAAKH,OACR3kB,EAAItB,EACJ,MAKJ,OAHAsB,EAAIxH,KAAK+2B,KAAO/2B,KAAKnE,EAAI2L,GACzBlB,EAAIkB,EAAIrB,EAAS9M,KAAK4N,IAAIpL,EAAEyK,GAEpBtG,KAAKssB,MACX,KAAKA,GAAKD,MACR7kB,GAAKxH,KAAKwmB,OAAStgB,EAASlG,KAAK4mB,OAASzgB,EAAS8mB,EACnD,MACF,KAAKX,GAAKF,MACR5kB,GAAKtB,EACL,MACF,KAAKomB,GAAKH,OACR3kB,IAAOrB,EAAS8mB,EAChB,MACF,KAAKX,GAAKJ,OACR1kB,GAAKrB,EAAS8mB,EACd,MAYJ,OAPAsK,EAAK/vB,EAAIxH,KAAKm3B,GAAK7wB,EAAItG,KAAKo3B,GAC5BI,EAAK,GAAKD,EAAKv3B,KAAKs3B,GAAKt3B,KAAKsgB,GAAKtgB,KAAKq3B,IACxC/wB,GAAKA,EAAItG,KAAKm3B,GAAK3vB,EAAIxH,KAAKo3B,IAAMp3B,KAAKq3B,GAAKG,EAC5ChwB,EAAI+vB,EAAKC,EAET37B,EAAEyK,EAAIA,EAAItG,KAAKrE,EACfE,EAAE2L,EAAIA,EAAIxH,KAAKrE,EACRE,EAGF,SAASgM,GAAQhM,GACtBA,EAAEyK,GAAKtG,KAAKrE,EACZE,EAAE2L,GAAKxH,KAAKrE,EACZ,IAGI87B,EAAIC,EAAIH,EAHRvpB,EAAI,CAAE1H,EAAGzK,EAAEyK,EAAGkB,EAAG3L,EAAE2L,GAIvB+vB,EAAK,GAAKv3B,KAAK+2B,IAAMl7B,EAAE2L,EAAIxH,KAAKs3B,IAChCG,EAAKz3B,KAAK+2B,IAAMl7B,EAAEyK,EAAIixB,EACtBG,EAAK13B,KAAK+2B,IAAMl7B,EAAE2L,EAAIxH,KAAKq3B,GAAKE,EAChC17B,EAAEyK,EAAImxB,EAAKz3B,KAAKm3B,GAAKO,EAAK13B,KAAKo3B,GAC/Bv7B,EAAE2L,EAAIkwB,EAAK13B,KAAKm3B,GAAKM,EAAKz3B,KAAKo3B,GAE/B,IAAI3S,EAAKvE,GAAMrkB,EAAEyK,EAAGzK,EAAE2L,GACtB,GAAInO,KAAKkN,IAAIke,GAAM/qB,EACjBsU,EAAE1H,EAAI,EACN0H,EAAExG,EAAI3L,EAAE2L,MACH,CACL,IAAIimB,EAAMC,EAIV,OAHAA,EAAO,EAAIjJ,EAAKA,EAAKzkB,KAAKi3B,MAC1BvJ,GAAQ1tB,KAAKnE,EAAIxC,KAAKgN,KAAKqnB,KAAU1tB,KAAK+2B,IAAMtS,EAAKA,EAAKzkB,KAAK+2B,KAC/DtJ,EAAOp0B,KAAKgN,KAAK,EAAIqnB,EAAOA,GACpB1tB,KAAKssB,MACX,KAAKA,GAAKD,MACRre,EAAExG,EAAInO,KAAKymB,KAAK2N,EAAOztB,KAAK4mB,OAAS/qB,EAAE2L,EAAIkmB,EAAO1tB,KAAKwmB,OAAS/B,GAChE5oB,EAAE2L,GAAKimB,EAAOztB,KAAK4mB,OAASvtB,KAAK4N,IAAI+G,EAAExG,IAAMid,EAC7C5oB,EAAEyK,GAAKonB,EAAO1tB,KAAKwmB,OACnB,MACF,KAAK8F,GAAKF,MACRpe,EAAExG,EAAInO,KAAKymB,KAAKjkB,EAAE2L,EAAIkmB,EAAOjJ,GAC7B5oB,EAAE2L,EAAIimB,EAAOhJ,EACb5oB,EAAEyK,GAAKonB,EACP,MACF,KAAKpB,GAAKH,OACRne,EAAExG,EAAInO,KAAKymB,KAAK2N,GAChB5xB,EAAE2L,GAAK3L,EAAE2L,EACT,MACF,KAAK8kB,GAAKJ,OACRle,EAAExG,GAAKnO,KAAKymB,KAAK2N,GACjB,MAEJzf,EAAE1H,EAAIjN,KAAKwY,MAAMhW,EAAEyK,EAAGzK,EAAE2L,GAK1B,OAFA3L,EAAEyK,EAAI0H,EAAE1H,EAAItG,KAAKpD,MACjBf,EAAE2L,EAAIwG,EAAExG,EACD3L,EAGF,IAAImM,GAAQ,CAAC,qBAAsB,SAC1C,IACEd,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,ICrKF,SAASd,KAKZ,GAJAlH,KAAK23B,UAA4B,MAAf33B,KAAK43B,MAAgB,EAAI,EAC3C53B,KAAK6f,EAAIzM,OAAOpT,KAAK6f,GACrB7f,KAAK63B,WAAa73B,KAAK6f,EAAI7f,KAAKrE,EAE5BqE,KAAK63B,YAAc,GAAK73B,KAAK63B,WAAa,KAC1C,MAAM,IAAI93B,MAMd,GAHAC,KAAK83B,SAAW,EAAM93B,KAAK63B,WAC3B73B,KAAK6Y,EAAI7Y,KAAK83B,SAAW93B,KAAK83B,SAAW,EAEzB,IAAZ93B,KAAKmH,GAAY,CACjB,IAAIsgB,EAAS,EAAMznB,KAAKmH,GACpB4wB,EAAU,EAAItQ,EAElBznB,KAAKg4B,SAAW3+B,KAAKgN,KAAKohB,GAC1BznB,KAAKi4B,UAAYxQ,EACjBznB,KAAKk4B,cAAgBH,EAErB/3B,KAAKm4B,MAAQ,eAEbn4B,KAAKg4B,SAAW,EAChBh4B,KAAKi4B,UAAY,EACjBj4B,KAAKk4B,cAAgB,EAErBl4B,KAAKm4B,MAAQ,SAGZn4B,KAAKwjB,QACNxjB,KAAKwjB,MAAQ,gCAIrB,SAASjc,GAAQ1L,GACb,IAEI2mB,EAAK4V,EAAKC,EAAKC,EAFf7wB,EAAM5L,EAAEyK,EACRoB,EAAM7L,EAAE2L,EAIZ,GAFAC,GAAYzH,KAAKpD,MAEE,YAAfoD,KAAKm4B,MAAqB,CAC1BzwB,EAAMrO,KAAK2N,KAAKhH,KAAKi4B,UAAY5+B,KAAKuN,IAAIc,IAC1C,IAAIsG,EAAIhO,KAAKg4B,SAAW9X,GAAMlgB,KAAKg4B,SAAW3+B,KAAKgO,IAAIK,GAAMrO,KAAK4N,IAAIS,IAMtE,GAJA0wB,EAAMpqB,EAAI3U,KAAKgO,IAAII,GAAOpO,KAAKgO,IAAIK,GACnC2wB,EAAMrqB,EAAI3U,KAAK4N,IAAIQ,GAAOpO,KAAKgO,IAAIK,GACnC4wB,EAAMtqB,EAAI3U,KAAK4N,IAAIS,IAEb1H,KAAK83B,SAAWM,GAAOA,EAAMC,EAAMA,EAAMC,EAAMA,EAAMt4B,KAAKk4B,cAAiB,EAG7E,OAFAr8B,EAAEyK,EAAI8M,OAAOC,IACbxX,EAAE2L,EAAI4L,OAAOC,IACNxX,EAGX2mB,EAAMxiB,KAAK83B,SAAWM,EAClBp4B,KAAK23B,WACL97B,EAAEyK,EAAItG,KAAK63B,WAAax+B,KAAK2N,KAAKqxB,EAAMnY,GAAMoY,EAAK9V,IACnD3mB,EAAE2L,EAAIxH,KAAK63B,WAAax+B,KAAK2N,KAAKsxB,EAAM9V,KAExC3mB,EAAEyK,EAAItG,KAAK63B,WAAax+B,KAAK2N,KAAKqxB,EAAM7V,GACxC3mB,EAAE2L,EAAIxH,KAAK63B,WAAax+B,KAAK2N,KAAKsxB,EAAMpY,GAAMmY,EAAK7V,SAEjC,WAAfxiB,KAAKm4B,QACZ3V,EAAMnpB,KAAKgO,IAAIK,GACf0wB,EAAM/+B,KAAKgO,IAAII,GAAO+a,EACtB6V,EAAMh/B,KAAK4N,IAAIQ,GAAO+a,EACtB8V,EAAMj/B,KAAK4N,IAAIS,GACf8a,EAAMxiB,KAAK83B,SAAWM,EAElBp4B,KAAK23B,WACL97B,EAAEyK,EAAItG,KAAK63B,WAAax+B,KAAK2N,KAAKqxB,EAAMnY,GAAMoY,EAAK9V,IACnD3mB,EAAE2L,EAAIxH,KAAK63B,WAAax+B,KAAK2N,KAAKsxB,EAAM9V,KAExC3mB,EAAEyK,EAAItG,KAAK63B,WAAax+B,KAAK2N,KAAKqxB,EAAM7V,GACxC3mB,EAAE2L,EAAIxH,KAAK63B,WAAax+B,KAAK2N,KAAKsxB,EAAMpY,GAAMmY,EAAK7V,MAK3D,OAFA3mB,EAAEyK,EAAIzK,EAAEyK,EAAItG,KAAKrE,EACjBE,EAAE2L,EAAI3L,EAAE2L,EAAIxH,KAAKrE,EACVE,EAGX,SAASgM,GAAQhM,GACb,IAGIF,EAAGkC,EAAG06B,EAAK36B,EAHXw6B,GAAO,EACPC,EAAM,EACNC,EAAM,EAMV,GAHAz8B,EAAEyK,EAAIzK,EAAEyK,EAAItG,KAAKrE,EACjBE,EAAE2L,EAAI3L,EAAE2L,EAAIxH,KAAKrE,EAEE,YAAfqE,KAAKm4B,MAAqB,CACtBn4B,KAAK23B,WACLW,EAAMj/B,KAAKuN,IAAI/K,EAAE2L,EAAIxH,KAAK63B,YAC1BQ,EAAMh/B,KAAKuN,IAAI/K,EAAEyK,EAAItG,KAAK63B,YAAc3X,GAAM,EAAKoY,KAEnDD,EAAMh/B,KAAKuN,IAAI/K,EAAEyK,EAAItG,KAAK63B,YAC1BS,EAAMj/B,KAAKuN,IAAI/K,EAAE2L,EAAIxH,KAAK63B,YAAc3X,GAAM,EAAKmY,IAGvD,IAAIG,EAAOF,EAAMt4B,KAAKg4B,SAKtB,GAJAr8B,EAAI08B,EAAMA,EAAMG,EAAOA,EAAOJ,EAAMA,EACpCv6B,EAAI,EAAImC,KAAK83B,SAAWM,EACxBG,EAAO16B,EAAIA,EAAK,EAAIlC,EAAIqE,KAAK6Y,EAEzB0f,EAAM,EAGN,OAFA18B,EAAEyK,EAAI8M,OAAOC,IACbxX,EAAE2L,EAAI4L,OAAOC,IACNxX,EAGX+B,IAAMC,EAAIxE,KAAKgN,KAAKkyB,KAAS,EAAM58B,GACnCy8B,EAAMp4B,KAAK83B,SAAWl6B,EAAIw6B,EAC1BC,GAAOz6B,EACP06B,GAAO16B,EAEP/B,EAAEyK,EAAIjN,KAAKwY,MAAMwmB,EAAKD,GACtBv8B,EAAE2L,EAAInO,KAAK2N,KAAKsxB,EAAMj/B,KAAKgO,IAAIxL,EAAEyK,GAAK8xB,GACtCv8B,EAAE2L,EAAInO,KAAK2N,KAAKhH,KAAKk4B,cAAgB7+B,KAAKuN,IAAI/K,EAAE2L,SAC7C,GAAmB,WAAfxH,KAAKm4B,MAAoB,CAYhC,GAXIn4B,KAAK23B,WACLW,EAAMj/B,KAAKuN,IAAI/K,EAAE2L,EAAIxH,KAAK63B,YAC1BQ,EAAMh/B,KAAKuN,IAAI/K,EAAEyK,EAAItG,KAAK63B,YAAcx+B,KAAKgN,KAAK,EAAMiyB,EAAMA,KAE9DD,EAAMh/B,KAAKuN,IAAI/K,EAAEyK,EAAItG,KAAK63B,YAC1BS,EAAMj/B,KAAKuN,IAAI/K,EAAE2L,EAAIxH,KAAK63B,YAAcx+B,KAAKgN,KAAK,EAAMgyB,EAAMA,IAGlE18B,EAAI08B,EAAMA,EAAMC,EAAMA,EAAMF,EAAMA,EAClCv6B,EAAI,EAAImC,KAAK83B,SAAWM,EACxBG,EAAO16B,EAAIA,EAAK,EAAIlC,EAAIqE,KAAK6Y,EACzB0f,EAAM,EAGN,OAFA18B,EAAEyK,EAAI8M,OAAOC,IACbxX,EAAE2L,EAAI4L,OAAOC,IACNxX,EAGX+B,IAAMC,EAAIxE,KAAKgN,KAAKkyB,KAAS,EAAM58B,GACnCy8B,EAAMp4B,KAAK83B,SAAWl6B,EAAIw6B,EAC1BC,GAAOz6B,EACP06B,GAAO16B,EAEP/B,EAAEyK,EAAIjN,KAAKwY,MAAMwmB,EAAKD,GACtBv8B,EAAE2L,EAAInO,KAAK2N,KAAKsxB,EAAMj/B,KAAKgO,IAAIxL,EAAEyK,GAAK8xB,GAG1C,OADAv8B,EAAEyK,EAAIzK,EAAEyK,EAAItG,KAAKpD,MACVf,EAGJ,IAAImM,GAAQ,CAAC,+BAAgC,0BAA2B,QAC/E,IACId,KAAMA,GACNK,QAASA,GACTM,QAASA,GACTG,MAAOA,IC/HI,YAAS6O,GACtBA,EAAM4hB,KAAKrpB,YAAY7G,IAAIgZ,IAC3B1K,EAAM4hB,KAAKrpB,YAAY7G,IAAIqa,IAC3B/L,EAAM4hB,KAAKrpB,YAAY7G,IAAIsR,IAC3BhD,EAAM4hB,KAAKrpB,YAAY7G,IAAImwB,IAC3B7hB,EAAM4hB,KAAKrpB,YAAY7G,IAAIowB,IAC3B9hB,EAAM4hB,KAAKrpB,YAAY7G,IAAIqwB,IAC3B/hB,EAAM4hB,KAAKrpB,YAAY7G,IAAIswB,IAC3BhiB,EAAM4hB,KAAKrpB,YAAY7G,IAAIuwB,IAC3BjiB,EAAM4hB,KAAKrpB,YAAY7G,IAAIwwB,IAC3BliB,EAAM4hB,KAAKrpB,YAAY7G,IAAIywB,IAC3BniB,EAAM4hB,KAAKrpB,YAAY7G,IAAI0wB,IAC3BpiB,EAAM4hB,KAAKrpB,YAAY7G,IAAI2wB,IAC3BriB,EAAM4hB,KAAKrpB,YAAY7G,IAAI4wB,IAC3BtiB,EAAM4hB,KAAKrpB,YAAY7G,IAAI6wB,IAC3BviB,EAAM4hB,KAAKrpB,YAAY7G,IAAI8wB,IAC3BxiB,EAAM4hB,KAAKrpB,YAAY7G,IAAI+wB,IAC3BziB,EAAM4hB,KAAKrpB,YAAY7G,IAAIgxB,IAC3B1iB,EAAM4hB,KAAKrpB,YAAY7G,IAAIixB,IAC3B3iB,EAAM4hB,KAAKrpB,YAAY7G,IAAIkxB,IAC3B5iB,EAAM4hB,KAAKrpB,YAAY7G,IAAImxB,IAC3B7iB,EAAM4hB,KAAKrpB,YAAY7G,IAAIoxB,IAC3B9iB,EAAM4hB,KAAKrpB,YAAY7G,IAAIqxB,IAC3B/iB,EAAM4hB,KAAKrpB,YAAY7G,IAAIsxB,IAC3BhjB,EAAM4hB,KAAKrpB,YAAY7G,IAAIuxB,IAC3BjjB,EAAM4hB,KAAKrpB,YAAY7G,IAAIwxB,IAC3BljB,EAAM4hB,KAAKrpB,YAAY7G,IAAIyxB,IAC3BnjB,EAAM4hB,KAAKrpB,YAAY7G,IAAI0xB,IAC3BpjB,EAAM4hB,KAAKrpB,YAAY7G,IAAI2xB,IAC3BrjB,EAAM4hB,KAAKrpB,YAAY7G,IAAI4xB,IChD7BtjB,GAAAA,aAAqB,QACrBA,GAAAA,KAAa4hB,GACb5hB,GAAAA,MAAc,IAAIA,GAAAA,KAAW,SAC7BA,GAAAA,MAAcsG,GACdtG,GAAAA,QAAgBujB,GAChBvjB,GAAAA,KAAare,EACbqe,GAAAA,QAAgBrM,GAChBqM,GAAAA,UAAkBf,GAClBe,GAAAA,KAAae,GACbf,GAAAA,QAAgB,cAChBwjB,GAAoBxjB,IACpB","sources":["webpack://map/./node_modules/proj4/lib/global.js","webpack://map/./node_modules/proj4/lib/constants/values.js","webpack://map/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://map/./node_modules/proj4/lib/constants/units.js","webpack://map/./node_modules/proj4/lib/match.js","webpack://map/./node_modules/proj4/lib/projString.js","webpack://map/./node_modules/wkt-parser/parser.js","webpack://map/./node_modules/wkt-parser/process.js","webpack://map/./node_modules/wkt-parser/index.js","webpack://map/./node_modules/proj4/lib/defs.js","webpack://map/./node_modules/proj4/lib/parseCode.js","webpack://map/./node_modules/proj4/lib/extend.js","webpack://map/./node_modules/proj4/lib/common/msfnz.js","webpack://map/./node_modules/proj4/lib/common/sign.js","webpack://map/./node_modules/proj4/lib/common/adjust_lon.js","webpack://map/./node_modules/proj4/lib/common/tsfnz.js","webpack://map/./node_modules/proj4/lib/common/phi2z.js","webpack://map/./node_modules/proj4/lib/projections/merc.js","webpack://map/./node_modules/proj4/lib/projections/longlat.js","webpack://map/./node_modules/proj4/lib/projections.js","webpack://map/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://map/./node_modules/proj4/lib/deriveConstants.js","webpack://map/./node_modules/proj4/lib/constants/Datum.js","webpack://map/./node_modules/proj4/lib/datum.js","webpack://map/./node_modules/proj4/lib/nadgrid.js","webpack://map/./node_modules/proj4/lib/Proj.js","webpack://map/./node_modules/proj4/lib/datumUtils.js","webpack://map/./node_modules/proj4/lib/datum_transform.js","webpack://map/./node_modules/proj4/lib/adjust_axis.js","webpack://map/./node_modules/proj4/lib/common/toPoint.js","webpack://map/./node_modules/proj4/lib/checkSanity.js","webpack://map/./node_modules/proj4/lib/transform.js","webpack://map/./node_modules/proj4/lib/core.js","webpack://map/./node_modules/mgrs/mgrs.js","webpack://map/./node_modules/proj4/lib/Point.js","webpack://map/./node_modules/proj4/lib/common/pj_enfn.js","webpack://map/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://map/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://map/./node_modules/proj4/lib/projections/tmerc.js","webpack://map/./node_modules/proj4/lib/common/sinh.js","webpack://map/./node_modules/proj4/lib/common/hypot.js","webpack://map/./node_modules/proj4/lib/common/log1py.js","webpack://map/./node_modules/proj4/lib/common/asinhy.js","webpack://map/./node_modules/proj4/lib/common/gatg.js","webpack://map/./node_modules/proj4/lib/common/clens.js","webpack://map/./node_modules/proj4/lib/common/cosh.js","webpack://map/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://map/./node_modules/proj4/lib/projections/etmerc.js","webpack://map/./node_modules/proj4/lib/common/adjust_zone.js","webpack://map/./node_modules/proj4/lib/projections/utm.js","webpack://map/./node_modules/proj4/lib/common/srat.js","webpack://map/./node_modules/proj4/lib/projections/gauss.js","webpack://map/./node_modules/proj4/lib/projections/sterea.js","webpack://map/./node_modules/proj4/lib/projections/stere.js","webpack://map/./node_modules/proj4/lib/projections/somerc.js","webpack://map/./node_modules/proj4/lib/projections/omerc.js","webpack://map/./node_modules/proj4/lib/projections/lcc.js","webpack://map/./node_modules/proj4/lib/projections/krovak.js","webpack://map/./node_modules/proj4/lib/common/mlfn.js","webpack://map/./node_modules/proj4/lib/common/e0fn.js","webpack://map/./node_modules/proj4/lib/common/e1fn.js","webpack://map/./node_modules/proj4/lib/common/e2fn.js","webpack://map/./node_modules/proj4/lib/common/e3fn.js","webpack://map/./node_modules/proj4/lib/common/gN.js","webpack://map/./node_modules/proj4/lib/common/adjust_lat.js","webpack://map/./node_modules/proj4/lib/common/imlfn.js","webpack://map/./node_modules/proj4/lib/projections/cass.js","webpack://map/./node_modules/proj4/lib/common/qsfnz.js","webpack://map/./node_modules/proj4/lib/projections/laea.js","webpack://map/./node_modules/proj4/lib/common/asinz.js","webpack://map/./node_modules/proj4/lib/projections/aea.js","webpack://map/./node_modules/proj4/lib/projections/gnom.js","webpack://map/./node_modules/proj4/lib/common/iqsfnz.js","webpack://map/./node_modules/proj4/lib/projections/cea.js","webpack://map/./node_modules/proj4/lib/projections/eqc.js","webpack://map/./node_modules/proj4/lib/projections/poly.js","webpack://map/./node_modules/proj4/lib/projections/nzmg.js","webpack://map/./node_modules/proj4/lib/projections/mill.js","webpack://map/./node_modules/proj4/lib/projections/sinu.js","webpack://map/./node_modules/proj4/lib/projections/moll.js","webpack://map/./node_modules/proj4/lib/projections/eqdc.js","webpack://map/./node_modules/proj4/lib/projections/vandg.js","webpack://map/./node_modules/proj4/lib/projections/aeqd.js","webpack://map/./node_modules/proj4/lib/projections/ortho.js","webpack://map/./node_modules/proj4/lib/projections/qsc.js","webpack://map/./node_modules/proj4/lib/projections/robin.js","webpack://map/./node_modules/proj4/lib/projections/geocent.js","webpack://map/./node_modules/proj4/lib/projections/tpers.js","webpack://map/./node_modules/proj4/lib/projections/geos.js","webpack://map/./node_modules/proj4/projs.js","webpack://map/./node_modules/proj4/lib/index.js"],"sourcesContent":["export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n"],"names":["defs","WGS84","GOOGLE","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","ft","to_meter","ignoredChar","match","obj","key","testkey","processedKey","keys","Object","lkey","toLowerCase","replace","i","length","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","text","Error","this","level","place","root","stack","currentObject","state","parseString","txt","parser","output","mapit","value","Array","isArray","unshift","thing","out","newObj","item","sExpr","shift","name","convert","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","rename","outName","inName","d2r","input","cleanWKT","wkt","type","projName","local","PROJECTION","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","ratio","slice","sphere","ellps","TOWGS84","isFinite","renamer","list","forEach","lisp","that","arguments","def","charAt","parseProj","apply","EPSG","ESRI","IAU2000","console","log","globals","testObj","code","testDef","codeWords","testWKT","some","codes","checkMercator","auth","checkProjStr","ext","testProj","parse","maybeProjStr","projStr","destination","source","property","undefined","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","init","es","e","cos","msfnz","forward","y","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","identity","pt","projs","merc","longlat","projStore","add","len","n","get","start","ellipseName","eccentricity","a2","b2","ep2","ellipse","Ellipsoid","datum_type","grids","wgs84","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","loadedNadgrids","nadgrid","data","view","DataView","isLittleEndian","detectLittleEndian","header","readHeader","nSubgrids","subgrids","readSubgrids","getNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","nFields","getInt32","warn","nSubgridFields","shiftType","decodeString","fromSemiMajorAxis","getFloat64","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","end","String","fromCharCode","Uint8Array","buffer","gridOffset","subHeader","readGridHeader","nodes","readGridNodes","lngColumnCount","round","upperLongitude","lowerLongitude","longitudeInterval","latColumnCount","upperLatitude","lowerLatitude","latitudeInterval","ll","del","lim","count","gridNodeCount","cvs","mapNodes","r","longitudeShift","latitudeShift","offset","parent","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","projections","datumDef","Datum","sphere_","dc_sphere","ecc","dc_eccentricity","datumObj","extend","compareDatums","dest","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","genau2","maxiter","X","Y","Z","atan2","geocentricToWgs84","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","point","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","Number","NaN","attemptedGrids","subgrid","epsilon","minX","minY","maxX","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","tol","inx","indx","floor","frct","f00","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","TypeError","checkNotWGS","transform","enforceAxis","toPoint","checkSanity","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","splice","checkProj","oProj","proj4","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","accuracy","encode","LLtoUTM","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","degToRad","deg","radToDeg","rad","LongOrigin","eccPrimeSquared","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","LongRad","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","getLetterDesignator","utm","N1","T1","C1","R1","D","mu","phi1Rad","e1","result","topRight","LetterDesignator","seasting","snorthing","get100kID","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","twoLetter","mgrsString","testChar","hunK","sb","substring","set","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","curCol","eastingValue","rewindMarker","curRow","northingValue","Point","fromMGRS","mgrsStr","toMGRS","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","sphi","cphi","MAX_ITER","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","hr","hr1","hr2","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","j","hi1","hi","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","dependsOn","adjust_zone","etmerc","esinp","rc","phic0","ratexp","K","srat","DEL_TOL","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","ssfn_","phit","eccen","coslat0","sinlat0","cons","ms1","X0","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phy0","lambda0","sinPhy0","semiMajorAxis","invF","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","isTypeA","typeAProjections","projectionName","cosph0","F","H","L","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","ml1","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","S_POLE","N_POLE","EQUIT","OBLIQ","mode","qp","qsfnz","mmf","apa","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","ksp","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_re1","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_re1","z_n_im1","delta_x","delta_y","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","s5","cosAz","Ee","sinpsi","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","face","one_minus_f","one_minus_f_squared","xy","area","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","slon","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","Proj","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","common","includedProjections"],"sourceRoot":""}