{"version":3,"file":"map.umd.647.js","mappings":"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","sources":["webpack://map/./node_modules/proj4/lib/global.js","webpack://map/./node_modules/proj4/lib/constants/values.js","webpack://map/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://map/./node_modules/proj4/lib/constants/units.js","webpack://map/./node_modules/proj4/lib/match.js","webpack://map/./node_modules/proj4/lib/projString.js","webpack://map/./node_modules/wkt-parser/parser.js","webpack://map/./node_modules/wkt-parser/process.js","webpack://map/./node_modules/wkt-parser/index.js","webpack://map/./node_modules/proj4/lib/defs.js","webpack://map/./node_modules/proj4/lib/parseCode.js","webpack://map/./node_modules/proj4/lib/extend.js","webpack://map/./node_modules/proj4/lib/common/msfnz.js","webpack://map/./node_modules/proj4/lib/common/sign.js","webpack://map/./node_modules/proj4/lib/common/adjust_lon.js","webpack://map/./node_modules/proj4/lib/common/tsfnz.js","webpack://map/./node_modules/proj4/lib/common/phi2z.js","webpack://map/./node_modules/proj4/lib/projections/merc.js","webpack://map/./node_modules/proj4/lib/projections/longlat.js","webpack://map/./node_modules/proj4/lib/projections.js","webpack://map/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://map/./node_modules/proj4/lib/deriveConstants.js","webpack://map/./node_modules/proj4/lib/constants/Datum.js","webpack://map/./node_modules/proj4/lib/datum.js","webpack://map/./node_modules/proj4/lib/nadgrid.js","webpack://map/./node_modules/proj4/lib/Proj.js","webpack://map/./node_modules/proj4/lib/datumUtils.js","webpack://map/./node_modules/proj4/lib/datum_transform.js","webpack://map/./node_modules/proj4/lib/adjust_axis.js","webpack://map/./node_modules/proj4/lib/common/toPoint.js","webpack://map/./node_modules/proj4/lib/checkSanity.js","webpack://map/./node_modules/proj4/lib/transform.js","webpack://map/./node_modules/proj4/lib/core.js","webpack://map/./node_modules/mgrs/mgrs.js","webpack://map/./node_modules/proj4/lib/Point.js","webpack://map/./node_modules/proj4/lib/common/pj_enfn.js","webpack://map/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://map/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://map/./node_modules/proj4/lib/projections/tmerc.js","webpack://map/./node_modules/proj4/lib/common/sinh.js","webpack://map/./node_modules/proj4/lib/common/hypot.js","webpack://map/./node_modules/proj4/lib/common/log1py.js","webpack://map/./node_modules/proj4/lib/common/asinhy.js","webpack://map/./node_modules/proj4/lib/common/gatg.js","webpack://map/./node_modules/proj4/lib/common/clens.js","webpack://map/./node_modules/proj4/lib/common/cosh.js","webpack://map/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://map/./node_modules/proj4/lib/projections/etmerc.js","webpack://map/./node_modules/proj4/lib/common/adjust_zone.js","webpack://map/./node_modules/proj4/lib/projections/utm.js","webpack://map/./node_modules/proj4/lib/common/srat.js","webpack://map/./node_modules/proj4/lib/projections/gauss.js","webpack://map/./node_modules/proj4/lib/projections/sterea.js","webpack://map/./node_modules/proj4/lib/projections/stere.js","webpack://map/./node_modules/proj4/lib/projections/somerc.js","webpack://map/./node_modules/proj4/lib/projections/omerc.js","webpack://map/./node_modules/proj4/lib/projections/lcc.js","webpack://map/./node_modules/proj4/lib/projections/krovak.js","webpack://map/./node_modules/proj4/lib/common/mlfn.js","webpack://map/./node_modules/proj4/lib/common/e0fn.js","webpack://map/./node_modules/proj4/lib/common/e1fn.js","webpack://map/./node_modules/proj4/lib/common/e2fn.js","webpack://map/./node_modules/proj4/lib/common/e3fn.js","webpack://map/./node_modules/proj4/lib/common/gN.js","webpack://map/./node_modules/proj4/lib/common/adjust_lat.js","webpack://map/./node_modules/proj4/lib/common/imlfn.js","webpack://map/./node_modules/proj4/lib/projections/cass.js","webpack://map/./node_modules/proj4/lib/common/qsfnz.js","webpack://map/./node_modules/proj4/lib/projections/laea.js","webpack://map/./node_modules/proj4/lib/common/asinz.js","webpack://map/./node_modules/proj4/lib/projections/aea.js","webpack://map/./node_modules/proj4/lib/projections/gnom.js","webpack://map/./node_modules/proj4/lib/common/iqsfnz.js","webpack://map/./node_modules/proj4/lib/projections/cea.js","webpack://map/./node_modules/proj4/lib/projections/eqc.js","webpack://map/./node_modules/proj4/lib/projections/poly.js","webpack://map/./node_modules/proj4/lib/projections/nzmg.js","webpack://map/./node_modules/proj4/lib/projections/mill.js","webpack://map/./node_modules/proj4/lib/projections/sinu.js","webpack://map/./node_modules/proj4/lib/projections/moll.js","webpack://map/./node_modules/proj4/lib/projections/eqdc.js","webpack://map/./node_modules/proj4/lib/projections/vandg.js","webpack://map/./node_modules/proj4/lib/projections/aeqd.js","webpack://map/./node_modules/proj4/lib/projections/ortho.js","webpack://map/./node_modules/proj4/lib/projections/qsc.js","webpack://map/./node_modules/proj4/lib/projections/robin.js","webpack://map/./node_modules/proj4/lib/projections/geocent.js","webpack://map/./node_modules/proj4/lib/projections/tpers.js","webpack://map/./node_modules/proj4/lib/projections/geos.js","webpack://map/./node_modules/proj4/projs.js","webpack://map/./node_modules/proj4/lib/index.js"],"sourcesContent":["export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n"],"names":["defs","WGS84","GOOGLE","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","default","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","ft","to_meter","ignoredChar","match","obj","key","keys","Object","lkey","toLowerCase","replace","i","testkey","processedKey","length","PrimeMeridian","units","defData","self","paramObj","split","map","v","trim","filter","a","reduce","p","push","paramName","paramVal","paramOutname","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","parseString","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","text","Error","level","place","root","stack","currentObject","state","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","output","txt","parser","mapit","value","Array","isArray","unshift","thing","out","newObj","item","sExpr","shift","name","convert","rename","outName","inName","d2r","input","cleanWKT","wkt","type","projName","local","PROJECTION","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","slice","sphere","ellps","TOWGS84","isFinite","toMeter","ratio","renamer","list","forEach","lisp","globals","parseProj","that","arguments","def","charAt","apply","EPSG","ESRI","IAU2000","console","log","projStr","testObj","code","testDef","codeWords","testWKT","some","codes","checkMercator","auth","checkProjStr","ext","testProj","parse","maybeProjStr","destination","source","property","undefined","eccent","sinphi","cosphi","con","sqrt","x","sign","abs","phi","com","pow","tan","ts","eccnth","dphi","atan","sin","msfnz","adjust_lon","tsfnz","phi2z","init","es","e","cos","forward","lon","lat","y","inverse","exp","names","identity","pt","merc","longlat","projs","projStore","add","len","n","get","start","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Ellipsoid","eccentricity","a2","b2","ep2","ellipse","wgs84","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","datum_type","grids","loadedNadgrids","nadgrid","data","view","DataView","isLittleEndian","detectLittleEndian","header","readHeader","nSubgrids","subgrids","readSubgrids","getNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","nFields","getInt32","warn","nSubgridFields","shiftType","decodeString","fromSemiMajorAxis","getFloat64","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","end","String","fromCharCode","Uint8Array","buffer","gridOffset","subHeader","readGridHeader","nodes","readGridNodes","lngColumnCount","round","upperLongitude","lowerLongitude","longitudeInterval","latColumnCount","upperLatitude","lowerLatitude","latitudeInterval","ll","del","lim","count","gridNodeCount","cvs","mapNodes","r","longitudeShift","latitudeShift","offset","parent","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","parseCode","extend","projections","dc_sphere","dc_eccentricity","Datum","Projection","srsCode","callback","error","json","ourProj","datumDef","sphere_","ecc","datumObj","compareDatums","dest","geodeticToGeocentric","Longitude","Latitude","Height","z","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Infinity","geocentricToGeodetic","genau","genau2","maxiter","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToWgs84","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","point","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","Number","NaN","onlyMandatoryGrids","attemptedGrids","subgrid","epsilon","minX","minY","maxX","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","tol","dif","indx","floor","frct","inx","f00","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","TypeError","datum_transform","adjust_axis","toPoint","checkSanity","checkNotWGS","transform","enforceAxis","transformer","from","to","coords","transformedArray","concat","splice","checkProj","oProj","proj4","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","accuracy","encode","LLtoUTM","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","degToRad","deg","radToDeg","rad","Lat","Long","eccSquared","LongOrigin","eccPrimeSquared","N","T","C","M","LatRad","LongRad","LongOriginRad","ZoneNumber","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","getLetterDesignator","utm","e1","N1","T1","C1","R1","D","mu","phi1Rad","result","topRight","LetterDesignator","seasting","snorthing","get100kID","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","twoLetter","mgrsString","hunK","sb","testChar","substring","set","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","sep","sepEasting","sepNorthing","accuracyBonus","sepEastingString","sepNorthingString","curCol","eastingValue","rewindMarker","curRow","northingValue","Point","fromMGRS","mgrsStr","toMGRS","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","sphi","cphi","pj_mlfn","MAX_ITER","arg","s","pj_enfn","pj_inv_mlfn","ml0","delta_lon","sin_phi","cos_phi","acos","al","als","c","cs","tq","ml","f","g","temp","h","asin","tan_phi","d","ds","max","min","hypot","log1py","pp","B","cos_2B","h1","h2","arg_r","hr1","hr2","hr","sinh","cosh","arg_i","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","j","hi1","hi","hi2","tmerc","asinhy","gatg","clens","clens_cmplx","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","tmp","adjust_zone","etmerc","dependsOn","esinp","srat","rc","phic0","ratexp","K","DEL_TOL","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","ssfn_","phit","eccen","coslat0","sinlat0","cons","ms1","X0","cosX0","sinX0","sinlat","coslat","sinX","cosX","rh","dlon","ce","Chi","phy0","lambda0","sinPhy0","semiMajorAxis","invF","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","isTypeA","typeAProjections","projectionName","cosph0","F","H","L","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","AB","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","mlfn","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","lam","nl","tl","asq","cl","dd","ml1","nl1","rl1","tl1","dl","dsq","qsfnz","S_POLE","N_POLE","EQUIT","OBLIQ","mode","qp","mmf","apa","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","asinz","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","eccnts","sin_p14","cos_p14","infinity_dist","coslon","ksp","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","iterations","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_re","th_im","th_n_re","th_n_im","th_n_re1","th_n_im1","z_re","z_im","delta_x","delta_y","z_n_re","z_n_im","z_n_re1","z_n_im1","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","s5","cosAz","Ee","sinpsi","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","face","one_minus_f","one_minus_f_squared","xy","area","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","lp","nu","cosmu","tannu","tantheta","invert_sign","xa","slon","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","Proj","common","includedProjections","defaultDatum","version"],"sourceRoot":""}